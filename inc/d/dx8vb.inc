' ########################################################################################
' Microsoft Windows
' File: dx8vb.inc
' Library name: DxVBLibA
' Version: 1.0, Locale ID = 0
' Library GUID: {E1211242-8E94-11D1-8808-00C04FC2C603}
' Path: C:\WINDOWS\system32\dx8vb.dll
' Help file: C:\WINDOWS\system32\directx8_vb.chm
' Contents: DirectX 8 for Visual Basic Type Library
' Copyright (c) 2011 José Roca
' Portions Copyright (c) Microsoft Corporation.
' All Rights Reserved.
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
' EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
' MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
' ########################################################################################

#INCLUDE THIS ONCE
%DX8VB_INC = 1

' ========================================================================================
' ProgIDs (Program identifiers)
' ========================================================================================

' CLSID = {58356C5D-0BFD-48ED-93C5-F4520B6233DE}
$PROGID_D3DX80 = "DIRECT.D3DX8.0"
' CLSID = {E7FF1300-96A5-11D3-AC85-00C04FC2C602}
$PROGID_DirectX80 = "DIRECT.DirectX8.0"

' ========================================================================================
' ClsIDs (Class identifiers)
' ========================================================================================

$CLSID_D3DX8 = GUID$("{58356C5D-0BFD-48ED-93C5-F4520B6233DE}")
$CLSID_DirectX8 = GUID$("{E7FF1300-96A5-11D3-AC85-00C04FC2C602}")

' ========================================================================================
' IIDs (Interface identifiers)
' ========================================================================================

$IID_D3DXBaseMesh = GUID$("{2A835771-BF4D-43F4-8E14-82A809F17D8A}")
$IID_D3DXBuffer = GUID$("{932E6A7E-C68E-45DD-A7BF-53D19C86DB1F}")
$IID_D3DXFont = GUID$("{2D501DF7-D253-4414-865F-A6D54A753138}")
$IID_D3DXMesh = GUID$("{CCAE5C3B-4DD1-4D0F-997E-4684CA64557F}")
$IID_D3DXPMesh = GUID$("{15981AA8-1A05-48E3-BBE7-FF5D49654E3F}")
$IID_D3DXRenderToSurface = GUID$("{69CC587C-E40C-458D-B5D3-B029E18EB60A}")
$IID_D3DXSkinMesh = GUID$("{82A53844-F322-409E-A2E9-992E1104069D}")
$IID_D3DXSPMesh = GUID$("{BC3BBDE2-1F7D-11D3-B929-00C04F68DC23}")
$IID_D3DXSprite = GUID$("{E8691849-87B8-4929-9050-1B0542D5538C}")
$IID_Direct3D8 = GUID$("{1DD9E8DA-1C77-4D40-B0CF-98FEFDFF9512}")
$IID_Direct3DBaseTexture8 = GUID$("{B4211CFA-51B9-4A9F-AB78-DB99B2BB678E}")
$IID_Direct3DCubeTexture8 = GUID$("{3EE5B968-2ACA-4C34-8BB5-7E0C3D19B750}")
$IID_Direct3DDevice8 = GUID$("{7385E5DF-8FE8-41D5-86B6-D7B48547B6CF}")
$IID_Direct3DIndexBuffer8 = GUID$("{0E689C9A-053D-44A0-9D92-DB0E3D750F86}")
$IID_Direct3DResource8 = GUID$("{1B36BB7B-09B7-410A-B445-7D1430D7B33F}")
$IID_Direct3DSurface8 = GUID$("{B96EEBCA-B326-4EA5-882F-2FF5BAE021DD}")
$IID_Direct3DSwapChain8 = GUID$("{928C088B-76B9-4C6B-A536-A590853876CD}")
$IID_Direct3DTexture8 = GUID$("{E4CDD575-2866-4F01-B12E-7EECE1EC9358}")
$IID_Direct3DVertexBuffer8 = GUID$("{8AEEEAC7-05F9-44D4-B591-000B0DF1CB95}")
$IID_Direct3DVolume8 = GUID$("{BD7349F5-14F1-42E4-9C79-972380DB40C0}")
$IID_Direct3DVolumeTexture8 = GUID$("{4B8AAAFA-140F-42BA-9131-597EAFAA2EAD}")
$IID_DirectInput8 = GUID$("{819D20C1-8AD2-11D3-AC85-00C04FC2C602}")
$IID_DirectInputDevice8 = GUID$("{819D20C3-8AD2-11D3-AC85-00C04FC2C602}")
$IID_DirectInputDeviceInstance8 = GUID$("{819D20C2-8AD2-11D3-AC85-00C04FC2C602}")
$IID_DirectInputDeviceObjectInstance = GUID$("{9F76FA05-8E92-11D1-8808-00C04FC2C602}")
$IID_DirectInputEffect = GUID$("{BCAA7DA9-F7EF-11D2-93FD-00C04FC2C602}")
$IID_DirectInputEnumDeviceObjects = GUID$("{9F76FA08-8E92-11D1-8808-00C04FC2C602}")
$IID_DirectInputEnumDevices8 = GUID$("{819D20C4-8AD2-11D3-AC85-00C04FC2C602}")
$IID_DirectInputEnumEffects = GUID$("{BCAA7DAA-F7EF-11D2-93FD-00C04FC2C602}")
$IID_DirectMusicAudioPath8 = GUID$("{A4A8597A-BA7A-4648-B321-1701598844D8}")
$IID_DirectMusicBand8 = GUID$("{FAFA35A3-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicChordMap8 = GUID$("{FAFA35A5-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicCollection8 = GUID$("{FAFA35A8-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicComposer8 = GUID$("{FAFA35A2-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicLoader8 = GUID$("{FAFA35A0-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicPerformance8 = GUID$("{FAFA35A7-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicSegment8 = GUID$("{FAFA35A1-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicSegmentState8 = GUID$("{FAFA35A6-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectMusicStyle8 = GUID$("{FAFA35A4-8B72-11D2-90B2-00C04FC2C603}")
$IID_DirectPlay8Address = GUID$("{ECA8BD2A-7154-4B23-904B-61FF852A906B}")
$IID_DirectPlay8Client = GUID$("{3F6521E5-94BC-4A7A-A049-3D199EB59E72}")
$IID_DirectPlay8Event = GUID$("{F9DCCD1D-E6B9-45ED-B3E2-C32414C71FA4}")
$IID_DirectPlay8LobbiedApplication = GUID$("{EF390476-6EA0-4AD3-9EA3-768DCB68038D}")
$IID_DirectPlay8LobbyClient = GUID$("{14716737-3005-4758-896F-B48D001929A5}")
$IID_DirectPlay8LobbyEvent = GUID$("{F794A01F-2A0D-46A8-9CEF-D5678A413BEF}")
$IID_DirectPlay8Peer = GUID$("{7C34602A-7B81-4C6D-9533-658F2D471EFC}")
$IID_DirectPlay8Server = GUID$("{7584BBA4-1B39-4DCD-A334-D168CBB5A915}")
$IID_DirectPlayVoiceClient8 = GUID$("{9F76FF0F-8E92-11D1-1515-00C04FC2C312}")
$IID_DirectPlayVoiceEvent8 = GUID$("{26AE5141-8010-46EA-861C-F9FC0F8B61D9}")
$IID_DirectPlayVoiceServer8 = GUID$("{9F76FF0F-8E92-11D1-1515-00C04FC2C313}")
$IID_DirectPlayVoiceTest8 = GUID$("{9F76FF0F-8E92-11D1-1515-00C04FC2C314}")
$IID_DirectSound3DBuffer8 = GUID$("{9F76FB03-8E92-11D1-8808-00C04FC2C603}")
$IID_DirectSound3DListener8 = GUID$("{9F76FB02-8E92-11D1-8808-00C04FC2C603}")
$IID_DirectSound8 = GUID$("{9F76FB00-8E92-11D1-8808-00C04FC2C603}")
$IID_DirectSoundCapture8 = GUID$("{9F76FB04-8E92-11D1-8808-00C04FC2C603}")
$IID_DirectSoundCaptureBuffer8 = GUID$("{9F76FB05-8E92-11D1-8808-00C04FC2C603}")
$IID_DirectSoundEnum8 = GUID$("{9F76FB07-8E92-11D1-8808-00C04FC2C603}")
$IID_DirectSoundFXChorus8 = GUID$("{E53AC43D-651F-400D-B01F-E8A14512C6D6}")
$IID_DirectSoundFXCompressor8 = GUID$("{F902315C-D34A-4133-BD65-4069230811DD}")
$IID_DirectSoundFXDistortion8 = GUID$("{3CE4D8D6-B301-49B4-9C63-9A989CA40388}")
$IID_DirectSoundFXEcho8 = GUID$("{E852583A-526F-4875-842B-8DB091A20FBC}")
$IID_DirectSoundFXFlanger8 = GUID$("{9F9C7BB0-F4EA-472B-89A8-36FAADBCE26E}")
$IID_DirectSoundFXGargle8 = GUID$("{B9B28963-4ADC-44F0-873F-9955244C9BD0}")
$IID_DirectSoundFXI3DL2Reverb8 = GUID$("{542C5D87-47FC-457B-859A-1A45BBF71A63}")
$IID_DirectSoundFXParamEq8 = GUID$("{CD83B9C1-B4E9-416B-97F5-0642DC952301}")
$IID_DirectSoundFXWavesReverb8 = GUID$("{A4D4D800-94BE-4C33-9A0E-EBA0696A63A9}")
$IID_DirectSoundPrimaryBuffer8 = GUID$("{4E6F040E-03FB-4BA1-897C-2265700D5368}")
$IID_DirectSoundSecondaryBuffer8 = GUID$("{9F76FB01-8E92-11D1-8808-00C04FC2C603}")
$IID_DirectXEvent8 = GUID$("{D1CA9B18-9ED2-43B5-8759-7A5C892D4C5C}")
$IID_DirectXFile = GUID$("{E7FF12E3-96A5-11D3-AC85-00C04FC2C602}")
$IID_DirectXFileBinary = GUID$("{E7FF12E9-96A5-11D3-AC85-00C04FC2C602}")
$IID_DirectXFileData = GUID$("{E7FF12E7-96A5-11D3-AC85-00C04FC2C602}")
$IID_DirectXFileEnum = GUID$("{E7FF12E4-96A5-11D3-AC85-00C04FC2C602}")
$IID_DirectXFileObject = GUID$("{E7FF12E6-96A5-11D3-AC85-00C04FC2C602}")
$IID_DirectXFileReference = GUID$("{E7FF12E8-96A5-11D3-AC85-00C04FC2C602}")
$IID_DirectXFileSave = GUID$("{E7FF12E5-96A5-11D3-AC85-00C04FC2C602}")
$IID_ID3DX8 = GUID$("{3AC50043-CF82-4C44-862E-B206B4F03301}")
$IID_IDirectX8 = GUID$("{E7FF1301-96A5-11D3-AC85-00C04FC2C602}")

' ========================================================================================
' DSETUPFLAGS enum <alias> CONST_DSETUPFLAGS
' ========================================================================================

%DSETUP_DDRAWDRV                                        = 8            ' &H8
%DSETUP_DSOUNDDRV                                       = 16           ' &H10
%DSETUP_DXCORE                                          = 65536        ' &H10000
%DSETUP_DIRECTX                                         = 65560        ' &H10018
%DSETUP_TESTINSTALL                                     = 131072       ' &H20000

' ========================================================================================
' DSETUPCALLBACKFLAGS enum <alias> CONST_DSETUPCALLBACKFLAGS
' ========================================================================================

%DSETUP_CB_MSG_NOMESSAGE                                = 0            ' &H0
%DSETUP_CB_MSG_CANTINSTALL_UNKNOWNOS                    = 1            ' &H1
%DSETUP_CB_MSG_CANTINSTALL_NT                           = 2            ' &H2
%DSETUP_CB_MSG_CANTINSTALL_BETA                         = 3            ' &H3
%DSETUP_CB_MSG_CANTINSTALL_NOTWIN32                     = 4            ' &H4
%DSETUP_CB_MSG_CANTINSTALL_WRONGLANGUAGE                = 5            ' &H5
%DSETUP_CB_MSG_CANTINSTALL_WRONGPLATFORM                = 6            ' &H6
%DSETUP_CB_MSG_PREINSTALL_NT                            = 7            ' &H7
%DSETUP_CB_MSG_NOTPREINSTALLEDONNT                      = 8            ' &H8
%DSETUP_CB_MSG_SETUP_INIT_FAILED                        = 9            ' &H9
%DSETUP_CB_MSG_INTERNAL_ERROR                           = 10           ' &HA
%DSETUP_CB_MSG_CHECK_DRIVER_UPGRADE                     = 11           ' &HB
%DSETUP_CB_MSG_OUTOFDISKSPACE                           = 12           ' &HC
%DSETUP_CB_MSG_BEGIN_INSTALL                            = 13           ' &HD
%DSETUP_CB_MSG_BEGIN_INSTALL_RUNTIME                    = 14           ' &HE
%DSETUP_CB_MSG_BEGIN_INSTALL_DRIVERS                    = 15           ' &HF
%DSETUP_CB_MSG_BEGIN_RESTORE_DRIVERS                    = 16           ' &H10
%DSETUP_CB_MSG_FILECOPYERROR                            = 17           ' &H11
%DSETUP_CB_UPGRADE_TYPE_MASK                            = 15           ' &HF
%DSETUP_CB_UPGRADE_KEEP                                 = 1            ' &H1
%DSETUP_CB_UPGRADE_SAFE                                 = 2            ' &H2
%DSETUP_CB_UPGRADE_FORCE                                = 4            ' &H4
%DSETUP_CB_UPGRADE_UNKNOWN                              = 8            ' &H8
%DSETUP_CB_UPGRADE_HASWARNINGS                          = 256          ' &H100
%DSETUP_CB_UPGRADE_CANTBACKUP                           = 512          ' &H200
%DSETUP_CB_UPGRADE_DEVICE_ACTIVE                        = 2048         ' &H800
%DSETUP_CB_UPGRADE_DEVICE_DISPLAY                       = 4096         ' &H1000
%DSETUP_CB_UPGRADE_DEVICE_MEDIA                         = 8192         ' &H2000

' ========================================================================================
' DSETUPERR enum <alias> CONST_DSETUPERR
' ========================================================================================

%DSETUPERR_SUCCESS_RESTART                              = 1            ' &H1
%DSETUPERR_SUCCESS                                      = 0            ' &H0
%DSETUPERR_BADWINDOWSVERSION                            = -1           ' &HFFFFFFFF
%DSETUPERR_SOURCEFILENOTFOUND                           = -2           ' &HFFFFFFFE
%DSETUPERR_BADSOURCESIZE                                = -3           ' &HFFFFFFFD
%DSETUPERR_BADSOURCETIME                                = -4           ' &HFFFFFFFC
%DSETUPERR_NOCOPY                                       = -5           ' &HFFFFFFFB
%DSETUPERR_OUTOFDISKSPACE                               = -6           ' &HFFFFFFFA
%DSETUPERR_CANTFINDINF                                  = -7           ' &HFFFFFFF9
%DSETUPERR_CANTFINDDIR                                  = -8           ' &HFFFFFFF8
%DSETUPERR_INTERNAL                                     = -9           ' &HFFFFFFF7
%DSETUPERR_NTWITHNO3D                                   = -10          ' &HFFFFFFF6
%DSETUPERR_UNKNOWNOS                                    = -11          ' &HFFFFFFF5
%DSETUPERR_USERHITCANCEL                                = -12          ' &HFFFFFFF4
%DSETUPERR_NOTPREINSTALLEDONNT                          = -13          ' &HFFFFFFF3

' ========================================================================================
' CONST_D3DFORMAT enum
' ========================================================================================

%D3DFMT_UNKNOWN                                         = 0            ' &H0
%D3DFMT_R8G8B8                                          = 20           ' &H14
%D3DFMT_A8R8G8B8                                        = 21           ' &H15
%D3DFMT_X8R8G8B8                                        = 22           ' &H16
%D3DFMT_R5G6B5                                          = 23           ' &H17
%D3DFMT_X1R5G5B5                                        = 24           ' &H18
%D3DFMT_A1R5G5B5                                        = 25           ' &H19
%D3DFMT_A4R4G4B4                                        = 26           ' &H1A
%D3DFMT_R3G3B2                                          = 27           ' &H1B
%D3DFMT_A8                                              = 28           ' &H1C
%D3DFMT_A8R3G3B2                                        = 29           ' &H1D
%D3DFMT_X4R4G4B4                                        = 30           ' &H1E
%D3DFMT_A8P8                                            = 40           ' &H28
%D3DFMT_P8                                              = 41           ' &H29
%D3DFMT_L8                                              = 50           ' &H32
%D3DFMT_A8L8                                            = 51           ' &H33
%D3DFMT_A4L4                                            = 52           ' &H34
%D3DFMT_V8U8                                            = 60           ' &H3C
%D3DFMT_L6V5U5                                          = 61           ' &H3D
%D3DFMT_X8L8V8U8                                        = 62           ' &H3E
%D3DFMT_Q8W8V8U8                                        = 63           ' &H3F
%D3DFMT_V16U16                                          = 64           ' &H40
%D3DFMT_W11V11U10                                       = 65           ' &H41
%D3DFMT_UYVY                                            = 1498831189   ' &H59565955
%D3DFMT_YUY2                                            = 844715353    ' &H32595559
%D3DFMT_DXT1                                            = 827611204    ' &H31545844
%D3DFMT_DXT2                                            = 844388420    ' &H32545844
%D3DFMT_DXT3                                            = 861165636    ' &H33545844
%D3DFMT_DXT4                                            = 877942852    ' &H34545844
%D3DFMT_DXT5                                            = 894720068    ' &H35545844
%D3DFMT_D16_LOCKABLE                                    = 70           ' &H46
%D3DFMT_D32                                             = 71           ' &H47
%D3DFMT_D15S1                                           = 73           ' &H49
%D3DFMT_D24S8                                           = 75           ' &H4B
%D3DFMT_D24X8                                           = 77           ' &H4D
%D3DFMT_D24X4S4                                         = 79           ' &H4F
%D3DFMT_D16                                             = 80           ' &H50
%D3DFMT_VERTEXDATA                                      = 100          ' &H64
%D3DFMT_INDEX16                                         = 101          ' &H65
%D3DFMT_INDEX32                                         = 102          ' &H66
%D3DFMT_FORCE_DWORD                                     = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DDEVTYPE enum
' ========================================================================================

%D3DDEVTYPE_HAL                                         = 1            ' &H1
%D3DDEVTYPE_REF                                         = 2            ' &H2
%D3DDEVTYPE_SW                                          = 3            ' &H3
%D3DDEVTYPE_FORCE_DWORD                                 = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DRESOURCETYPE enum
' ========================================================================================

%D3DRTYPE_SURFACE                                       = 1            ' &H1
%D3DRTYPE_VOLUME                                        = 2            ' &H2
%D3DRTYPE_TEXTURE                                       = 3            ' &H3
%D3DRTYPE_VOLUMETEXTURE                                 = 4            ' &H4
%D3DRTYPE_CUBETEXTURE                                   = 5            ' &H5
%D3DRTYPE_VERTEXBUFFER                                  = 6            ' &H6
%D3DRTYPE_INDEXBUFFER                                   = 7            ' &H7
%D3DRTYPE_FORCE_DWORD                                   = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DMULTISAMPLE_TYPE enum
' ========================================================================================

%D3DMULTISAMPLE_NONE                                    = 0            ' &H0
%D3DMULTISAMPLE_2_SAMPLES                               = 2            ' &H2
%D3DMULTISAMPLE_3_SAMPLES                               = 3            ' &H3
%D3DMULTISAMPLE_4_SAMPLES                               = 4            ' &H4
%D3DMULTISAMPLE_5_SAMPLES                               = 5            ' &H5
%D3DMULTISAMPLE_6_SAMPLES                               = 6            ' &H6
%D3DMULTISAMPLE_7_SAMPLES                               = 7            ' &H7
%D3DMULTISAMPLE_8_SAMPLES                               = 8            ' &H8
%D3DMULTISAMPLE_9_SAMPLES                               = 9            ' &H9
%D3DMULTISAMPLE_10_SAMPLES                              = 10           ' &HA
%D3DMULTISAMPLE_11_SAMPLES                              = 11           ' &HB
%D3DMULTISAMPLE_12_SAMPLES                              = 12           ' &HC
%D3DMULTISAMPLE_13_SAMPLES                              = 13           ' &HD
%D3DMULTISAMPLE_14_SAMPLES                              = 14           ' &HE
%D3DMULTISAMPLE_15_SAMPLES                              = 15           ' &HF
%D3DMULTISAMPLE_16_SAMPLES                              = 16           ' &H10
%D3DMULTISAMPLE_FORCE_DWORD                             = -1           ' &HFFFFFFFF

' ========================================================================================
' CONST_D3DCREATEFLAGS enum
' ========================================================================================

%D3DCREATE_FPU_PRESERVE                                 = 2            ' &H2
%D3DCREATE_MULTITHREADED                                = 4            ' &H4
%D3DCREATE_PUREDEVICE                                   = 16           ' &H10
%D3DCREATE_SOFTWARE_VERTEXPROCESSING                    = 32           ' &H20
%D3DCREATE_HARDWARE_VERTEXPROCESSING                    = 64           ' &H40
%D3DCREATE_MIXED_VERTEXPROCESSING                       = 128          ' &H80

' ========================================================================================
' CONST_D3DSWAPEFFECT enum
' ========================================================================================

%D3DSWAPEFFECT_DISCARD                                  = 1            ' &H1
%D3DSWAPEFFECT_FLIP                                     = 2            ' &H2
%D3DSWAPEFFECT_COPY                                     = 3            ' &H3
%D3DSWAPEFFECT_COPY_VSYNC                               = 4            ' &H4
%D3DSWAPEFFECT_FORCE_DWORD                              = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DPOOL enum
' ========================================================================================

%D3DPOOL_DEFAULT                                        = 0            ' &H0
%D3DPOOL_MANAGED                                        = 1            ' &H1
%D3DPOOL_SYSTEMMEM                                      = 2            ' &H2
%D3DPOOL_FORCE_DWORD                                    = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DSCPFLAGS enum
' ========================================================================================

%D3DUCURSOR_DEFAULT                                     = 0            ' &H0
%D3DUCURSOR_IMMEDIATE_UPDATE                            = 1            ' &H1

' ========================================================================================
' CONST_D3DBACKBUFFERTYPE enum
' ========================================================================================

%D3DBACKBUFFER_TYPE_MONO                                = 0            ' &H0
%D3DBACKBUFFER_TYPE_LEFT                                = 1            ' &H1
%D3DBACKBUFFER_TYPE_RIGHT                               = 2            ' &H2
%D3DBACKBUFFER_TYPE_FORCE_DWORD                         = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DCUBEMAP_FACES enum
' ========================================================================================

%D3DCUBEMAP_FACE_POSITIVE_X                             = 0            ' &H0
%D3DCUBEMAP_FACE_NEGATIVE_X                             = 1            ' &H1
%D3DCUBEMAP_FACE_POSITIVE_Y                             = 2            ' &H2
%D3DCUBEMAP_FACE_NEGATIVE_Y                             = 3            ' &H3
%D3DCUBEMAP_FACE_POSITIVE_Z                             = 4            ' &H4
%D3DCUBEMAP_FACE_NEGATIVE_Z                             = 5            ' &H5
%D3DCUBEMAP_FACE_FORCE_DWORD                            = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DCLEARFLAGS enum
' ========================================================================================

%D3DCLEAR_TARGET                                        = 1            ' &H1
%D3DCLEAR_ZBUFFER                                       = 2            ' &H2
%D3DCLEAR_STENCIL                                       = 4            ' &H4
%D3DCLEAR_FORCE_DWORD                                   = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DTRANSFORMSTATETYPE enum
' ========================================================================================

%D3DTS_WORLD                                            = 256          ' &H100
%D3DTS_VIEW                                             = 2            ' &H2
%D3DTS_PROJECTION                                       = 3            ' &H3
%D3DTS_WORLD1                                           = 257          ' &H101
%D3DTS_WORLD2                                           = 258          ' &H102
%D3DTS_WORLD3                                           = 259          ' &H103
%D3DTS_TEXTURE0                                         = 16           ' &H10
%D3DTS_TEXTURE1                                         = 17           ' &H11
%D3DTS_TEXTURE2                                         = 18           ' &H12
%D3DTS_TEXTURE3                                         = 19           ' &H13
%D3DTS_TEXTURE4                                         = 20           ' &H14
%D3DTS_TEXTURE5                                         = 21           ' &H15
%D3DTS_TEXTURE6                                         = 22           ' &H16
%D3DTS_TEXTURE7                                         = 23           ' &H17
%D3DTS_FORCE_DWORD                                      = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DLIGHTTYPE enum
' ========================================================================================

%D3DLIGHT_POINT                                         = 1            ' &H1
%D3DLIGHT_SPOT                                          = 2            ' &H2
%D3DLIGHT_DIRECTIONAL                                   = 3            ' &H3
%D3DLIGHT_FORCE_DWORD                                   = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DRENDERSTATETYPE enum
' ========================================================================================

%D3DRS_ZENABLE                                          = 7            ' &H7
%D3DRS_FILLMODE                                         = 8            ' &H8
%D3DRS_SHADEMODE                                        = 9            ' &H9
%D3DRS_LINEPATTERN                                      = 10           ' &HA
%D3DRS_ZWRITEENABLE                                     = 14           ' &HE
%D3DRS_ALPHATESTENABLE                                  = 15           ' &HF
%D3DRS_LASTPIXEL                                        = 16           ' &H10
%D3DRS_SRCBLEND                                         = 19           ' &H13
%D3DRS_DESTBLEND                                        = 20           ' &H14
%D3DRS_CULLMODE                                         = 22           ' &H16
%D3DRS_ZFUNC                                            = 23           ' &H17
%D3DRS_ALPHAREF                                         = 24           ' &H18
%D3DRS_ALPHAFUNC                                        = 25           ' &H19
%D3DRS_DITHERENABLE                                     = 26           ' &H1A
%D3DRS_ALPHABLENDENABLE                                 = 27           ' &H1B
%D3DRS_FOGENABLE                                        = 28           ' &H1C
%D3DRS_SPECULARENABLE                                   = 29           ' &H1D
%D3DRS_ZVISIBLE                                         = 30           ' &H1E
%D3DRS_FOGCOLOR                                         = 34           ' &H22
%D3DRS_FOGTABLEMODE                                     = 35           ' &H23
%D3DRS_FOGSTART                                         = 36           ' &H24
%D3DRS_FOGEND                                           = 37           ' &H25
%D3DRS_FOGDENSITY                                       = 38           ' &H26
%D3DRS_EDGEANTIALIAS                                    = 40           ' &H28
%D3DRS_ZBIAS                                            = 47           ' &H2F
%D3DRS_RANGEFOGENABLE                                   = 48           ' &H30
%D3DRS_STENCILENABLE                                    = 52           ' &H34
%D3DRS_STENCILFAIL                                      = 53           ' &H35
%D3DRS_STENCILZFAIL                                     = 54           ' &H36
%D3DRS_STENCILPASS                                      = 55           ' &H37
%D3DRS_STENCILFUNC                                      = 56           ' &H38
%D3DRS_STENCILREF                                       = 57           ' &H39
%D3DRS_STENCILMASK                                      = 58           ' &H3A
%D3DRS_STENCILWRITEMASK                                 = 59           ' &H3B
%D3DRS_TEXTUREFACTOR                                    = 60           ' &H3C
%D3DRS_WRAP0                                            = 128          ' &H80
%D3DRS_WRAP1                                            = 129          ' &H81
%D3DRS_WRAP2                                            = 130          ' &H82
%D3DRS_WRAP3                                            = 131          ' &H83
%D3DRS_WRAP4                                            = 132          ' &H84
%D3DRS_WRAP5                                            = 133          ' &H85
%D3DRS_WRAP6                                            = 134          ' &H86
%D3DRS_WRAP7                                            = 135          ' &H87
%D3DRS_CLIPPING                                         = 136          ' &H88
%D3DRS_LIGHTING                                         = 137          ' &H89
%D3DRS_AMBIENT                                          = 139          ' &H8B
%D3DRS_FOGVERTEXMODE                                    = 140          ' &H8C
%D3DRS_COLORVERTEX                                      = 141          ' &H8D
%D3DRS_LOCALVIEWER                                      = 142          ' &H8E
%D3DRS_NORMALIZENORMALS                                 = 143          ' &H8F
%D3DRS_DIFFUSEMATERIALSOURCE                            = 145          ' &H91
%D3DRS_SPECULARMATERIALSOURCE                           = 146          ' &H92
%D3DRS_AMBIENTMATERIALSOURCE                            = 147          ' &H93
%D3DRS_EMISSIVEMATERIALSOURCE                           = 148          ' &H94
%D3DRS_VERTEXBLEND                                      = 151          ' &H97
%D3DRS_CLIPPLANEENABLE                                  = 152          ' &H98
%D3DRS_SOFTWAREVERTEXPROCESSING                         = 153          ' &H99
%D3DRS_POINTSIZE                                        = 154          ' &H9A
%D3DRS_POINTSIZE_MIN                                    = 155          ' &H9B
%D3DRS_POINTSPRITE_ENABLE                               = 156          ' &H9C
%D3DRS_POINTSCALE_ENABLE                                = 157          ' &H9D
%D3DRS_POINTSCALE_A                                     = 158          ' &H9E
%D3DRS_POINTSCALE_B                                     = 159          ' &H9F
%D3DRS_POINTSCALE_C                                     = 160          ' &HA0
%D3DRS_MULTISAMPLE_ANTIALIAS                            = 161          ' &HA1
%D3DRS_MULTISAMPLE_MASK                                 = 162          ' &HA2
%D3DRS_PATCHEDGESTYLE                                   = 163          ' &HA3
%D3DRS_PATCHSEGMENTS                                    = 164          ' &HA4
%D3DRS_DEBUGMONITORTOKEN                                = 165          ' &HA5
%D3DRS_POINT_SIZE_MAX                                   = 166          ' &HA6
%D3DRS_INDEXVERTEXBLENDENABLE                           = 167          ' &HA7
%D3DRS_COLORWRITEENABLE                                 = 168          ' &HA8
%D3DRS_TWEENFACTOR                                      = 170          ' &HAA
%D3DRS_BLENDOP                                          = 171          ' &HAB
%D3DRS_FORCE_DWORD                                      = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DSTATEBLOCKTYPE enum
' ========================================================================================

%D3DSBT_ALL                                             = 1            ' &H1
%D3DSBT_PIXELSTATE                                      = 2            ' &H2
%D3DSBT_VERTEXSTATE                                     = 3            ' &H3
%D3DSBT_FORCE_DWORD                                     = -1           ' &HFFFFFFFF

' ========================================================================================
' CONST_D3DTEXTURESTAGESTATETYPE enum
' ========================================================================================

%D3DTSS_COLOROP                                         = 1            ' &H1
%D3DTSS_COLORARG1                                       = 2            ' &H2
%D3DTSS_COLORARG2                                       = 3            ' &H3
%D3DTSS_ALPHAOP                                         = 4            ' &H4
%D3DTSS_ALPHAARG1                                       = 5            ' &H5
%D3DTSS_ALPHAARG2                                       = 6            ' &H6
%D3DTSS_BUMPENVMAT00                                    = 7            ' &H7
%D3DTSS_BUMPENVMAT01                                    = 8            ' &H8
%D3DTSS_BUMPENVMAT10                                    = 9            ' &H9
%D3DTSS_BUMPENVMAT11                                    = 10           ' &HA
%D3DTSS_TEXCOORDINDEX                                   = 11           ' &HB
%D3DTSS_ADDRESSU                                        = 13           ' &HD
%D3DTSS_ADDRESSV                                        = 14           ' &HE
%D3DTSS_BORDERCOLOR                                     = 15           ' &HF
%D3DTSS_MAGFILTER                                       = 16           ' &H10
%D3DTSS_MINFILTER                                       = 17           ' &H11
%D3DTSS_MIPFILTER                                       = 18           ' &H12
%D3DTSS_MIPMAPLODBIAS                                   = 19           ' &H13
%D3DTSS_MAXMIPLEVEL                                     = 20           ' &H14
%D3DTSS_MAXANISOTROPY                                   = 21           ' &H15
%D3DTSS_BUMPENVLSCALE                                   = 22           ' &H16
%D3DTSS_BUMPENVLOFFSET                                  = 23           ' &H17
%D3DTSS_TEXTURETRANSFORMFLAGS                           = 24           ' &H18
%D3DTSS_ADDRESSW                                        = 25           ' &H19
%D3DTSS_COLORARG0                                       = 26           ' &H1A
%D3DTSS_ALPHAARG0                                       = 27           ' &H1B
%D3DTSS_RESULTARG                                       = 28           ' &H1C
%D3DTSS_FORCE_DWORD                                     = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DPRIMITIVETYPE enum
' ========================================================================================

%D3DPT_POINTLIST                                        = 1            ' &H1
%D3DPT_LINELIST                                         = 2            ' &H2
%D3DPT_LINESTRIP                                        = 3            ' &H3
%D3DPT_TRIANGLELIST                                     = 4            ' &H4
%D3DPT_TRIANGLESTRIP                                    = 5            ' &H5
%D3DPT_TRIANGLEFAN                                      = 6            ' &H6
%D3DPT_FORCE_DWORD                                      = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DPMISCCAPSFLAGS enum
' ========================================================================================

%D3DPMISCCAPS_MASKZ                                     = 2            ' &H2
%D3DPMISCCAPS_LINEPATTERNREP                            = 4            ' &H4
%D3DPMISCCAPS_CULLNONE                                  = 16           ' &H10
%D3DPMISCCAPS_CULLCW                                    = 32           ' &H20
%D3DPMISCCAPS_CULLCCW                                   = 64           ' &H40
%D3DPMISCCAPS_COLORWRITEENABLE                          = 128          ' &H80
%D3DPMISCCAPS_CLIPPLANESCALEDPOINTS                     = 256          ' &H100
%D3DPMISCCAPS_CLIPTLVERTS                               = 512          ' &H200
%D3DPMISCCAPS_TSSARGTEMP                                = 1024         ' &H400
%D3DPMISCCAPS_BLENDOP                                   = 2048         ' &H800

' ========================================================================================
' CONST_D3DLINECAPS enum
' ========================================================================================

%D3DLINECAPS_TEXTURE                                    = 1            ' &H1
%D3DLINECAPS_ZTEST                                      = 2            ' &H2
%D3DLINECAPS_BLEND                                      = 4            ' &H4
%D3DLINECAPS_ALPHACMP                                   = 8            ' &H8
%D3DLINECAPS_FOG                                        = 16           ' &H10

' ========================================================================================
' CONST_D3DPRASTERCAPSFLAGS enum
' ========================================================================================

%D3DPRASTERCAPS_DITHER                                  = 1            ' &H1
%D3DPRASTERCAPS_ROP2                                    = 2            ' &H2
%D3DPRASTERCAPS_XOR                                     = 4            ' &H4
%D3DPRASTERCAPS_PAT                                     = 8            ' &H8
%D3DPRASTERCAPS_ZTEST                                   = 16           ' &H10
%D3DPRASTERCAPS_FOGVERTEX                               = 128          ' &H80
%D3DPRASTERCAPS_FOGTABLE                                = 256          ' &H100
%D3DPRASTERCAPS_ANTIALIASEDGES                          = 4096         ' &H1000
%D3DPRASTERCAPS_MIPMAPLODBIAS                           = 8192         ' &H2000
%D3DPRASTERCAPS_ZBIAS                                   = 16384        ' &H4000
%D3DPRASTERCAPS_ZBUFFERLESSHSR                          = 32768        ' &H8000
%D3DPRASTERCAPS_FOGRANGE                                = 65536        ' &H10000
%D3DPRASTERCAPS_ANISOTROPY                              = 131072       ' &H20000
%D3DPRASTERCAPS_WBUFFER                                 = 262144       ' &H40000
%D3DPRASTERCAPS_WFOG                                    = 1048576      ' &H100000
%D3DPRASTERCAPS_ZFOG                                    = 2097152      ' &H200000
%D3DPRASTERCAPS_COLORPERSPECTIVE                        = 4194304      ' &H400000
%D3DPRASTERCAPS_STRETCHBLTMULTISAMPLE                   = 8388608      ' &H800000

' ========================================================================================
' CONST_D3DPCMPCAPSFLAGS enum
' ========================================================================================

%D3DPCMPCAPS_NEVER                                      = 1            ' &H1
%D3DPCMPCAPS_LESS                                       = 2            ' &H2
%D3DPCMPCAPS_EQUAL                                      = 4            ' &H4
%D3DPCMPCAPS_LESSEQUAL                                  = 8            ' &H8
%D3DPCMPCAPS_GREATER                                    = 16           ' &H10
%D3DPCMPCAPS_NOTEQUAL                                   = 32           ' &H20
%D3DPCMPCAPS_GREATEREQUAL                               = 64           ' &H40
%D3DPCMPCAPS_ALWAYS                                     = 128          ' &H80

' ========================================================================================
' CONST_D3DPBLENDCAPSFLAGS enum
' ========================================================================================

%D3DPBLENDCAPS_ZERO                                     = 1            ' &H1
%D3DPBLENDCAPS_ONE                                      = 2            ' &H2
%D3DPBLENDCAPS_SRCCOLOR                                 = 4            ' &H4
%D3DPBLENDCAPS_INVSRCCOLOR                              = 8            ' &H8
%D3DPBLENDCAPS_SRCALPHA                                 = 16           ' &H10
%D3DPBLENDCAPS_INVSRCALPHA                              = 32           ' &H20
%D3DPBLENDCAPS_DESTALPHA                                = 64           ' &H40
%D3DPBLENDCAPS_INVDESTALPHA                             = 128          ' &H80
%D3DPBLENDCAPS_DESTCOLOR                                = 256          ' &H100
%D3DPBLENDCAPS_INVDESTCOLOR                             = 512          ' &H200
%D3DPBLENDCAPS_SRCALPHASAT                              = 1024         ' &H400
%D3DPBLENDCAPS_BOTHSRCALPHA                             = 2048         ' &H800
%D3DPBLENDCAPS_BOTHINVSRCALPHA                          = 4096         ' &H1000

' ========================================================================================
' CONST_D3DPSHADECAPSFLAGS enum
' ========================================================================================

%D3DPSHADECAPS_COLORGOURAUDRGB                          = 8            ' &H8
%D3DPSHADECAPS_SPECULARGOURAUDRGB                       = 512          ' &H200
%D3DPSHADECAPS_ALPHAGOURAUDBLEND                        = 16384        ' &H4000
%D3DPSHADECAPS_FOGGOURAUD                               = 524288       ' &H80000

' ========================================================================================
' CONST_D3DPTEXTURECAPSFLAGS enum
' ========================================================================================

%D3DPTEXTURECAPS_PERSPECTIVE                            = 1            ' &H1
%D3DPTEXTURECAPS_POW2                                   = 2            ' &H2
%D3DPTEXTURECAPS_ALPHA                                  = 4            ' &H4
%D3DPTEXTURECAPS_SQUAREONLY                             = 32           ' &H20
%D3DPTEXTURECAPS_TEXREPEATNOTSCALEDBYSIZE               = 64           ' &H40
%D3DPTEXTURECAPS_ALPHAPALETTE                           = 128          ' &H80
%D3DPTEXTURECAPS_NONPOW2CONDITIONAL                     = 256          ' &H100
%D3DPTEXTURECAPS_PROJECTED                              = 1024         ' &H400
%D3DPTEXTURECAPS_CUBEMAP                                = 2048         ' &H800
%D3DPTEXTURECAPS_VOLUMEMAP                              = 8192         ' &H2000
%D3DPTEXTURECAPS_MIPMAP                                 = 16384        ' &H4000
%D3DPTEXTURECAPS_MIPVOLUMEMAP                           = 32768        ' &H8000
%D3DPTEXTURECAPS_MIPCUBEMAP                             = 65536        ' &H10000
%D3DPTEXTURECAPS_CUBEMAP_POW2                           = 131072       ' &H20000
%D3DPTEXTURECAPS_VOLUMEMAP_POW2                         = 262144       ' &H40000

' ========================================================================================
' CONST_D3DPTFILTERCAPSFLAGS enum
' ========================================================================================

%D3DPTFILTERCAPS_MINFPOINT                              = 256          ' &H100
%D3DPTFILTERCAPS_MINFLINEAR                             = 512          ' &H200
%D3DPTFILTERCAPS_MINFANISOTROPIC                        = 1024         ' &H400
%D3DPTFILTERCAPS_MIPFPOINT                              = 65536        ' &H10000
%D3DPTFILTERCAPS_MIPFLINEAR                             = 131072       ' &H20000
%D3DPTFILTERCAPS_MAGFPOINT                              = 16777216     ' &H1000000
%D3DPTFILTERCAPS_MAGFLINEAR                             = 33554432     ' &H2000000
%D3DPTFILTERCAPS_MAGFANISOTROPIC                        = 67108864     ' &H4000000
%D3DPTFILTERCAPS_MAGFAFLATCUBIC                         = 134217728    ' &H8000000
%D3DPTFILTERCAPS_MAGFGAUSSIANCUBIC                      = 268435456    ' &H10000000

' ========================================================================================
' CONST_D3DPTBLENDCAPSFLAGS enum
' ========================================================================================

%D3DPTBLENDCAPS_DECAL                                   = 1            ' &H1
%D3DPTBLENDCAPS_MODULATE                                = 2            ' &H2
%D3DPTBLENDCAPS_DECALALPHA                              = 4            ' &H4
%D3DPTBLENDCAPS_MODULATEALPHA                           = 8            ' &H8
%D3DPTBLENDCAPS_DECALMASK                               = 16           ' &H10
%D3DPTBLENDCAPS_MODULATEMASK                            = 32           ' &H20
%D3DPTBLENDCAPS_COPY                                    = 64           ' &H40
%D3DPTBLENDCAPS_ADD                                     = 128          ' &H80

' ========================================================================================
' CONST_D3DPTADDRESSCAPSFLAGS enum
' ========================================================================================

%D3DPTADDRESSCAPS_WRAP                                  = 1            ' &H1
%D3DPTADDRESSCAPS_MIRROR                                = 2            ' &H2
%D3DPTADDRESSCAPS_CLAMP                                 = 4            ' &H4
%D3DPTADDRESSCAPS_BORDER                                = 8            ' &H8
%D3DPTADDRESSCAPS_INDEPENDENTUV                         = 16           ' &H10
%D3DPTADDRESSCAPS_MIRRORONCE                            = 32           ' &H20

' ========================================================================================
' CONST_D3DSTENCILCAPFLAGS enum
' ========================================================================================

%D3DSTENCILCAPS_KEEP                                    = 1            ' &H1
%D3DSTENCILCAPS_ZERO                                    = 2            ' &H2
%D3DSTENCILCAPS_REPLACE                                 = 4            ' &H4
%D3DSTENCILCAPS_INCRSAT                                 = 8            ' &H8
%D3DSTENCILCAPS_DECRSAT                                 = 16           ' &H10
%D3DSTENCILCAPS_INVERT                                  = 32           ' &H20
%D3DSTENCILCAPS_INCR                                    = 64           ' &H40
%D3DSTENCILCAPS_DECR                                    = 128          ' &H80

' ========================================================================================
' CONST_D3DTEXOPCAPSFLAGS enum
' ========================================================================================

%D3DTEXOPCAPS_DISABLE                                   = 1            ' &H1
%D3DTEXOPCAPS_SELECTARG1                                = 2            ' &H2
%D3DTEXOPCAPS_SELECTARG2                                = 4            ' &H4
%D3DTEXOPCAPS_MODULATE                                  = 8            ' &H8
%D3DTEXOPCAPS_MODULATE2X                                = 16           ' &H10
%D3DTEXOPCAPS_MODULATE4X                                = 32           ' &H20
%D3DTEXOPCAPS_ADD                                       = 64           ' &H40
%D3DTEXOPCAPS_ADDSIGNED                                 = 128          ' &H80
%D3DTEXOPCAPS_ADDSIGNED2X                               = 256          ' &H100
%D3DTEXOPCAPS_SUBTRACT                                  = 512          ' &H200
%D3DTEXOPCAPS_ADDSMOOTH                                 = 1024         ' &H400
%D3DTEXOPCAPS_BLENDDIFFUSEALPHA                         = 2048         ' &H800
%D3DTEXOPCAPS_BLENDTEXTUREALPHA                         = 4096         ' &H1000
%D3DTEXOPCAPS_BLENDFACTORALPHA                          = 8192         ' &H2000
%D3DTEXOPCAPS_BLENDTEXTUREALPHAPM                       = 16384        ' &H4000
%D3DTEXOPCAPS_BLENDCURRENTALPHA                         = 32768        ' &H8000
%D3DTEXOPCAPS_PREMODULATE                               = 65536        ' &H10000
%D3DTEXOPCAPS_MODULATEALPHA_ADDCOLOR                    = 131072       ' &H20000
%D3DTEXOPCAPS_MODULATECOLOR_ADDALPHA                    = 262144       ' &H40000
%D3DTEXOPCAPS_MODULATEINVALPHA_ADDCOLOR                 = 524288       ' &H80000
%D3DTEXOPCAPS_MODULATEINVCOLOR_ADDALPHA                 = 1048576      ' &H100000
%D3DTEXOPCAPS_BUMPENVMAP                                = 2097152      ' &H200000
%D3DTEXOPCAPS_BUMPENVMAPLUMINANCE                       = 4194304      ' &H400000
%D3DTEXOPCAPS_DOTPRODUCT3                               = 8388608      ' &H800000
%D3DTEXOPCAPS_MULTIPLYADD                               = 16777216     ' &H1000000
%D3DTEXOPCAPS_LERP                                      = 33554432     ' &H2000000

' ========================================================================================
' CONST_D3DFVFCAPSFLAGS enum
' ========================================================================================

%D3DFVFCAPS_TEXCOORDCOUNTMASK                           = 65535        ' &HFFFF
%D3DFVFCAPS_DONOTSTRIPELEMENTS                          = 524288       ' &H80000
%D3DFVFCAPS_PSIZE                                       = 1048576      ' &H100000

' ========================================================================================
' CONST_D3DCAPSFLAGS enum
' ========================================================================================

%D3DCAPS_READ_SCANLINE                                  = 131072       ' &H20000

' ========================================================================================
' CONST_D3DCAPS2FLAGS enum
' ========================================================================================

%D3DCAPS2_NO2DDURING3DSCENE                             = 2            ' &H2
%D3DCAPS2_FULLSCREENGAMMA                               = 131072       ' &H20000
%D3DCAPS2_CANRENDERWINDOWED                             = 524288       ' &H80000
%D3DCAPS2_CANCALIBRATEGAMMA                             = 1048576      ' &H100000
%D3DCAPS2_RESERVED                                      = 33554432     ' &H2000000

' ========================================================================================
' CONST_D3DCAPS3FLAGS enum
' ========================================================================================

%D3DCAPS3_RESERVED                                      = -2147483617  ' &H8000001F

' ========================================================================================
' CONST_D3DPRESENT_INTERVAL_FLAGS enum
' ========================================================================================

%D3DPRESENT_INTERVAL_DEFAULT                            = 0            ' &H0
%D3DPRESENT_INTERVAL_ONE                                = 1            ' &H1
%D3DPRESENT_INTERVAL_TWO                                = 2            ' &H2
%D3DPRESENT_INTERVAL_THREE                              = 4            ' &H4
%D3DPRESENT_INTERVAL_FOUR                               = 8            ' &H8
%D3DPRESENT_INTERVAL_IMMEDIATE                          = -2147483648  ' &H80000000

' ========================================================================================
' CONST_D3DCURSORCAPSFLAGS enum
' ========================================================================================

%D3DCURSORCAPS_COLOR                                    = 1            ' &H1
%D3DCURSORCAPS_LOWRES                                   = 2            ' &H2

' ========================================================================================
' CONST_D3DDEVCAPSFLAGS enum
' ========================================================================================

%D3DDEVCAPS_EXECUTESYSTEMMEMORY                         = 16           ' &H10
%D3DDEVCAPS_EXECUTEVIDEOMEMORY                          = 32           ' &H20
%D3DDEVCAPS_TLVERTEXSYSTEMMEMORY                        = 64           ' &H40
%D3DDEVCAPS_TLVERTEXVIDEOMEMORY                         = 128          ' &H80
%D3DDEVCAPS_TEXTURESYSTEMMEMORY                         = 256          ' &H100
%D3DDEVCAPS_TEXTUREVIDEOMEMORY                          = 512          ' &H200
%D3DDEVCAPS_DRAWPRIMTLVERTEX                            = 1024         ' &H400
%D3DDEVCAPS_CANRENDERAFTERFLIP                          = 2048         ' &H800
%D3DDEVCAPS_TEXTURENONLOCALVIDMEM                       = 4096         ' &H1000
%D3DDEVCAPS_DRAWPRIMITIVES2                             = 8192         ' &H2000
%D3DDEVCAPS_SEPARATETEXTUREMEMORIES                     = 16384        ' &H4000
%D3DDEVCAPS_DRAWPRIMITIVES2EX                           = 32768        ' &H8000
%D3DDEVCAPS_HWTRANSFORMANDLIGHT                         = 65536        ' &H10000
%D3DDEVCAPS_CANBLTSYSTONONLOCAL                         = 131072       ' &H20000
%D3DDEVCAPS_HWRASTERIZATION                             = 524288       ' &H80000
%D3DDEVCAPS_PUREDEVICE                                  = 1048576      ' &H100000
%D3DDEVCAPS_QUINTICRTPATCHES                            = 2097152      ' &H200000
%D3DDEVCAPS_RTPATCHES                                   = 4194304      ' &H400000
%D3DDEVCAPS_RTPATCHHANDLEZERO                           = 8388608      ' &H800000
%D3DDEVCAPS_NPATCHES                                    = 16777216     ' &H1000000

' ========================================================================================
' CONST_D3DVTXPCAPSFLAGS enum
' ========================================================================================

%D3DVTXPCAPS_TEXGEN                                     = 1            ' &H1
%D3DVTXPCAPS_MATERIALSOURCE7                            = 2            ' &H2
%D3DVTXPCAPS_DIRECTIONALLIGHTS                          = 8            ' &H8
%D3DVTXPCAPS_POSITIONALLIGHTS                           = 16           ' &H10
%D3DVTXPCAPS_LOCALVIEWER                                = 32           ' &H20
%D3DVTXPCAPS_TWEENING                                   = 64           ' &H40
%D3DVTXPCAPS_NO_VSDT_UBYTE4                             = 128          ' &H80

' ========================================================================================
' CONST_D3DCLIPPLANEFLAGS enum
' ========================================================================================

%D3DCLIPPLANE0                                          = 1            ' &H1
%D3DCLIPPLANE1                                          = 2            ' &H2
%D3DCLIPPLANE2                                          = 4            ' &H4
%D3DCLIPPLANE3                                          = 8            ' &H8
%D3DCLIPPLANE4                                          = 16           ' &H10
%D3DCLIPPLANE5                                          = 32           ' &H20

' ========================================================================================
' CONST_D3DCLIPFLAGS enum
' ========================================================================================

%D3DCS_LEFT                                             = 1            ' &H1
%D3DCS_RIGHT                                            = 2            ' &H2
%D3DCS_TOP                                              = 4            ' &H4
%D3DCS_BOTTOM                                           = 8            ' &H8
%D3DCS_FRONT                                            = 16           ' &H10
%D3DCS_BACK                                             = 32           ' &H20
%D3DCS_PLANE0                                           = 64           ' &H40
%D3DCS_PLANE1                                           = 128          ' &H80
%D3DCS_PLANE2                                           = 256          ' &H100
%D3DCS_PLANE3                                           = 512          ' &H200
%D3DCS_PLANE4                                           = 1024         ' &H400
%D3DCS_PLANE5                                           = 2048         ' &H800
%D3DCS_ALL                                              = 4095         ' &HFFF

' ========================================================================================
' CONST_D3DCSFLAGS enum
' ========================================================================================

%D3DCS_STATUS                                           = 1            ' &H1
%D3DCS_EXTENTS2                                         = 2            ' &H2
%D3DCS_EXTENTS3                                         = 4            ' &H4

' ========================================================================================
' CONST_D3DSHADEMODE enum
' ========================================================================================

%D3DSHADE_FLAT                                          = 1            ' &H1
%D3DSHADE_GOURAUD                                       = 2            ' &H2
%D3DSHADE_PHONG                                         = 3            ' &H3
%D3DSHADE_FORCE_DWORD                                   = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DFILLMODE enum
' ========================================================================================

%D3DFILL_POINT                                          = 1            ' &H1
%D3DFILL_WIREFRAME                                      = 2            ' &H2
%D3DFILL_SOLID                                          = 3            ' &H3
%D3DFILL_FORCE_DWORD                                    = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DBLEND enum
' ========================================================================================

%D3DBLEND_ZERO                                          = 1            ' &H1
%D3DBLEND_ONE                                           = 2            ' &H2
%D3DBLEND_SRCCOLOR                                      = 3            ' &H3
%D3DBLEND_INVSRCCOLOR                                   = 4            ' &H4
%D3DBLEND_SRCALPHA                                      = 5            ' &H5
%D3DBLEND_INVSRCALPHA                                   = 6            ' &H6
%D3DBLEND_DESTALPHA                                     = 7            ' &H7
%D3DBLEND_INVDESTALPHA                                  = 8            ' &H8
%D3DBLEND_DESTCOLOR                                     = 9            ' &H9
%D3DBLEND_INVDESTCOLOR                                  = 10           ' &HA
%D3DBLEND_SRCALPHASAT                                   = 11           ' &HB
%D3DBLEND_BOTHSRCALPHA                                  = 12           ' &HC
%D3DBLEND_BOTHINVSRCALPHA                               = 13           ' &HD
%D3DBLEND_FORCE_DWORD                                   = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DTEXTUREADDRESS enum
' ========================================================================================

%D3DTADDRESS_WRAP                                       = 1            ' &H1
%D3DTADDRESS_MIRROR                                     = 2            ' &H2
%D3DTADDRESS_CLAMP                                      = 3            ' &H3
%D3DTADDRESS_BORDER                                     = 4            ' &H4
%D3DTADDRESS_MIRRORONCE                                 = 5            ' &H5
%D3DTADDRESS_FORCE_DWORD                                = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DCULL enum
' ========================================================================================

%D3DCULL_NONE                                           = 1            ' &H1
%D3DCULL_CW                                             = 2            ' &H2
%D3DCULL_CCW                                            = 3            ' &H3
%D3DCULL_FORCE_DWORD                                    = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DCMPFUNC enum
' ========================================================================================

%D3DCMP_NEVER                                           = 1            ' &H1
%D3DCMP_LESS                                            = 2            ' &H2
%D3DCMP_EQUAL                                           = 3            ' &H3
%D3DCMP_LESSEQUAL                                       = 4            ' &H4
%D3DCMP_GREATER                                         = 5            ' &H5
%D3DCMP_NOTEQUAL                                        = 6            ' &H6
%D3DCMP_GREATEREQUAL                                    = 7            ' &H7
%D3DCMP_ALWAYS                                          = 8            ' &H8
%D3DCMP_FORCE_DWORD                                     = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DSTENCILOP enum
' ========================================================================================

%D3DSTENCILOP_KEEP                                      = 1            ' &H1
%D3DSTENCILOP_ZERO                                      = 2            ' &H2
%D3DSTENCILOP_REPLACE                                   = 3            ' &H3
%D3DSTENCILOP_INCRSAT                                   = 4            ' &H4
%D3DSTENCILOP_DECRSAT                                   = 5            ' &H5
%D3DSTENCILOP_INVERT                                    = 6            ' &H6
%D3DSTENCILOP_INCR                                      = 7            ' &H7
%D3DSTENCILOP_DECR                                      = 8            ' &H8
%D3DSTENCILOP_FORCE_DWORD                               = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DFOGMODE enum
' ========================================================================================

%D3DFOG_NONE                                            = 0            ' &H0
%D3DFOG_EXP                                             = 1            ' &H1
%D3DFOG_EXP2                                            = 2            ' &H2
%D3DFOG_LINEAR                                          = 3            ' &H3
%D3DFOG_FORCE_DWORD                                     = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DZBUFFERTYPE enum
' ========================================================================================

%D3DZB_FALSE                                            = 0            ' &H0
%D3DZB_TRUE                                             = 1            ' &H1
%D3DZB_USEW                                             = 2            ' &H2
%D3DZB_FORCE_DWORD                                      = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DMATERIALCOLORSOURCE enum
' ========================================================================================

%D3DMCS_MATERIAL                                        = 0            ' &H0
%D3DMCS_COLOR1                                          = 1            ' &H1
%D3DMCS_COLOR2                                          = 2            ' &H2
%D3DMCS_FORCE_DWORD                                     = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DCOLORWRITEENABLEFLAGS enum
' ========================================================================================

%D3DCOLORWRITEENABLE_RED                                = 1            ' &H1
%D3DCOLORWRITEENABLE_GREEN                              = 2            ' &H2
%D3DCOLORWRITEENABLE_BLUE                               = 4            ' &H4
%D3DCOLORWRITEENABLE_ALPHA                              = 8            ' &H8

' ========================================================================================
' CONST_D3DWRAPBIAS enum
' ========================================================================================

%D3DRENDERSTATE_WRAPBIAS                                = 128          ' &H80

' ========================================================================================
' CONST_D3DWRAPFLAGS enum
' ========================================================================================

%D3DWRAP_U                                              = 1            ' &H1
%D3DWRAP_V                                              = 2            ' &H2
%D3DWRAP_W                                              = 4            ' &H4
%D3DWRAPCOORD_0                                         = 1            ' &H1
%D3DWRAPCOORD_1                                         = 2            ' &H2
%D3DWRAPCOORD_2                                         = 4            ' &H4
%D3DWRAPCOORD_3                                         = 8            ' &H8

' ========================================================================================
' CONST_D3DTSS_TCI_FLAGS enum
' ========================================================================================

%D3DTSS_TCI_PASSTHRU                                    = 0            ' &H0
%D3DTSS_TCI_CAMERASPACENORMAL                           = 65536        ' &H10000
%D3DTSS_TCI_CAMERASPACEPOSITION                         = 131072       ' &H20000
%D3DTSS_TCI_CAMERASPACEREFLECTIONVECTOR                 = 196608       ' &H30000

' ========================================================================================
' CONST_D3DTEXTUREOP enum
' ========================================================================================

%D3DTOP_DISABLE                                         = 1            ' &H1
%D3DTOP_SELECTARG1                                      = 2            ' &H2
%D3DTOP_SELECTARG2                                      = 3            ' &H3
%D3DTOP_MODULATE                                        = 4            ' &H4
%D3DTOP_MODULATE2X                                      = 5            ' &H5
%D3DTOP_MODULATE4X                                      = 6            ' &H6
%D3DTOP_ADD                                             = 7            ' &H7
%D3DTOP_ADDSIGNED                                       = 8            ' &H8
%D3DTOP_ADDSIGNED2X                                     = 9            ' &H9
%D3DTOP_SUBTRACT                                        = 10           ' &HA
%D3DTOP_ADDSMOOTH                                       = 11           ' &HB
%D3DTOP_BLENDDIFFUSEALPHA                               = 12           ' &HC
%D3DTOP_BLENDTEXTUREALPHA                               = 13           ' &HD
%D3DTOP_BLENDFACTORALPHA                                = 14           ' &HE
%D3DTOP_BLENDTEXTUREALPHAPM                             = 15           ' &HF
%D3DTOP_BLENDCURRENTALPHA                               = 16           ' &H10
%D3DTOP_PREMODULATE                                     = 17           ' &H11
%D3DTOP_MODULATEALPHA_ADDCOLOR                          = 18           ' &H12
%D3DTOP_MODULATECOLOR_ADDALPHA                          = 19           ' &H13
%D3DTOP_MODULATEINVALPHA_ADDCOLOR                       = 20           ' &H14
%D3DTOP_MODULATEINVCOLOR_ADDALPHA                       = 21           ' &H15
%D3DTOP_BUMPENVMAP                                      = 22           ' &H16
%D3DTOP_BUMPENVMAPLUMINANCE                             = 23           ' &H17
%D3DTOP_DOTPRODUCT3                                     = 24           ' &H18
%D3DTOP_MULTIPLYADD                                     = 25           ' &H19
%D3DTOP_LERP                                            = 26           ' &H1A
%D3DTOP_FORCE_DWORD                                     = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DTAFLAGS enum
' ========================================================================================

%D3DTA_SELECTMASK                                       = 15           ' &HF
%D3DTA_DIFFUSE                                          = 0            ' &H0
%D3DTA_CURRENT                                          = 1            ' &H1
%D3DTA_TEXTURE                                          = 2            ' &H2
%D3DTA_TFACTOR                                          = 3            ' &H3
%D3DTA_SPECULAR                                         = 4            ' &H4
%D3DTA_TEMP                                             = 5            ' &H5
%D3DTA_COMPLEMENT                                       = 16           ' &H10
%D3DTA_ALPHAREPLICATE                                   = 32           ' &H20

' ========================================================================================
' CONST_D3DTEXTUREFILTERTYPE enum
' ========================================================================================

%D3DTEXF_NONE                                           = 0            ' &H0
%D3DTEXF_POINT                                          = 1            ' &H1
%D3DTEXF_LINEAR                                         = 2            ' &H2
%D3DTEXF_ANISOTROPIC                                    = 3            ' &H3
%D3DTEXF_FLATCUBIC                                      = 4            ' &H4
%D3DTEXF_GAUSSIANCUBIC                                  = 5            ' &H5
%D3DTFG_FORCE_DWORD                                     = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DFVFFLAGS enum
' ========================================================================================

%D3DFVF_VERTEX                                          = 274          ' &H112
%D3DFVF_RESERVED0                                       = 1            ' &H1
%D3DFVF_POSITION_MASK                                   = 14           ' &HE
%D3DFVF_XYZ                                             = 2            ' &H2
%D3DFVF_XYZRHW                                          = 4            ' &H4
%D3DFVF_XYZB1                                           = 6            ' &H6
%D3DFVF_XYZB2                                           = 8            ' &H8
%D3DFVF_XYZB3                                           = 10           ' &HA
%D3DFVF_XYZB4                                           = 12           ' &HC
%D3DFVF_XYZB5                                           = 14           ' &HE
%D3DFVF_NORMAL                                          = 16           ' &H10
%D3DFVF_PSIZE                                           = 32           ' &H20
%D3DFVF_DIFFUSE                                         = 64           ' &H40
%D3DFVF_SPECULAR                                        = 128          ' &H80
%D3DFVF_TEXCOUNT_MASK                                   = 3840         ' &HF00
%D3DFVF_TEXCOUNT_SHIFT                                  = 8            ' &H8
%D3DFVF_TEX0                                            = 0            ' &H0
%D3DFVF_TEX1                                            = 256          ' &H100
%D3DFVF_TEX2                                            = 512          ' &H200
%D3DFVF_TEX3                                            = 768          ' &H300
%D3DFVF_TEX4                                            = 1024         ' &H400
%D3DFVF_TEX5                                            = 1280         ' &H500
%D3DFVF_TEX6                                            = 1536         ' &H600
%D3DFVF_TEX7                                            = 1792         ' &H700
%D3DFVF_TEX8                                            = 2048         ' &H800
%D3DFVF_LASTBETA_UBYTE4                                 = 4096         ' &H1000
%D3DFVF_RESERVED2                                       = 57344        ' &HE000

' ========================================================================================
' CONST_D3DBASISTYPE enum
' ========================================================================================

%D3DBASIS_BEZIER                                        = 0            ' &H0
%D3DBASIS_BSPLINE                                       = 1            ' &H1
%D3DBASIS_INTERPOLATE                                   = 2            ' &H2

' ========================================================================================
' CONST_D3DORDERTYPE enum
' ========================================================================================

%D3DORDER_LINEAR                                        = 1            ' &H1
%D3DORDER_CUBIC                                         = 3            ' &H3
%D3DORDER_QUINTIC                                       = 5            ' &H5

' ========================================================================================
' CONST_D3DPATCHEDGESTYLE enum
' ========================================================================================

%D3DPATCHEDGE_DISCRETE                                  = 0            ' &H0
%D3DPATCHEDGE_CONTINUOUS                                = 1            ' &H1

' ========================================================================================
' CONST_D3DDEVINFOIDFLAGS enum
' ========================================================================================

%D3DDEVINFOID_TEXTUREMANAGER                            = 1            ' &H1
%D3DDEVINFOID_D3DTEXTUREMANAGER                         = 2            ' &H2
%D3DDEVINFOID_TEXTURING                                 = 3            ' &H3

' ========================================================================================
' CONST_D3DVERTEXBLENDFLAGS enum
' ========================================================================================

%D3DVBF_DISABLE                                         = 0            ' &H0
%D3DVBF_1WEIGHT                                         = 1            ' &H1
%D3DVBF_2WEIGHTS                                        = 2            ' &H2
%D3DVBF                                                 = 3            ' &H3
%D3DVBF_TWEENING                                        = 255          ' &HFF
%D3DVBF_0WEIGHT                                         = 256          ' &H100

' ========================================================================================
' CONST_D3DTEXTURETRANSFORMFLAGS enum
' ========================================================================================

%D3DTTFF_DISABLE                                        = 0            ' &H0
%D3DTTFF_COUNT1                                         = 1            ' &H1
%D3DTTFF_COUNT2                                         = 2            ' &H2
%D3DTTFF_COUNT3                                         = 3            ' &H3
%D3DTTFF_COUNT4                                         = 4            ' &H4
%D3DTTFF_PROJECTED                                      = 256          ' &H100
%D3DTTFF_FORCE_DWORD                                    = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DFVFTEXTUREFORMATS enum
' ========================================================================================

%D3DFVF_TEXTUREFORMAT2                                  = 0            ' &H0
%D3DFVF_TEXTUREFORMAT1                                  = 3            ' &H3
%D3DFVF_TEXTUREFORMAT3                                  = 1            ' &H1
%D3DFVF_TEXTUREFORMAT4                                  = 2            ' &H2
%D3DFVF_TEXCOORDSIZE1_0                                 = 196608       ' &H30000
%D3DFVF_TEXCOORDSIZE1_1                                 = 786432       ' &HC0000
%D3DFVF_TEXCOORDSIZE1_2                                 = 3145728      ' &H300000
%D3DFVF_TEXCOORDSIZE1_3                                 = 12582912     ' &HC00000
%D3DFVF_TEXCOORDSIZE2_0                                 = 0            ' &H0
%D3DFVF_TEXCOORDSIZE2_1                                 = 0            ' &H0
%D3DFVF_TEXCOORDSIZE2_2                                 = 0            ' &H0
%D3DFVF_TEXCOORDSIZE2_3                                 = 0            ' &H0
%D3DFVF_TEXCOORDSIZE3_0                                 = 65536        ' &H10000
%D3DFVF_TEXCOORDSIZE3_1                                 = 262144       ' &H40000
%D3DFVF_TEXCOORDSIZE3_2                                 = 1048576      ' &H100000
%D3DFVF_TEXCOORDSIZE3_3                                 = 4194304      ' &H400000
%D3DFVF_TEXCOORDSIZE4_0                                 = 131072       ' &H20000
%D3DFVF_TEXCOORDSIZE4_1                                 = 524288       ' &H80000
%D3DFVF_TEXCOORDSIZE4_2                                 = 2097152      ' &H200000
%D3DFVF_TEXCOORDSIZE4_3                                 = 8388608      ' &H800000

' ========================================================================================
' CONST_D3D_POOL enum
' ========================================================================================

%D3D_POOL_LOCALVIDMEM                                   = 1            ' &H1
%D3D_POOL_NONLOCALVIDMEM                                = 2            ' &H2
%D3D_POOL_SYSTEMMEM                                     = 3            ' &H3
%D3D_POOL_USERALLOCATED                                 = 4            ' &H4
%D3D_POOL_D3DMANAGED                                    = 5            ' &H5
%D3D_POOL_MANAGED                                       = 6            ' &H6
%D3D_POOL_FORCE_DWORD                                   = -1           ' &HFFFFFFFF

' ========================================================================================
' CONST_D3DPRESENT_RATE_FLAGS enum
' ========================================================================================

%D3DPRESENT_RATE_DEFAULT                                = 0            ' &H0
%D3DPRESENT_RATE_UNLIMITED                              = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DUSAGEFLAGS enum
' ========================================================================================

%D3DUSAGE_RENDERTARGET                                  = 1            ' &H1
%D3DUSAGE_DEPTHSTENCIL                                  = 2            ' &H2
%D3DUSAGE_WRITEONLY                                     = 8            ' &H8
%D3DUSAGE_SOFTWAREPROCESSING                            = 16           ' &H10
%D3DUSAGE_DONOTCLIP                                     = 32           ' &H20
%D3DUSAGE_POINTS                                        = 64           ' &H40
%D3DUSAGE_RTPATCHES                                     = 128          ' &H80
%D3DUSAGE_NPATCHES                                      = 256          ' &H100
%D3DUSAGE_DYNAMIC                                       = 512          ' &H200
%D3DUSAGE_FORCE_DWORD                                   = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DLOCKFLAGS enum
' ========================================================================================

%D3DLOCK_READONLY                                       = 16           ' &H10
%D3DLOCK_DISCARD                                        = 8192         ' &H2000
%D3DLOCK_NOOVERWRITE                                    = 4096         ' &H1000
%D3DLOCK_NOSYSLOCK                                      = 2048         ' &H800
%D3DLOCK_NO_DIRTY_UPDATE                                = 32768        ' &H8000

' ========================================================================================
' CONST_D3DERR enum
' ========================================================================================

%D3DERR_WRONGTEXTUREFORMAT                              = -2005530600  ' &H88760818
%D3DERR_UNSUPPORTEDCOLOROPERATION                       = -2005530599  ' &H88760819
%D3DERR_UNSUPPORTEDCOLORARG                             = -2005530598  ' &H8876081A
%D3DERR_UNSUPPORTEDALPHAOPERATION                       = -2005530597  ' &H8876081B
%D3DERR_UNSUPPORTEDALPHAARG                             = -2005530596  ' &H8876081C
%D3DERR_TOOMANYOPERATIONS                               = -2005530595  ' &H8876081D
%D3DERR_CONFLICTINGTEXTUREFILTER                        = -2005530594  ' &H8876081E
%D3DERR_UNSUPPORTEDFACTORVALUE                          = -2005530593  ' &H8876081F
%D3DERR_CONFLICTINGRENDERSTATE                          = -2005530591  ' &H88760821
%D3DERR_UNSUPPORTEDTEXTUREFILTER                        = -2005530590  ' &H88760822
%D3DERR_CONFLICTINGTEXTUREPALETTE                       = -2005530586  ' &H88760826
%D3DERR_DRIVERINTERNALERROR                             = -2005530585  ' &H88760827
%D3DERR_NOTFOUND                                        = -2005530522  ' &H88760866
%D3DERR_MOREDATA                                        = -2005530521  ' &H88760867
%D3DERR_DEVICELOST                                      = -2005530520  ' &H88760868
%D3DERR_DEVICENOTRESET                                  = -2005530519  ' &H88760869
%D3DERR_NOTAVAILABLE                                    = -2005530518  ' &H8876086A
%D3DERR_OUTOFVIDEOMEMORY                                = -2005532292  ' &H8876017C
%D3DERR_INVALIDDEVICE                                   = -2005530517  ' &H8876086B
%D3DERR_INVALIDCALL                                     = -2005530516  ' &H8876086C
%D3DERR_DRIVERINVALIDCALL                               = -2005530515  ' &H8876086D

' ========================================================================================
' CONST_D3DSPDFLAGS enum
' ========================================================================================

%D3DSPD_IUNKNOWN                                        = 1            ' &H1

' ========================================================================================
' CONST_D3DCONST enum
' ========================================================================================

%D3DCURRENT_DISPLAY_MODE                                = 15728639     ' &HEFFFFF
%D3DENUM_NO_WHQL_LEVEL                                  = 2            ' &H2
%D3DADAPTER_DEFAULT                                     = 0            ' &H0
%D3DPRESENT_BACK_BUFFERS_MAX                            = 3            ' &H3
%D3DMAXNUMVERTICES                                      = 65535        ' &HFFFF
%D3DMAXNUMPRIMITIVES                                    = 65535        ' &HFFFF
%D3DPV_DONOTCOPYDATA                                    = 1            ' &H1
%VALID_D3DENUM_FLAGS                                    = 3            ' &H3
%D3DCURSOR_IMMEDIATE_UPDATE                             = 1            ' &H1
%D3DPRESENTFLAG_LOCKABLE_BACKBUFFER                     = 1            ' &H1
%D3D_OK                                                 = 0            ' &H0
%D3DMAXUSERCLIPPLANES                                   = 32           ' &H20

' ========================================================================================
' CONST_D3DBLENDOP enum
' ========================================================================================

%D3DBLENDOP_ADD                                         = 1            ' &H1
%D3DBLENDOP_SUBTRACT                                    = 2            ' &H2
%D3DBLENDOP_REVSUBTRACT                                 = 3            ' &H3
%D3DBLENDOP_MIN                                         = 4            ' &H4
%D3DBLENDOP_MAX                                         = 5            ' &H5
%D3DBLENDOP_FORCE_DWORD                                 = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DSGRFLAGS enum
' ========================================================================================

%D3DSGR_NO_CALIBRATION                                  = 0            ' &H0
%D3DSGR_CALIBRATE                                       = 1            ' &H1

' ========================================================================================
' CONST_D3D_TYPE enum
' ========================================================================================

%D3D_TYPE_SURFACE                                       = 1            ' &H1
%D3D_TYPE_VOLUME                                        = 2            ' &H2
%D3D_TYPE_MIPMAP                                        = 3            ' &H3
%D3D_TYPE_MIPVOLUME                                     = 4            ' &H4
%D3D_TYPE_CUBEMAP                                       = 5            ' &H5
%D3D_TYPE_VERTEXBUFFER                                  = 6            ' &H6
%D3D_TYPE_OPTIMIZEDVERTEXBUFFER                         = 7            ' &H7
%D3D_TYPE_INDEXBUFFER                                   = 8            ' &H8
%D3D_TYPE_FORCE_DWORD                                   = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DDEBUGMONITORTOKENS enum
' ========================================================================================

%D3DDMT_ENABLE                                          = 0            ' &H0
%D3DDMT_DISABLE                                         = 1            ' &H1
%D3DDMT_FORCEDWORD                                      = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_DSBCAPSFLAGS enum
' ========================================================================================

%DSBCAPS_PRIMARYBUFFER                                  = 1            ' &H1
%DSBCAPS_STATIC                                         = 2            ' &H2
%DSBCAPS_LOCHARDWARE                                    = 4            ' &H4
%DSBCAPS_LOCSOFTWARE                                    = 8            ' &H8
%DSBCAPS_CTRL3D                                         = 16           ' &H10
%DSBCAPS_CTRLFREQUENCY                                  = 32           ' &H20
%DSBCAPS_CTRLPAN                                        = 64           ' &H40
%DSBCAPS_CTRLVOLUME                                     = 128          ' &H80
%DSBCAPS_CTRLPOSITIONNOTIFY                             = 256          ' &H100
%DSBCAPS_CTRLFX                                         = 512          ' &H200
%DSBCAPS_CTRLCHANNELVOLUME                              = 1024         ' &H400
%DSBCAPS_STICKYFOCUS                                    = 16384        ' &H4000
%DSBCAPS_GLOBALFOCUS                                    = 32768        ' &H8000
%DSBCAPS_GETCURRENTPOSITION2                            = 65536        ' &H10000
%DSBCAPS_MUTE3DATMAXDISTANCE                            = 131072       ' &H20000
%DSBCAPS_LOCDEFER                                       = 262144       ' &H40000

' ========================================================================================
' CONST_DS3DMODEFLAGS enum
' ========================================================================================

%DS3DMODE_NORMAL                                        = 0            ' &H0
%DS3DMODE_HEADRELATIVE                                  = 1            ' &H1
%DS3DMODE_DISABLE                                       = 2            ' &H2

' ========================================================================================
' CONST_DS3DAPPLYFLAGS enum
' ========================================================================================

%DS3D_IMMEDIATE                                         = 0            ' &H0
%DS3D_DEFERRED                                          = 1            ' &H1

' ========================================================================================
' CONST_DSBSTATUSFLAGS enum
' ========================================================================================

%DSBSTATUS_PLAYING                                      = 1            ' &H1
%DSBSTATUS_BUFFERLOST                                   = 2            ' &H2
%DSBSTATUS_LOOPING                                      = 4            ' &H4
%DSBSTATUS_LOCHARDWARE                                  = 8            ' &H8
%DSBSTATUS_LOCSOFTWARE                                  = 16           ' &H10
%DSBSTATUS_TERMINATED                                   = 32           ' &H20

' ========================================================================================
' CONST_DSBLOCKFLAGS enum
' ========================================================================================

%DSBLOCK_DEFAULT                                        = 0            ' &H0
%DSBLOCK_FROMWRITECURSOR                                = 1            ' &H1
%DSBLOCK_ENTIREBUFFER                                   = 2            ' &H2

' ========================================================================================
' CONST_DSBPLAYFLAGS enum
' ========================================================================================

%DSBPLAY_DEFAULT                                        = 0            ' &H0
%DSBPLAY_LOOPING                                        = 1            ' &H1
%DSBPLAY_LOCHARDWARE                                    = 2            ' &H2
%DSBPLAY_LOCSOFTWARE                                    = 4            ' &H4
%DSBPLAY_TERMINATEBY_TIME                               = 8            ' &H8
%DSBPLAY_TERMINATEBY_DISTANCE                           = 16           ' &H10
%DSBPLAY_TERMINATEBY_PRIORITY                           = 32           ' &H20

' ========================================================================================
' CONST_DSCAPSFLAGS enum
' ========================================================================================

%DSCAPS_PRIMARYMONO                                     = 1            ' &H1
%DSCAPS_PRIMARYSTEREO                                   = 2            ' &H2
%DSCAPS_PRIMARY8BIT                                     = 4            ' &H4
%DSCAPS_PRIMARY16BIT                                    = 8            ' &H8
%DSCAPS_CONTINUOUSRATE                                  = 16           ' &H10
%DSCAPS_EMULDRIVER                                      = 32           ' &H20
%DSCAPS_CERTIFIED                                       = 64           ' &H40
%DSCAPS_SECONDARYMONO                                   = 256          ' &H100
%DSCAPS_SECONDARYSTEREO                                 = 512          ' &H200
%DSCAPS_SECONDARY8BIT                                   = 1024         ' &H400
%DSCAPS_SECONDARY16BIT                                  = 2048         ' &H800

' ========================================================================================
' CONST_DSSCLFLAGS enum
' ========================================================================================

%DSSCL_NORMAL                                           = 1            ' &H1
%DSSCL_PRIORITY                                         = 2            ' &H2
%DSSCL_WRITEPRIMARY                                     = 4            ' &H4

' ========================================================================================
' CONST_DSSPEAKERFLAGS enum
' ========================================================================================

%DSSPEAKER_HEADPHONE                                    = 1            ' &H1
%DSSPEAKER_MONO                                         = 2            ' &H2
%DSSPEAKER_QUAD                                         = 3            ' &H3
%DSSPEAKER_STEREO                                       = 4            ' &H4
%DSSPEAKER_SURROUND                                     = 5            ' &H5
%DSSPEAKER_GEOMETRY_MIN                                 = 5            ' &H5
%DSSPEAKER_GEOMETRY_NARROW                              = 10           ' &HA
%DSSPEAKER_GEOMETRY_WIDE                                = 20           ' &H14
%DSSPEAKER_GEOMETRY_MAX                                 = 180          ' &HB4

' ========================================================================================
' CONST_DSCBCAPSFLAGS enum
' ========================================================================================

%DSCBCAPS_DEFAULT                                       = 0            ' &H0
%DSCBCAPS_WAVEMAPPED                                    = -2147483648  ' &H80000000

' ========================================================================================
' CONST_DSCBSTATUSFLAGS enum
' ========================================================================================

%DSCBSTATUS_CAPTURING                                   = 1            ' &H1
%DSCBSTATUS_LOOPING                                     = 2            ' &H2

' ========================================================================================
' CONST_DSCBSTARTFLAGS enum
' ========================================================================================

%DSCBSTART_DEFAULT                                      = 0            ' &H0
%DSCBSTART_LOOPING                                      = 1            ' &H1

' ========================================================================================
' CONST_DSCBLOCKFLAGS enum
' ========================================================================================

%DSCBLOCK_DEFAULT                                       = 0            ' &H0
%DSCBLOCK_ENTIREBUFFER                                  = 1            ' &H1

' ========================================================================================
' CONST_DSCCAPSFLAGS enum
' ========================================================================================

%DSCCAPS_DEFAULT                                        = 0            ' &H0
%DSCCAPS_EMULDRIVER                                     = 32           ' &H20

' ========================================================================================
' CONST_WAVEFORMATFLAGS enum
' ========================================================================================

%WAVE_FORMAT_1M08                                       = 1            ' &H1
%WAVE_FORMAT_1S08                                       = 2            ' &H2
%WAVE_FORMAT_1M16                                       = 4            ' &H4
%WAVE_FORMAT_1S16                                       = 8            ' &H8
%WAVE_FORMAT_2M08                                       = 16           ' &H10
%WAVE_FORMAT_2S08                                       = 32           ' &H20
%WAVE_FORMAT_2M16                                       = 64           ' &H40
%WAVE_FORMAT_2S16                                       = 128          ' &H80
%WAVE_FORMAT_4M08                                       = 256          ' &H100
%WAVE_FORMAT_4S08                                       = 512          ' &H200
%WAVE_FORMAT_4M16                                       = 1024         ' &H400
%WAVE_FORMAT_4S16                                       = 2048         ' &H800

' ========================================================================================
' CONST_DSFXGARGLE_RATEHZ enum
' ========================================================================================

%DSFXGARGLE_RATEHZ_MIN                                  = 1            ' &H1
%DSFXGARGLE_RATEHZ_MAX                                  = 1000         ' &H3E8

' ========================================================================================
' CONST_DSFXGARGLE_WAVE enum
' ========================================================================================

%DSFXGARGLE_WAVE_TRIANGLE                               = 0            ' &H0
%DSFXGARGLE_WAVE_SQUARE                                 = 1            ' &H1

' ========================================================================================
' CONST_DSFX_WAVE enum
' ========================================================================================

%DSFX_WAVE_TRIANGLE                                     = 0            ' &H0
%DSFX_WAVE_SIN                                          = 1            ' &H1

' ========================================================================================
' CONST_DSFX_PHASE enum
' ========================================================================================

%DSFX_PHASE_MIN                                         = 0            ' &H0
%DSFX_PHASE_MAX                                         = 4            ' &H4
%DSFX_PHASE_NEG_180                                     = 0            ' &H0
%DSFX_PHASE_NEG_90                                      = 1            ' &H1
%DSFX_PHASE_ZERO                                        = 2            ' &H2
%DSFX_PHASE_90                                          = 3            ' &H3
%DSFX_PHASE_180                                         = 4            ' &H4

' ========================================================================================
' CONST_DSFX_PANDELAY enum
' ========================================================================================

%DSFX_PANDELAY_MIN                                      = 0            ' &H0
%DSFX_PANDELAY_MAX                                      = 1            ' &H1

' ========================================================================================
' CONST_DSFX_I3DL2_ENVIRONMENT_PRESETS enum
' ========================================================================================

%DSFX_I3DL2_ENVIRONMENT_PRESET_DEFAULT                  = 0            ' &H0
%DSFX_I3DL2_ENVIRONMENT_PRESET_GENERIC                  = 1            ' &H1
%DSFX_I3DL2_ENVIRONMENT_PRESET_PADDEDCELL               = 2            ' &H2
%DSFX_I3DL2_ENVIRONMENT_PRESET_ROOM                     = 3            ' &H3
%DSFX_I3DL2_ENVIRONMENT_PRESET_BATHROOM                 = 4            ' &H4
%DSFX_I3DL2_ENVIRONMENT_PRESET_LIVINGROOM               = 5            ' &H5
%DSFX_I3DL2_ENVIRONMENT_PRESET_STONEROOM                = 6            ' &H6
%DSFX_I3DL2_ENVIRONMENT_PRESET_AUDITORIUM               = 7            ' &H7
%DSFX_I3DL2_ENVIRONMENT_PRESET_CONCERTHALL              = 8            ' &H8
%DSFX_I3DL2_ENVIRONMENT_PRESET_CAVE                     = 9            ' &H9
%DSFX_I3DL2_ENVIRONMENT_PRESET_ARENA                    = 10           ' &HA
%DSFX_I3DL2_ENVIRONMENT_PRESET_HANGAR                   = 11           ' &HB
%DSFX_I3DL2_ENVIRONMENT_PRESET_CARPETEDHALLWAY          = 12           ' &HC
%DSFX_I3DL2_ENVIRONMENT_PRESET_HALLWAY                  = 13           ' &HD
%DSFX_I3DL2_ENVIRONMENT_PRESET_STONECORRIDOR            = 14           ' &HE
%DSFX_I3DL2_ENVIRONMENT_PRESET_ALLEY                    = 15           ' &HF
%DSFX_I3DL2_ENVIRONMENT_PRESET_FOREST                   = 16           ' &H10
%DSFX_I3DL2_ENVIRONMENT_PRESET_CITY                     = 17           ' &H11
%DSFX_I3DL2_ENVIRONMENT_PRESET_MOUNTAINS                = 18           ' &H12
%DSFX_I3DL2_ENVIRONMENT_PRESET_QUARRY                   = 19           ' &H13
%DSFX_I3DL2_ENVIRONMENT_PRESET_PLAIN                    = 20           ' &H14
%DSFX_I3DL2_ENVIRONMENT_PRESET_PARKINGLOT               = 21           ' &H15
%DSFX_I3DL2_ENVIRONMENT_PRESET_SEWERPIPE                = 22           ' &H16
%DSFX_I3DL2_ENVIRONMENT_PRESET_UNDERWATER               = 23           ' &H17
%DSFX_I3DL2_ENVIRONMENT_PRESET_SMALLROOM                = 24           ' &H18
%DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMROOM               = 25           ' &H19
%DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEROOM                = 26           ' &H1A
%DSFX_I3DL2_ENVIRONMENT_PRESET_MEDIUMHALL               = 27           ' &H1B
%DSFX_I3DL2_ENVIRONMENT_PRESET_LARGEHALL                = 28           ' &H1C
%DSFX_I3DL2_ENVIRONMENT_PRESET_PLATE                    = 29           ' &H1D

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_QUALITY enum
' ========================================================================================

%DSFX_I3DL2REVERB_QUALITY_MIN                           = 0            ' &H0
%DSFX_I3DL2REVERB_QUALITY_MAX                           = 3            ' &H3
%DSFX_I3DL2REVERB_QUALITY_DEFAULT                       = 2            ' &H2

' ========================================================================================
' CONST_DMUS_NOTIFICATION_TYPE enum
' ========================================================================================

%DMUS_NOTIFY_ON_RECOMPOSE                               = 0            ' &H0
%DMUS_NOTIFY_ON_CHORD                                   = 1            ' &H1
%DMUS_NOTIFY_ON_COMMAND                                 = 2            ' &H2
%DMUS_NOTIFY_ON_MEASUREANDBEAT                          = 3            ' &H3
%DMUS_NOTIFY_ON_PERFORMANCE                             = 4            ' &H4
%DMUS_NOTIFY_ON_SEGMENT                                 = 5            ' &H5

' ========================================================================================
' CONST_DMUS_AUDIO enum
' ========================================================================================

%DMUS_AUDIOF_3D                                         = 1            ' &H1
%DMUS_AUDIOF_ENVIRON                                    = 2            ' &H2
%DMUS_AUDIOF_EAX                                        = 4            ' &H4
%DMUS_AUDIOF_DMOS                                       = 8            ' &H8
%DMUS_AUDIOF_STREAMING                                  = 16           ' &H10
%DMUS_AUDIOF_BUFFERS                                    = 32           ' &H20
%DMUS_AUDIOF_ALL                                        = 63           ' &H3F

' ========================================================================================
' CONST_DMUS_AUDIOPARAMS enum
' ========================================================================================

%DMUS_AUDIOPARAMS_FEATURES                              = 1            ' &H1
%DMUS_AUDIOPARAMS_VOICES                                = 2            ' &H2
%DMUS_AUDIOPARAMS_SAMPLERATE                            = 4            ' &H4
%DMUS_AUDIOPARAMS_DEFAULTSYNTH                          = 8            ' &H8

' ========================================================================================
' CONST_DMUSIC_STANDARD_AUDIO_PATH enum
' ========================================================================================

%DMUS_APATH_SHARED_STEREOPLUSREVERB                     = 1            ' &H1
%DMUS_APATH_DYNAMIC_3D                                  = 6            ' &H6
%DMUS_APATH_DYNAMIC_MONO                                = 7            ' &H7
%DMUS_APATH_DYNAMIC_STEREO                              = 8            ' &H8

' ========================================================================================
' CONST_DMUS_SEGF_FLAGS enum
' ========================================================================================

%DMUS_SEGF_REFTIME                                      = 64           ' &H40
%DMUS_SEGF_SECONDARY                                    = 128          ' &H80
%DMUS_SEGF_QUEUE                                        = 256          ' &H100
%DMUS_SEGF_CONTROL                                      = 512          ' &H200
%DMUS_SEGF_AFTERPREPARETIME                             = 1024         ' &H400
%DMUS_SEGF_GRID                                         = 2048         ' &H800
%DMUS_SEGF_BEAT                                         = 4096         ' &H1000
%DMUS_SEGF_MEASURE                                      = 8192         ' &H2000
%DMUS_SEGF_DEFAULT                                      = 16384        ' &H4000
%DMUS_SEGF_NOINVALIDATE                                 = 32768        ' &H8000
%DMUS_SEGF_ALIGN                                        = 65536        ' &H10000
%DMUS_SEGF_VALID_START_BEAT                             = 131072       ' &H20000
%DMUS_SEGF_VALID_START_GRID                             = 262144       ' &H40000
%DMUS_SEGF_VALID_START_TICK                             = 524288       ' &H80000
%DMUS_SEGF_AUTOTRANSITION                               = 1048576      ' &H100000
%DMUS_SEGF_AFTERQUEUETIME                               = 2097152      ' &H200000
%DMUS_SEGF_AFTERLATENCYTIME                             = 4194304      ' &H400000
%DMUS_SEGF_SEGMENTEND                                   = 8388608      ' &H800000
%DMUS_SEGF_MARKER                                       = 16777216     ' &H1000000
%DMUS_SEGF_TIMESIG_ALWAYS                               = 33554432     ' &H2000000
%DMUS_SEGF_USE_AUDIOPATH                                = 67108864     ' &H4000000
%DMUS_SEGF_VALID_START_MEASURE                          = 134217728    ' &H8000000

' ========================================================================================
' CONST_DMUSIC_PATH enum
' ========================================================================================

%DMUS_PATH_SEGMENT                                      = 4096         ' &H1000
%DMUS_PATH_SEGMENT_TRACK                                = 4352         ' &H1100
%DMUS_PATH_SEGMENT_GRAPH                                = 4608         ' &H1200
%DMUS_PATH_SEGMENT_TOOL                                 = 4864         ' &H1300
%DMUS_PATH_AUDIOPATH                                    = 8192         ' &H2000
%DMUS_PATH_AUDIOPATH_GRAPH                              = 8704         ' &H2200
%DMUS_PATH_AUDIOPATH_TOOL                               = 8960         ' &H2300
%DMUS_PATH_PERFORMANCE                                  = 12288        ' &H3000
%DMUS_PATH_PERFORMANCE_GRAPH                            = 12800        ' &H3200
%DMUS_PATH_PERFORMANCE_TOOL                             = 13056        ' &H3300
%DMUS_PATH_PORT                                         = 16384        ' &H4000
%DMUS_PATH_BUFFER                                       = 24576        ' &H6000
%DMUS_PATH_BUFFER_DMO                                   = 24832        ' &H6100
%DMUS_PATH_MIXIN_BUFFER                                 = 28672        ' &H7000
%DMUS_PATH_MIXIN_BUFFER_DMO                             = 28928        ' &H7100
%DMUS_PATH_PRIMARY_BUFFER                               = 32768        ' &H8000

' ========================================================================================
' CONST_DSFX_WAVESREVERB_INGAIN enum
' ========================================================================================

%DSFX_WAVESREVERB_INGAIN_MIN                            = -96          ' &HFFFFFFA0
%DSFX_WAVESREVERB_INGAIN_MAX                            = 0            ' &H0

' ========================================================================================
' CONST_DSFX_WAVESREVERB_REVERBMIX enum
' ========================================================================================

%DSFX_WAVESREVERB_REVERBMIX_MIN                         = -96          ' &HFFFFFFA0
%DSFX_WAVESREVERB_REVERBMIX_MAX                         = 0            ' &H0

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_ROOM enum
' ========================================================================================

%DSFX_I3DL2REVERB_ROOM_MIN                              = -10000       ' &HFFFFD8F0
%DSFX_I3DL2REVERB_ROOM_MAX                              = 0            ' &H0
%DSFX_I3DL2REVERB_ROOM_DEFAULT                          = -10000       ' &HFFFFD8F0

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_ROOMHF enum
' ========================================================================================

%DSFX_I3DL2REVERB_ROOMHF_MIN                            = -10000       ' &HFFFFD8F0
%DSFX_I3DL2REVERB_ROOMHF_MAX                            = 0            ' &H0
%DSFX_I3DL2REVERB_ROOMHF_DEFAULT                        = 0            ' &H0

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_ROOMROLLOFFFACTOR enum
' ========================================================================================

%DSFX_I3DL2REVERB_ROOMROLLOFFFACTOR_MIN                 = 0            ' &H0
%DSFX_I3DL2REVERB_ROOMROLLOFFFACTOR_MAX                 = 1            ' &H1
%DSFX_I3DL2REVERB_ROOMROLLOFFFACTOR_DEFAULT             = 0            ' &H0

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_REFLECTIONS enum
' ========================================================================================

%DSFX_I3DL2REVERB_REFLECTIONS_MIN                       = -10000       ' &HFFFFD8F0
%DSFX_I3DL2REVERB_REFLECTIONS_MAX                       = 1000         ' &H3E8
%DSFX_I3DL2REVERB_REFLECTIONS_DEFAULT                   = -10000       ' &HFFFFD8F0

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_REVERB enum
' ========================================================================================

%DSFX_I3DL2REVERB_REVERB_MIN                            = -10000       ' &HFFFFD8F0
%DSFX_I3DL2REVERB_REVERB_MAX                            = 2000         ' &H7D0
%DSFX_I3DL2REVERB_REVERB_DEFAULT                        = -10000       ' &HFFFFD8F0

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_DIFFUSION enum
' ========================================================================================

%DSFX_I3DL2REVERB_DIFFUSION_MIN                         = 0            ' &H0
%DSFX_I3DL2REVERB_DIFFUSION_MAX                         = 100          ' &H64
%DSFX_I3DL2REVERB_DIFFUSION_DEFAULT                     = 100          ' &H64

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_DENSITY enum
' ========================================================================================

%DSFX_I3DL2REVERB_DENSITY_MIN                           = 0            ' &H0
%DSFX_I3DL2REVERB_DENSITY_MAX                           = 100          ' &H64
%DSFX_I3DL2REVERB_DENSITY_DEFAULT                       = 100          ' &H64

' ========================================================================================
' CONST_DSFX_I3DL2REVERB_HFREFERENCE enum
' ========================================================================================

%DSFX_I3DL2REVERB_HFREFERENCE_MIN                       = 20           ' &H14
%DSFX_I3DL2REVERB_HFREFERENCE_MAX                       = 20000        ' &H4E20
%DSFX_I3DL2REVERB_HFREFERENCE_DEFAULT                   = 5000         ' &H1388

' ========================================================================================
' CONST_DSFXCOMPRESSOR_GAIN enum
' ========================================================================================

%DSFXCOMPRESSOR_GAIN_MIN                                = -60          ' &HFFFFFFC4
%DSFXCOMPRESSOR_GAIN_MAX                                = 60           ' &H3C

' ========================================================================================
' CONST_DSFXCOMPRESSOR_ATTACK enum
' ========================================================================================

%DSFXCOMPRESSOR_ATTACK_MIN                              = 1            ' &H1
%DSFXCOMPRESSOR_ATTACK_MAX                              = 500          ' &H1F4

' ========================================================================================
' CONST_DSFXCOMPRESSOR_RELEASE enum
' ========================================================================================

%DSFXCOMPRESSOR_RELEASE_MIN                             = 50           ' &H32
%DSFXCOMPRESSOR_RELEASE_MAX                             = 3000         ' &HBB8

' ========================================================================================
' CONST_DSFXCOMPRESSOR_THRESHOLD enum
' ========================================================================================

%DSFXCOMPRESSOR_THRESHOLD_MIN                           = -60          ' &HFFFFFFC4
%DSFXCOMPRESSOR_THRESHOLD_MAX                           = 0            ' &H0

' ========================================================================================
' CONST_DSFXCOMPRESSOR_RATIO enum
' ========================================================================================

%DSFXCOMPRESSOR_RATIO_MIN                               = 1            ' &H1
%DSFXCOMPRESSOR_RATIO_MAX                               = 100          ' &H64

' ========================================================================================
' CONST_DSFXCOMPRESSOR_PREDELAY enum
' ========================================================================================

%DSFXCOMPRESSOR_PREDELAY_MIN                            = 0            ' &H0
%DSFXCOMPRESSOR_PREDELAY_MAX                            = 4            ' &H4

' ========================================================================================
' CONST_DSFXDISTORTION_GAIN enum
' ========================================================================================

%DSFXDISTORTION_GAIN_MIN                                = -60          ' &HFFFFFFC4
%DSFXDISTORTION_GAIN_MAX                                = 0            ' &H0

' ========================================================================================
' CONST_DSFXDISTORTION_EDGE enum
' ========================================================================================

%DSFXDISTORTION_EDGE_MIN                                = 0            ' &H0
%DSFXDISTORTION_EDGE_MAX                                = 100          ' &H64

' ========================================================================================
' CONST_DSFXPARAMEQ_CENTER enum
' ========================================================================================

%DSFXPARAMEQ_CENTER_MIN                                 = 80           ' &H50
%DSFXPARAMEQ_CENTER_MAX                                 = 16000        ' &H3E80

' ========================================================================================
' CONST_DSFXPARAMEQ_BANDWIDTH enum
' ========================================================================================

%DSFXPARAMEQ_BANDWIDTH_MIN                              = 1            ' &H1
%DSFXPARAMEQ_BANDWIDTH_MAX                              = 36           ' &H24

' ========================================================================================
' CONST_DSFXPARAMEQ_GAIN enum
' ========================================================================================

%DSFXPARAMEQ_GAIN_MIN                                   = -15          ' &HFFFFFFF1
%DSFXPARAMEQ_GAIN_MAX                                   = 15           ' &HF

' ========================================================================================
' CONST_DSFXDISTORTION_POSTEQCENTERFREQUENCY enum
' ========================================================================================

%DSFXDISTORTION_POSTEQCENTERFREQUENCY_MIN               = 100          ' &H64
%DSFXDISTORTION_POSTEQCENTERFREQUENCY_MAX               = 8000         ' &H1F40

' ========================================================================================
' CONST_DSFXDISTORTION_POSTEQBANDWIDTH enum
' ========================================================================================

%DSFXDISTORTION_POSTEQBANDWIDTH_MIN                     = 100          ' &H64
%DSFXDISTORTION_POSTEQBANDWIDTH_MAX                     = 8000         ' &H1F40

' ========================================================================================
' CONST_DSFXDISTORTION_PRELOWPASSCUTOFF enum
' ========================================================================================

%DSFXDISTORTION_PRELOWPASSCUTOFF_MIN                    = 100          ' &H64
%DSFXDISTORTION_PRELOWPASSCUTOFF_MAX                    = 8000         ' &H1F40

' ========================================================================================
' CONST_DSFX_LEFTRIGHTDELAY enum
' ========================================================================================

%DSFX_LEFTRIGHTDELAY_MIN                                = 1            ' &H1
%DSFX_LEFTRIGHTDELAY_MAX                                = 2000         ' &H7D0

' ========================================================================================
' CONST_DSFX_WETDRY enum
' ========================================================================================

%DSFX_WETDRYMIX_MIN                                     = 0            ' &H0
%DSFX_WETDRYMIX_MAX                                     = 100          ' &H64

' ========================================================================================
' CONST_DSFX_DEPTH enum
' ========================================================================================

%DSFX_DEPTH_MIN                                         = 0            ' &H0
%DSFX_DEPTH_MAX                                         = 100          ' &H64

' ========================================================================================
' CONST_DSFX_FEEDBACK enum
' ========================================================================================

%DSFX_FEEDBACK_MIN                                      = -99          ' &HFFFFFF9D
%DSFX_FEEDBACK_MAX                                      = 99           ' &H63

' ========================================================================================
' CONST_DSFXECHO_FEEDBACK enum
' ========================================================================================

%DSFXECHO_FEEDBACK_MIN                                  = 0            ' &H0
%DSFXECHO_FEEDBACK_MAX                                  = 100          ' &H64

' ========================================================================================
' CONST_DSFX_FREQUENCY enum
' ========================================================================================

%DSFX_FREQUENCY_MIN                                     = 0            ' &H0
%DSFX_FREQUENCY_MAX                                     = 10           ' &HA

' ========================================================================================
' CONST_DSFX_DELAY enum
' ========================================================================================

%DSFX_DELAY_MIN                                         = 0            ' &H0
%DSFX_DELAY_MAX                                         = 20           ' &H14

' ========================================================================================
' CONST_DSFX_FLANGER_DELAY enum
' ========================================================================================

%DSFX_FLANGER_DELAY_MIN                                 = 0            ' &H0
%DSFX_FLANGER_DELAY_MAX                                 = 4            ' &H4

' ========================================================================================
' CONST_DSOUNDFX enum
' ========================================================================================

%DSFXR_PRESENT                                          = 0            ' &H0
%DSFX_LOCHARDWARE                                       = 1            ' &H1
%DSFX_LOCSOFTWARE                                       = 2            ' &H2
%DSFXR_LOCHARDWARE                                      = 1            ' &H1
%DSFXR_LOCSOFTWARE                                      = 2            ' &H2
%DSFXR_UNALLOCATED                                      = 3            ' &H3
%DSFXR_FAILED                                           = 4            ' &H4
%DSFXR_UNKNOWN                                          = 5            ' &H5

' ========================================================================================
' CONST_DSOUND enum
' ========================================================================================

%DS3D_MINDISTANCEFACTOR                                 = 0            ' &H0
%DS3D_MAXDISTANCEFACTOR                                 = 10           ' &HA
%DS3D_DEFAULTDISTANCEFACTOR                             = 1            ' &H1
%DS3D_MINROLLOFFFACTOR                                  = 0            ' &H0
%DS3D_MAXROLLOFFFACTOR                                  = 10           ' &HA
%DS3D_DEFAULTROLLOFFFACTOR                              = 1            ' &H1
%DS3D_MINDOPPLERFACTOR                                  = 0            ' &H0
%DS3D_MAXDOPPLERFACTOR                                  = 10           ' &HA
%DS3D_DEFAULTDOPPLERFACTOR                              = 1            ' &H1
%DS3D_DEFAULTMINDISTANCE                                = 1            ' &H1
%DS3D_DEFAULTMAXDISTANCE                                = 1000000000   ' &H3B9ACA00
%DS3D_MINCONEANGLE                                      = 0            ' &H0
%DS3D_MAXCONEANGLE                                      = 360          ' &H168
%DS3D_DEFAULTCONEANGLE                                  = 360          ' &H168
%DS3D_DEFAULTCONEOUTSIDEVOLUME                          = 0            ' &H0
%DSBFREQUENCY_MIN                                       = 100          ' &H64
%DSBFREQUENCY_MAX                                       = 100000       ' &H186A0
%DSBFREQUENCY_ORIGINAL                                  = 0            ' &H0
%DSBPAN_LEFT                                            = -10000       ' &HFFFFD8F0
%DSBPAN_CENTER                                          = 0            ' &H0
%DSBPAN_RIGHT                                           = 10000        ' &H2710
%DSBVOLUME_MIN                                          = -10000       ' &HFFFFD8F0
%DSBVOLUME_MAX                                          = 0            ' &H0
%DSBSIZE_MIN                                            = 4            ' &H4
%DSBSIZE_MAX                                            = 268435455    ' &HFFFFFFF
%DSBPN_OFFSETSTOP                                       = -1           ' &HFFFFFFFF
%WAVE_FORMAT_PCM                                        = 1            ' &H1

' ========================================================================================
' CONST_DMUS_PCHANNEL enum
' ========================================================================================

%DMUS_PCHANNEL_ALL                                      = -5           ' &HFFFFFFFB
%DMUS_PCHANNEL_BROADCAST_PERFORMANCE                    = -1           ' &HFFFFFFFF
%DMUS_PCHANNEL_BROADCAST_AUDIOPATH                      = -2           ' &HFFFFFFFE
%DMUS_PCHANNEL_BROADCAST_SEGMENT                        = -3           ' &HFFFFFFFD
%DMUS_PCHANNEL_BROADCAST_GROUPS                         = -4           ' &HFFFFFFFC

' ========================================================================================
' CONST_DMUS enum
' ========================================================================================

%DMUS_MAXSUBCHORD                                       = 8            ' &H8
%DMUS_TEMPO_MAX                                         = 1000         ' &H3E8
%DMUS_TEMPO_MIN                                         = 1            ' &H1

' ========================================================================================
' CONST_DMUS_CURVES enum
' ========================================================================================

%DMUS_CURVES_LINEAR                                     = 0            ' &H0
%DMUS_CURVES_INSTANT                                    = 1            ' &H1
%DMUS_CURVES_EXP                                        = 2            ' &H2
%DMUS_CURVES_LOG                                        = 3            ' &H3
%DMUS_CURVES_SINE                                       = 4            ' &H4

' ========================================================================================
' CONST_DMUS_CURVET enum
' ========================================================================================

%DMUS_CURVET_PBCURVE                                    = 3            ' &H3
%DMUS_CURVET_CCCURVE                                    = 4            ' &H4
%DMUS_CURVET_MATCURVE                                   = 5            ' &H5
%DMUS_CURVET_PATCURVE                                   = 6            ' &H6
%DMUS_CURVET_RPNCURVE                                   = 7            ' &H7
%DMUS_CURVET_NRPNCURVE                                  = 8            ' &H8

' ========================================================================================
' CONST_DMUS_NOTIFICATION_SUBTYPE enum
' ========================================================================================

%DMUS_NOTIFICATION_MUSICSTARTED                         = 0            ' &H0
%DMUS_NOTIFICATION_MUSICSTOPPED                         = 1            ' &H1
%DMUS_NOTIFICATION_MEASUREBEAT                          = 0            ' &H0
%DMUS_NOTIFICATION_CHORD                                = 0            ' &H0
%DMUS_NOTIFICATION_GROOVE                               = 0            ' &H0
%DMUS_NOTIFICATION_EMBELLISHMENT                        = 1            ' &H1
%DMUS_NOTIFICATION_SEGSTART                             = 0            ' &H0
%DMUS_NOTIFICATION_SEGEND                               = 1            ' &H1
%DMUS_NOTIFICATION_SEGALMOSTEND                         = 2            ' &H2
%DMUS_NOTIFICATION_SEGLOOP                              = 3            ' &H3
%DMUS_NOTIFICATION_SEGABORT                             = 4            ' &H4
%DMUS_NOTIFICATION_MUSICALMOSTEND                       = 2            ' &H2
%DMUS_NOTIFICATION_RECOMPOSE                            = 0            ' &H0

' ========================================================================================
' CONST_DMUS_COMMANDT_TYPES enum
' ========================================================================================

%DMUS_COMMANDT_GROOVE                                   = 0            ' &H0
%DMUS_COMMANDT_FILL                                     = 1            ' &H1
%DMUS_COMMANDT_INTRO                                    = 2            ' &H2
%DMUS_COMMANDT_BREAK                                    = 3            ' &H3
%DMUS_COMMANDT_END                                      = 4            ' &H4
%DMUS_COMMANDT_ENDANDINTRO                              = 5            ' &H5

' ========================================================================================
' CONST_DMUS_SHAPET_TYPES enum
' ========================================================================================

%DMUS_SHAPET_FALLING                                    = 0            ' &H0
%DMUS_SHAPET_LEVEL                                      = 1            ' &H1
%DMUS_SHAPET_LOOPABLE                                   = 2            ' &H2
%DMUS_SHAPET_LOUD                                       = 3            ' &H3
%DMUS_SHAPET_QUIET                                      = 4            ' &H4
%DMUS_SHAPET_PEAKING                                    = 5            ' &H5
%DMUS_SHAPET_RANDOM                                     = 6            ' &H6
%DMUS_SHAPET_RISING                                     = 7            ' &H7
%DMUS_SHAPET_SONG                                       = 8            ' &H8

' ========================================================================================
' CONST_DMUS_COMPOSEF_FLAGS enum
' ========================================================================================

%DMUS_COMPOSEF_NONE                                     = 0            ' &H0
%DMUS_COMPOSEF_ALIGN                                    = 1            ' &H1
%DMUS_COMPOSEF_OVERLAP                                  = 2            ' &H2
%DMUS_COMPOSEF_IMMEDIATE                                = 4            ' &H4
%DMUS_COMPOSEF_GRID                                     = 8            ' &H8
%DMUS_COMPOSEF_BEAT                                     = 16           ' &H10
%DMUS_COMPOSEF_MEASURE                                  = 32           ' &H20
%DMUS_COMPOSEF_AFTERPREPARETIME                         = 64           ' &H40
%DMUS_COMPOSEF_MODULATE                                 = 4096         ' &H1000
%DMUS_COMPOSEF_LONG                                     = 8192         ' &H2000
%DMUS_COMPOSEF_VALID_START_BEAT                         = 128          ' &H80
%DMUS_COMPOSEF_VALID_START_GRID                         = 256          ' &H100
%DMUS_COMPOSEF_VALID_START_TICK                         = 512          ' &H200
%DMUS_COMPOSEF_SEGMENTEND                               = 1024         ' &H400
%DMUS_COMPOSEF_MARKER                                   = 2048         ' &H800
%DMUS_COMPOSEF_ENTIRE_TRANSITION                        = 16384        ' &H4000
%DMUS_COMPOSEF_1BAR_TRANSITION                          = 32768        ' &H8000
%DMUS_COMPOSEF_ENTIRE_ADDITION                          = 65536        ' &H10000
%DMUS_COMPOSEF_1BAR_ADDITION                            = 131072       ' &H20000
%DMUS_COMPOSEF_VALID_START_MEASURE                      = 262144       ' &H40000
%DMUS_COMPOSEF_DEFAULT                                  = 524288       ' &H80000
%DMUS_COMPOSEF_NOINVALIDATE                             = 1048576      ' &H100000
%DMUS_COMPOSEF_USE_AUDIOPATH                            = 2097152      ' &H200000

' ========================================================================================
' CONST_DMUS_PMSGF_FLAGS enum
' ========================================================================================

%DMUS_PMSGF_REFTIME                                     = 1            ' &H1
%DMUS_PMSGF_MUSICTIME                                   = 2            ' &H2
%DMUS_PMSGF_TOOL_IMMEDIATE                              = 4            ' &H4
%DMUS_PMSGF_TOOL_QUEUE                                  = 8            ' &H8
%DMUS_PMSGF_TOOL_ATTIME                                 = 16           ' &H10
%DMUS_PMSGF_TOOL_FLUSH                                  = 32           ' &H20
%DMUS_PMSGF_LOCKTOREFTIME                               = 64           ' &H40
%DMUS_PMSGF_DX8                                         = 128          ' &H80

' ========================================================================================
' CONST_DMUS_NOTEF_FLAGS enum
' ========================================================================================

%DMUS_NOTEF_NOTEON                                      = 1            ' &H1

' ========================================================================================
' CONST_DMUS_PLAYMODE_FLAGS enum
' ========================================================================================

%DMUS_PLAYMODE_KEY_ROOT                                 = 1            ' &H1
%DMUS_PLAYMODE_CHORD_ROOT                               = 2            ' &H2
%DMUS_PLAYMODE_SCALE_INTERVALS                          = 4            ' &H4
%DMUS_PLAYMODE_CHORD_INTERVALS                          = 8            ' &H8
%DMUS_PLAYMODE_NONE                                     = 16           ' &H10
%DMUS_PLAYMODE_FIXED                                    = 0            ' &H0
%DMUS_PLAYMODE_FIXEDTOKEY                               = 1            ' &H1
%DMUS_PLAYMODE_FIXEDTOCHORD                             = 2            ' &H2
%DMUS_PLAYMODE_PEDALPOINT                               = 5            ' &H5
%DMUS_PLAYMODE_MELODIC                                  = 6            ' &H6
%DMUS_PLAYMODE_NORMALCHORD                              = 10           ' &HA
%DMUS_PLAYMODE_ALWAYSPLAY                               = 14           ' &HE

' ========================================================================================
' CONST_DMUS_CURVE_FLAGS enum
' ========================================================================================

%DMUS_CURVE_RESET                                       = 1            ' &H1
%DMUS_CURVE_START_FROM_CURRENT                          = 2            ' &H2

' ========================================================================================
' CONST_DSOUNDERR enum
' ========================================================================================

%DS_OK                                                  = 0            ' &H0
%DSERR_ALLOCATED                                        = -2005401590  ' &H8878000A
%DSERR_CONTROLUNAVAIL                                   = -2005401570  ' &H8878001E
%DSERR_INVALIDPARAM                                     = -2147024809  ' &H80070057
%DSERR_INVALIDCALL                                      = -2005401550  ' &H88780032
%DSERR_GENERIC                                          = -2147467259  ' &H80004005
%DSERR_PRIOLEVELNEEDED                                  = -2005401530  ' &H88780046
%DSERR_OUTOFMEMORY                                      = 7            ' &H7
%DSERR_BADFORMAT                                        = -2005401500  ' &H88780064
%DSERR_UNSUPPORTED                                      = -2147467263  ' &H80004001
%DSERR_NODRIVER                                         = -2005401480  ' &H88780078
%DSERR_ALREADYINITIALIZED                               = -2005401470  ' &H88780082
%DSERR_BUFFERLOST                                       = -2005401450  ' &H88780096
%DSERR_OTHERAPPHASPRIO                                  = -2005401440  ' &H887800A0
%DSERR_UNINITIALIZED                                    = -2005401430  ' &H887800AA
%DSERR_NOINTERFACE                                      = 430          ' &H1AE
%DSERR_BUFFERTOOSMALL                                   = -2005401420  ' &H887800B4
%DSERR_DS8_REQUIRED                                     = -2005401410  ' &H887800BE
%DSERR_OBJECTNOTFOUND                                   = -2005397151  ' &H88781161

' ========================================================================================
' CONST_DMUSERR enum
' ========================================================================================

%DMUS_E_DRIVER_FAILED                                   = -2005397247  ' &H88781101
%DMUS_E_PORTS_OPEN                                      = -2005397246  ' &H88781102
%DMUS_E_DEVICE_IN_USE                                   = -2005397245  ' &H88781103
%DMUS_E_INSUFFICIENTBUFFER                              = -2005397244  ' &H88781104
%DMUS_E_BUFFERNOTSET                                    = -2005397243  ' &H88781105
%DMUS_E_BUFFERNOTAVAILABLE                              = -2005397242  ' &H88781106
%DMUS_E_NOTADLSCOL                                      = -2005397240  ' &H88781108
%DMUS_E_INVALIDOFFSET                                   = -2005397239  ' &H88781109
%DMUS_E_ALREADY_LOADED                                  = -2005397231  ' &H88781111
%DMUS_E_INVALIDPOS                                      = -2005397229  ' &H88781113
%DMUS_E_INVALIDPATCH                                    = -2005397228  ' &H88781114
%DMUS_E_CANNOTSEEK                                      = -2005397227  ' &H88781115
%DMUS_E_CANNOTWRITE                                     = -2005397226  ' &H88781116
%DMUS_E_CHUNKNOTFOUND                                   = -2005397225  ' &H88781117
%DMUS_E_INVALID_DOWNLOADID                              = -2005397223  ' &H88781119
%DMUS_E_NOT_DOWNLOADED_TO_PORT                          = -2005397216  ' &H88781120
%DMUS_E_ALREADY_DOWNLOADED                              = -2005397215  ' &H88781121
%DMUS_E_UNKNOWN_PROPERTY                                = -2005397214  ' &H88781122
%DMUS_E_SET_UNSUPPORTED                                 = -2005397213  ' &H88781123
%DMUS_E_GET_UNSUPPORTED                                 = -2005397212  ' &H88781124
%DMUS_E_NOTMONO                                         = -2005397211  ' &H88781125
%DMUS_E_BADARTICULATION                                 = -2005397210  ' &H88781126
%DMUS_E_BADINSTRUMENT                                   = -2005397209  ' &H88781127
%DMUS_E_BADWAVELINK                                     = -2005397208  ' &H88781128
%DMUS_E_NOARTICULATION                                  = -2005397207  ' &H88781129
%DMUS_E_NOTPCM                                          = -2005397206  ' &H8878112A
%DMUS_E_BADWAVE                                         = -2005397205  ' &H8878112B
%DMUS_E_BADOFFSETTABLE                                  = -2005397204  ' &H8878112C
%DMUS_E_UNKNOWNDOWNLOAD                                 = -2005397203  ' &H8878112D
%DMUS_E_NOSYNTHSINK                                     = -2005397202  ' &H8878112E
%DMUS_E_ALREADYOPEN                                     = -2005397201  ' &H8878112F
%DMUS_E_ALREADYCLOSED                                   = -2005397200  ' &H88781130
%DMUS_E_SYNTHNOTCONFIGURED                              = -2005397199  ' &H88781131
%DMUS_E_SYNTHACTIVE                                     = -2005397198  ' &H88781132
%DMUS_E_CANNOTREAD                                      = -2005397197  ' &H88781133
%DMUS_E_DMUSIC_RELEASED                                 = -2005397196  ' &H88781134
%DMUS_E_BUFFER_EMPTY                                    = -2005397195  ' &H88781135
%DMUS_E_BUFFER_FULL                                     = -2005397194  ' &H88781136
%DMUS_E_PORT_NOT_CAPTURE                                = -2005397193  ' &H88781137
%DMUS_E_PORT_NOT_RENDER                                 = -2005397192  ' &H88781138
%DMUS_E_DSOUND_NOT_SET                                  = -2005397191  ' &H88781139
%DMUS_E_ALREADY_ACTIVATED                               = -2005397190  ' &H8878113A
%DMUS_E_INVALIDBUFFER                                   = -2005397189  ' &H8878113B
%DMUS_E_WAVEFORMATNOTSUPPORTED                          = -2005397188  ' &H8878113C
%DMUS_E_SYNTHINACTIVE                                   = -2005397187  ' &H8878113D
%DMUS_E_DSOUND_ALREADY_SET                              = -2005397186  ' &H8878113E
%DMUS_E_INVALID_EVENT                                   = -2005397185  ' &H8878113F
%DMUS_E_UNSUPPORTED_STREAM                              = -2005397168  ' &H88781150
%DMUS_E_ALREADY_INITED                                  = -2005397167  ' &H88781151
%DMUS_E_INVALID_BAND                                    = -2005397166  ' &H88781152
%DMUS_E_TRACK_HDR_NOT_FIRST_CK                          = -2005397163  ' &H88781155
%DMUS_E_TOOL_HDR_NOT_FIRST_CK                           = -2005397162  ' &H88781156
%DMUS_E_INVALID_TRACK_HDR                               = -2005397161  ' &H88781157
%DMUS_E_INVALID_TOOL_HDR                                = -2005397160  ' &H88781158
%DMUS_E_ALL_TOOLS_FAILED                                = -2005397159  ' &H88781159
%DMUS_E_ALL_TRACKS_FAILED                               = -2005397152  ' &H88781160
%DMUS_E_NOT_FOUND                                       = -2005397151  ' &H88781161
%DMUS_E_NOT_INIT                                        = -2005397150  ' &H88781162
%DMUS_E_TYPE_DISABLED                                   = -2005397149  ' &H88781163
%DMUS_E_TYPE_UNSUPPORTED                                = -2005397148  ' &H88781164
%DMUS_E_TIME_PAST                                       = -2005397147  ' &H88781165
%DMUS_E_TRACK_NOT_FOUND                                 = -2005397146  ' &H88781166
%DMUS_E_NO_MASTER_CLOCK                                 = -2005397136  ' &H88781170
%DMUS_E_LOADER_NOCLASSID                                = -2005397120  ' &H88781180
%DMUS_E_LOADER_BADPATH                                  = -2005397119  ' &H88781181
%DMUS_E_LOADER_FAILEDOPEN                               = -2005397118  ' &H88781182
%DMUS_E_LOADER_FORMATNOTSUPPORTED                       = -2005397117  ' &H88781183
%DMUS_E_LOADER_FAILEDCREATE                             = -2005397116  ' &H88781184
%DMUS_E_LOADER_OBJECTNOTFOUND                           = -2005397115  ' &H88781185
%DMUS_E_LOADER_NOFILENAME                               = -2005397114  ' &H88781186
%DMUS_E_INVALIDFILE                                     = -2005396992  ' &H88781200
%DMUS_E_ALREADY_EXISTS                                  = -2005396991  ' &H88781201
%DMUS_E_OUT_OF_RANGE                                    = -2005396990  ' &H88781202
%DMUS_E_SEGMENT_INIT_FAILED                             = -2005396989  ' &H88781203
%DMUS_E_ALREADY_SENT                                    = -2005396988  ' &H88781204
%DMUS_E_CANNOT_FREE                                     = -2005396987  ' &H88781205
%DMUS_E_CANNOT_OPEN_PORT                                = -2005396986  ' &H88781206
%DMUS_E_CANNOT_CONVERT                                  = -2005396985  ' &H88781207
%DMUS_E_DESCEND_CHUNK_FAIL                              = -2005396976  ' &H88781210
%DMUS_E_NOT_LOADED                                      = -2005396975  ' &H88781211
%DMUS_E_INVALID_SEGMENTTRIGGERTRACK                     = -2005396960  ' &H88781220
%DMUS_E_INVALID_LYRICSTRACK                             = -2005396959  ' &H88781221
%DMUS_E_INVALID_PARAMCONTROLTRACK                       = -2005396958  ' &H88781222
%DMUS_E_AUDIOPATHS_NOT_VALID                            = -2005396954  ' &H88781226
%DMUS_E_AUDIOPATHS_IN_USE                               = -2005396953  ' &H88781227
%DMUS_E_NO_AUDIOPATH_CONFIG                             = -2005396952  ' &H88781228
%DMUS_E_AUDIOPATH_INACTIVE                              = -2005396951  ' &H88781229
%DMUS_E_AUDIOPATH_NOBUFFER                              = -2005396950  ' &H8878122A
%DMUS_E_AUDIOPATH_NOPORT                                = -2005396949  ' &H8878122B
%DMUS_E_NO_AUDIOPATH                                    = -2005396948  ' &H8878122C
%DMUS_E_FAIL                                            = -2147024809  ' &H80070057
%DMUS_E_INVALIDARG                                      = 5            ' &H5
%DMUS_E_NOINTERFACE                                     = 430          ' &H1AE
%DMUS_E_OUTOFMEMORY                                     = 7            ' &H7
%DMUS_E_NOTIMPL                                         = 445          ' &H1BD

' ========================================================================================
' CONST_DIDFTFLAGS enum
' ========================================================================================

%DIDFT_ALL                                              = 0            ' &H0
%DIDFT_RELAXIS                                          = 1            ' &H1
%DIDFT_ABSAXIS                                          = 2            ' &H2
%DIDFT_AXIS                                             = 3            ' &H3
%DIDFT_PSHBUTTON                                        = 4            ' &H4
%DIDFT_TGLBUTTON                                        = 8            ' &H8
%DIDFT_BUTTON                                           = 12           ' &HC
%DIDFT_POV                                              = 16           ' &H10
%DIDFT_COLLECTION                                       = 64           ' &H40
%DIDFT_NODATA                                           = 128          ' &H80
%DIDFT_ANYINSTANCE                                      = 16776960     ' &HFFFF00
%DIDFT_INSTANCEMASK                                     = 16776960     ' &HFFFF00
%DIDFT_FFACTUATOR                                       = 16777216     ' &H1000000
%DIDFT_FFEFFECTTRIGGER                                  = 33554432     ' &H2000000
%DIDFT_NOCOLLECTION                                     = 16776960     ' &HFFFF00
%DIDFT_VENDORDEFINED                                    = 67108864     ' &H4000000
%DIDFT_ALIAS                                            = 134217728    ' &H8000000
%DIDFT_OUTPUT                                           = 268435456    ' &H10000000

' ========================================================================================
' CONST_DIDEVICEOBJINSTANCEFLAGS enum
' ========================================================================================

%DIDOI_FFACTUATOR                                       = 1            ' &H1
%DIDOI_FFEFFECTTRIGGER                                  = 2            ' &H2
%DIDOI_POLLED                                           = 32768        ' &H8000
%DIDOI_ASPECTPOSITION                                   = 256          ' &H100
%DIDOI_ASPECTVELOCITY                                   = 512          ' &H200
%DIDOI_ASPECTACCEL                                      = 768          ' &H300
%DIDOI_ASPECTFORCE                                      = 1024         ' &H400
%DIDOI_ASPECTMASK                                       = 3840         ' &HF00
%DIDOI_GUIDISUSAGE                                      = 65536        ' &H10000

' ========================================================================================
' CONST_DIDEVCAPSFLAGS enum
' ========================================================================================

%DIDC_ATTACHED                                          = 1            ' &H1
%DIDC_POLLEDDEVICE                                      = 2            ' &H2
%DIDC_EMULATED                                          = 4            ' &H4
%DIDC_POLLEDDATAFORMAT                                  = 8            ' &H8
%DIDC_FORCEFEEDBACK                                     = 256          ' &H100
%DIDC_FFATTACK                                          = 512          ' &H200
%DIDC_FFFADE                                            = 1024         ' &H400
%DIDC_SATURATION                                        = 2048         ' &H800
%DIDC_POSNEGCOEFFICIENTS                                = 4096         ' &H1000
%DIDC_POSNEGSATURATION                                  = 8192         ' &H2000
%DIDC_DEADBAND                                          = 16384        ' &H4000
%DIDC_STARTDELAY                                        = 32768        ' &H8000
%DIDC_ALIAS                                             = 65536        ' &H10000
%DIDC_PHANTOM                                           = 131072       ' &H20000
%DIDC_HIDDEN                                            = 262144       ' &H40000

' ========================================================================================
' CONST_DIDGDDFLAGS enum
' ========================================================================================

%DIGDD_DEFAULT                                          = 0            ' &H0
%DIGDD_PEEK                                             = 1            ' &H1

' ========================================================================================
' CONST_DIPHFLAGS enum
' ========================================================================================

%DIPH_DEVICE                                            = 0            ' &H0
%DIPH_BYOFFSET                                          = 1            ' &H1
%DIPH_BYID                                              = 2            ' &H2
%DIPH_BYUSAGE                                           = 3            ' &H3

' ========================================================================================
' CONST_DISCLFLAGS enum
' ========================================================================================

%DISCL_EXCLUSIVE                                        = 1            ' &H1
%DISCL_NONEXCLUSIVE                                     = 2            ' &H2
%DISCL_FOREGROUND                                       = 4            ' &H4
%DISCL_BACKGROUND                                       = 8            ' &H8
%DISCL_NOWINKEY                                         = 16           ' &H10

' ========================================================================================
' CONST_DICOMMONDATAFORMATS enum
' ========================================================================================

%DIFORMAT_KEYBOARD                                      = 1            ' &H1
%DIFORMAT_MOUSE                                         = 2            ' &H2
%DIFORMAT_JOYSTICK                                      = 3            ' &H3
%DIFORMAT_JOYSTICK2                                     = 4            ' &H4
%DIFORMAT_MOUSE2                                        = 5            ' &H5

' ========================================================================================
' CONST_DIDATAFORMATFLAGS enum
' ========================================================================================

%DIDF_ABSAXIS                                           = 1            ' &H1
%DIDF_RELAXIS                                           = 2            ' &H2

' ========================================================================================
' CONST_DICONDITIONFLAGS enum
' ========================================================================================

%DICONDITION_USE_BOTH_AXES                              = 1            ' &H1
%DICONDITION_USE_DIRECTION                              = 2            ' &H2

' ========================================================================================
' CONST_DIEPFLAGS enum
' ========================================================================================

%DIEP_DURATION                                          = 1            ' &H1
%DIEP_SAMPLEPERIOD                                      = 2            ' &H2
%DIEP_GAIN                                              = 4            ' &H4
%DIEP_TRIGGERBUTTON                                     = 8            ' &H8
%DIEP_TRIGGERREPEATINTERVAL                             = 16           ' &H10
%DIEP_AXES                                              = 32           ' &H20
%DIEP_DIRECTION                                         = 64           ' &H40
%DIEP_ENVELOPE                                          = 128          ' &H80
%DIEP_TYPESPECIFICPARAMS                                = 256          ' &H100
%DIEP_ALLPARAMS                                         = 1023         ' &H3FF
%DIEP_START                                             = 536870912    ' &H20000000
%DIEP_NORESTART                                         = 1073741824   ' &H40000000
%DIEP_NODOWNLOAD                                        = -2147483648  ' &H80000000
%DIEP_STARTDELAY                                        = 512          ' &H200

' ========================================================================================
' CONST_DISDDFLAGS enum
' ========================================================================================

%DISDD_DEFAULT                                          = 0            ' &H0
%DISDD_CONTINUE                                         = 1            ' &H1

' ========================================================================================
' CONST_DISFFCFLAGS enum
' ========================================================================================

%DISFFC_RESET                                           = 1            ' &H1
%DISFFC_STOPALL                                         = 2            ' &H2
%DISFFC_PAUSE                                           = 4            ' &H4
%DISFFC_CONTINUE                                        = 8            ' &H8
%DISFFC_SETACTUATORSON                                  = 16           ' &H10
%DISFFC_SETACTUATORSOFF                                 = 32           ' &H20

' ========================================================================================
' CONST_DIGFFSFLAGS enum
' ========================================================================================

%DIGFFS_EMPTY                                           = 1            ' &H1
%DIGFFS_STOPPED                                         = 2            ' &H2
%DIGFFS_PAUSED                                          = 4            ' &H4
%DIGFFS_ACTUATORSON                                     = 16           ' &H10
%DIGFFS_ACTUATORSOFF                                    = 32           ' &H20
%DIGFFS_POWERON                                         = 64           ' &H40
%DIGFFS_POWEROFF                                        = 128          ' &H80
%DIGFFS_SAFETYSWITCHON                                  = 256          ' &H100
%DIGFFS_SAFETYSWITCHOFF                                 = 512          ' &H200
%DIGFFS_USERFFSWITCHON                                  = 1024         ' &H400
%DIGFFS_USERFFSWITCHOFF                                 = 2048         ' &H800
%DIGFFS_DEVICELOST                                      = -2147483648  ' &H80000000

' ========================================================================================
' CONST_DIEFTFLAGS enum
' ========================================================================================

%DIEFT_ALL                                              = 0            ' &H0
%DIEFT_CONSTANTFORCE                                    = 1            ' &H1
%DIEFT_RAMPFORCE                                        = 2            ' &H2
%DIEFT_PERIODIC                                         = 3            ' &H3
%DIEFT_CONDITION                                        = 4            ' &H4
%DIEFT_CUSTOMFORCE                                      = 5            ' &H5
%DIEFT_HARDWARE                                         = 255          ' &HFF
%DIEFT_FFATTACK                                         = 512          ' &H200
%DIEFT_FFFADE                                           = 1024         ' &H400
%DIEFT_SATURATION                                       = 2048         ' &H800
%DIEFT_POSNEGCOEFFICIENTS                               = 4096         ' &H1000
%DIEFT_POSNEGSATURATION                                 = 8192         ' &H2000
%DIEFT_DEADBAND                                         = 16384        ' &H4000
%DIEFT_STARTDELAY                                       = 32768        ' &H8000

' ========================================================================================
' CONST_DI8DEVICETYPE enum
' ========================================================================================

%DI8DEVCLASS_ALL                                        = 0            ' &H0
%DI8DEVCLASS_DEVICE                                     = 1            ' &H1
%DI8DEVCLASS_POINTER                                    = 2            ' &H2
%DI8DEVCLASS_KEYBOARD                                   = 3            ' &H3
%DI8DEVCLASS_GAMECTRL                                   = 4            ' &H4
%DI8DEVTYPE_DEVICE                                      = 17           ' &H11
%DI8DEVTYPE_MOUSE                                       = 18           ' &H12
%DI8DEVTYPE_KEYBOARD                                    = 19           ' &H13
%DI8DEVTYPE_JOYSTICK                                    = 20           ' &H14
%DI8DEVTYPE_GAMEPAD                                     = 21           ' &H15
%DI8DEVTYPE_DRIVING                                     = 22           ' &H16
%DI8DEVTYPE_FLIGHT                                      = 23           ' &H17
%DI8DEVTYPE_1STPERSON                                   = 24           ' &H18
%DI8DEVTYPE_DEVICECTRL                                  = 25           ' &H19
%DI8DEVTYPE_SCREENPOINTER                               = 26           ' &H1A
%DI8DEVTYPE_REMOTE                                      = 27           ' &H1B
%DI8DEVTYPE_SUPPLEMENTAL                                = 28           ' &H1C
%DI8DEVTYPE_FORCEDWORD                                  = 2130706432   ' &H7F000000

' ========================================================================================
' CONST_DIENUMDEVICESFLAGS enum
' ========================================================================================

%DIEDFL_ALLDEVICES                                      = 0            ' &H0
%DIEDFL_ATTACHEDONLY                                    = 1            ' &H1
%DIEDFL_FORCEFEEDBACK                                   = 256          ' &H100
%DIEDFL_INCLUDEALIASES                                  = 65536        ' &H10000
%DIEDFL_INCLUDEPHANTOMS                                 = 131072       ' &H20000
%DIEDFL_INCLUDEHIDDEN                                   = 262144       ' &H40000

' ========================================================================================
' CONST_DIGENRE enum
' ========================================================================================

%DIVIRTUAL_DRIVING_RACE                                 = 16777216     ' &H1000000
%DIAXIS_DRIVINGR_STEER                                  = 16812545     ' &H1008A01
%DIAXIS_DRIVINGR_ACCELERATE                             = 17011202     ' &H1039202
%DIAXIS_DRIVINGR_BRAKE                                  = 17043971     ' &H1041203
%DIBUTTON_DRIVINGR_SHIFTUP                              = 16780289     ' &H1000C01
%DIBUTTON_DRIVINGR_SHIFTDOWN                            = 16780290     ' &H1000C02
%DIBUTTON_DRIVINGR_VIEW                                 = 16784387     ' &H1001C03
%DIBUTTON_DRIVINGR_MENU                                 = 16778493     ' &H10004FD
%DIAXIS_DRIVINGR_ACCEL_AND_BRAKE                        = 16861700     ' &H1014A04
%DIHATSWITCH_DRIVINGR_GLANCE                            = 16795137     ' &H1004601
%DIBUTTON_DRIVINGR_BRAKE                                = 16796676     ' &H1004C04
%DIBUTTON_DRIVINGR_DASHBOARD                            = 16794629     ' &H1004405
%DIBUTTON_DRIVINGR_AIDS                                 = 16794630     ' &H1004406
%DIBUTTON_DRIVINGR_MAP                                  = 16794631     ' &H1004407
%DIBUTTON_DRIVINGR_BOOST                                = 16794632     ' &H1004408
%DIBUTTON_DRIVINGR_PIT                                  = 16794633     ' &H1004409
%DIBUTTON_DRIVINGR_ACCELERATE_LINK                      = 17028320     ' &H103D4E0
%DIBUTTON_DRIVINGR_STEER_LEFT_LINK                      = 16829668     ' &H100CCE4
%DIBUTTON_DRIVINGR_STEER_RIGHT_LINK                     = 16829676     ' &H100CCEC
%DIBUTTON_DRIVINGR_GLANCE_LEFT_LINK                     = 17286372     ' &H107C4E4
%DIBUTTON_DRIVINGR_GLANCE_RIGHT_LINK                    = 17286380     ' &H107C4EC
%DIBUTTON_DRIVINGR_DEVICE                               = 16794878     ' &H10044FE
%DIBUTTON_DRIVINGR_PAUSE                                = 16794876     ' &H10044FC
%DIVIRTUAL_DRIVING_COMBAT                               = 33554432     ' &H2000000
%DIAXIS_DRIVINGC_STEER                                  = 33589761     ' &H2008A01
%DIAXIS_DRIVINGC_ACCELERATE                             = 33788418     ' &H2039202
%DIAXIS_DRIVINGC_BRAKE                                  = 33821187     ' &H2041203
%DIBUTTON_DRIVINGC_FIRE                                 = 33557505     ' &H2000C01
%DIBUTTON_DRIVINGC_WEAPONS                              = 33557506     ' &H2000C02
%DIBUTTON_DRIVINGC_TARGET                               = 33557507     ' &H2000C03
%DIBUTTON_DRIVINGC_MENU                                 = 33555709     ' &H20004FD
%DIAXIS_DRIVINGC_ACCEL_AND_BRAKE                        = 33638916     ' &H2014A04
%DIHATSWITCH_DRIVINGC_GLANCE                            = 33572353     ' &H2004601
%DIBUTTON_DRIVINGC_SHIFTUP                              = 33573892     ' &H2004C04
%DIBUTTON_DRIVINGC_SHIFTDOWN                            = 33573893     ' &H2004C05
%DIBUTTON_DRIVINGC_DASHBOARD                            = 33571846     ' &H2004406
%DIBUTTON_DRIVINGC_AIDS                                 = 33571847     ' &H2004407
%DIBUTTON_DRIVINGC_BRAKE                                = 33573896     ' &H2004C08
%DIBUTTON_DRIVINGC_FIRESECONDARY                        = 33573897     ' &H2004C09
%DIBUTTON_DRIVINGC_ACCELERATE_LINK                      = 33805536     ' &H203D4E0
%DIBUTTON_DRIVINGC_STEER_LEFT_LINK                      = 33606884     ' &H200CCE4
%DIBUTTON_DRIVINGC_STEER_RIGHT_LINK                     = 33606892     ' &H200CCEC
%DIBUTTON_DRIVINGC_GLANCE_LEFT_LINK                     = 34063588     ' &H207C4E4
%DIBUTTON_DRIVINGC_GLANCE_RIGHT_LINK                    = 34063596     ' &H207C4EC
%DIBUTTON_DRIVINGC_DEVICE                               = 33572094     ' &H20044FE
%DIBUTTON_DRIVINGC_PAUSE                                = 33572092     ' &H20044FC
%DIVIRTUAL_DRIVING_TANK                                 = 50331648     ' &H3000000
%DIAXIS_DRIVINGT_STEER                                  = 50366977     ' &H3008A01
%DIAXIS_DRIVINGT_BARREL                                 = 50397698     ' &H3010202
%DIAXIS_DRIVINGT_ACCELERATE                             = 50565635     ' &H3039203
%DIAXIS_DRIVINGT_ROTATE                                 = 50463236     ' &H3020204
%DIBUTTON_DRIVINGT_FIRE                                 = 50334721     ' &H3000C01
%DIBUTTON_DRIVINGT_WEAPONS                              = 50334722     ' &H3000C02
%DIBUTTON_DRIVINGT_TARGET                               = 50334723     ' &H3000C03
%DIBUTTON_DRIVINGT_MENU                                 = 50332925     ' &H30004FD
%DIHATSWITCH_DRIVINGT_GLANCE                            = 50349569     ' &H3004601
%DIAXIS_DRIVINGT_BRAKE                                  = 50614789     ' &H3045205
%DIAXIS_DRIVINGT_ACCEL_AND_BRAKE                        = 50416134     ' &H3014A06
%DIBUTTON_DRIVINGT_VIEW                                 = 50355204     ' &H3005C04
%DIBUTTON_DRIVINGT_DASHBOARD                            = 50355205     ' &H3005C05
%DIBUTTON_DRIVINGT_BRAKE                                = 50351110     ' &H3004C06
%DIBUTTON_DRIVINGT_FIRESECONDARY                        = 50351111     ' &H3004C07
%DIBUTTON_DRIVINGT_ACCELERATE_LINK                      = 50582752     ' &H303D4E0
%DIBUTTON_DRIVINGT_STEER_LEFT_LINK                      = 50384100     ' &H300CCE4
%DIBUTTON_DRIVINGT_STEER_RIGHT_LINK                     = 50384108     ' &H300CCEC
%DIBUTTON_DRIVINGT_BARREL_UP_LINK                       = 50414816     ' &H30144E0
%DIBUTTON_DRIVINGT_BARREL_DOWN_LINK                     = 50414824     ' &H30144E8
%DIBUTTON_DRIVINGT_ROTATE_LEFT_LINK                     = 50480356     ' &H30244E4
%DIBUTTON_DRIVINGT_ROTATE_RIGHT_LINK                    = 50480364     ' &H30244EC
%DIBUTTON_DRIVINGT_GLANCE_LEFT_LINK                     = 50840804     ' &H307C4E4
%DIBUTTON_DRIVINGT_GLANCE_RIGHT_LINK                    = 50840812     ' &H307C4EC
%DIBUTTON_DRIVINGT_DEVICE                               = 50349310     ' &H30044FE
%DIBUTTON_DRIVINGT_PAUSE                                = 50349308     ' &H30044FC
%DIVIRTUAL_FLYING_CIVILIAN                              = 67108864     ' &H4000000
%DIAXIS_FLYINGC_BANK                                    = 67144193     ' &H4008A01
%DIAXIS_FLYINGC_PITCH                                   = 67176962     ' &H4010A02
%DIAXIS_FLYINGC_THROTTLE                                = 67342851     ' &H4039203
%DIBUTTON_FLYINGC_VIEW                                  = 67118081     ' &H4002401
%DIBUTTON_FLYINGC_DISPLAY                               = 67118082     ' &H4002402
%DIBUTTON_FLYINGC_GEAR                                  = 67120131     ' &H4002C03
%DIBUTTON_FLYINGC_MENU                                  = 67110141     ' &H40004FD
%DIHATSWITCH_FLYINGC_GLANCE                             = 67126785     ' &H4004601
%DIAXIS_FLYINGC_BRAKE                                   = 67398148     ' &H4046A04
%DIAXIS_FLYINGC_RUDDER                                  = 67260933     ' &H4025205
%DIAXIS_FLYINGC_FLAPS                                   = 67459590     ' &H4055A06
%DIBUTTON_FLYINGC_FLAPSUP                               = 67134468     ' &H4006404
%DIBUTTON_FLYINGC_FLAPSDOWN                             = 67134469     ' &H4006405
%DIBUTTON_FLYINGC_BRAKE_LINK                            = 67398880     ' &H4046CE0
%DIBUTTON_FLYINGC_FASTER_LINK                           = 67359968     ' &H403D4E0
%DIBUTTON_FLYINGC_SLOWER_LINK                           = 67359976     ' &H403D4E8
%DIBUTTON_FLYINGC_GLANCE_LEFT_LINK                      = 67618020     ' &H407C4E4
%DIBUTTON_FLYINGC_GLANCE_RIGHT_LINK                     = 67618028     ' &H407C4EC
%DIBUTTON_FLYINGC_GLANCE_UP_LINK                        = 67618016     ' &H407C4E0
%DIBUTTON_FLYINGC_GLANCE_DOWN_LINK                      = 67618024     ' &H407C4E8
%DIBUTTON_FLYINGC_DEVICE                                = 67126526     ' &H40044FE
%DIBUTTON_FLYINGC_PAUSE                                 = 67126524     ' &H40044FC
%DIVIRTUAL_FLYING_MILITARY                              = 83886080     ' &H5000000
%DIAXIS_FLYINGM_BANK                                    = 83921409     ' &H5008A01
%DIAXIS_FLYINGM_PITCH                                   = 83954178     ' &H5010A02
%DIAXIS_FLYINGM_THROTTLE                                = 84120067     ' &H5039203
%DIBUTTON_FLYINGM_FIRE                                  = 83889153     ' &H5000C01
%DIBUTTON_FLYINGM_WEAPONS                               = 83889154     ' &H5000C02
%DIBUTTON_FLYINGM_TARGET                                = 83889155     ' &H5000C03
%DIBUTTON_FLYINGM_MENU                                  = 83887357     ' &H50004FD
%DIHATSWITCH_FLYINGM_GLANCE                             = 83904001     ' &H5004601
%DIBUTTON_FLYINGM_COUNTER                               = 83909636     ' &H5005C04
%DIAXIS_FLYINGM_RUDDER                                  = 84036100     ' &H5024A04
%DIAXIS_FLYINGM_BRAKE                                   = 84173317     ' &H5046205
%DIBUTTON_FLYINGM_VIEW                                  = 83911685     ' &H5006405
%DIBUTTON_FLYINGM_DISPLAY                               = 83911686     ' &H5006406
%DIAXIS_FLYINGM_FLAPS                                   = 84234758     ' &H5055206
%DIBUTTON_FLYINGM_FLAPSUP                               = 83907591     ' &H5005407
%DIBUTTON_FLYINGM_FLAPSDOWN                             = 83907592     ' &H5005408
%DIBUTTON_FLYINGM_FIRESECONDARY                         = 83905545     ' &H5004C09
%DIBUTTON_FLYINGM_GEAR                                  = 83911690     ' &H500640A
%DIBUTTON_FLYINGM_BRAKE_LINK                            = 84174048     ' &H50464E0
%DIBUTTON_FLYINGM_FASTER_LINK                           = 84137184     ' &H503D4E0
%DIBUTTON_FLYINGM_SLOWER_LINK                           = 84137192     ' &H503D4E8
%DIBUTTON_FLYINGM_GLANCE_LEFT_LINK                      = 84395236     ' &H507C4E4
%DIBUTTON_FLYINGM_GLANCE_RIGHT_LINK                     = 84395244     ' &H507C4EC
%DIBUTTON_FLYINGM_GLANCE_UP_LINK                        = 84395232     ' &H507C4E0
%DIBUTTON_FLYINGM_GLANCE_DOWN_LINK                      = 84395240     ' &H507C4E8
%DIBUTTON_FLYINGM_DEVICE                                = 83903742     ' &H50044FE
%DIBUTTON_FLYINGM_PAUSE                                 = 83903740     ' &H50044FC
%DIVIRTUAL_FLYING_HELICOPTER                            = 100663296    ' &H6000000
%DIAXIS_FLYINGH_BANK                                    = 100698625    ' &H6008A01
%DIAXIS_FLYINGH_PITCH                                   = 100731394    ' &H6010A02
%DIAXIS_FLYINGH_COLLECTIVE                              = 100764163    ' &H6018A03
%DIBUTTON_FLYINGH_FIRE                                  = 100668417    ' &H6001401
%DIBUTTON_FLYINGH_WEAPONS                               = 100668418    ' &H6001402
%DIBUTTON_FLYINGH_TARGET                                = 100668419    ' &H6001403
%DIBUTTON_FLYINGH_MENU                                  = 100664573    ' &H60004FD
%DIHATSWITCH_FLYINGH_GLANCE                             = 100681217    ' &H6004601
%DIAXIS_FLYINGH_TORQUE                                  = 100817412    ' &H6025A04
%DIAXIS_FLYINGH_THROTTLE                                = 100915717    ' &H603DA05
%DIBUTTON_FLYINGH_COUNTER                               = 100684804    ' &H6005404
%DIBUTTON_FLYINGH_VIEW                                  = 100688901    ' &H6006405
%DIBUTTON_FLYINGH_GEAR                                  = 100688902    ' &H6006406
%DIBUTTON_FLYINGH_FIRESECONDARY                         = 100682759    ' &H6004C07
%DIBUTTON_FLYINGH_FASTER_LINK                           = 100916448    ' &H603DCE0
%DIBUTTON_FLYINGH_SLOWER_LINK                           = 100916456    ' &H603DCE8
%DIBUTTON_FLYINGH_GLANCE_LEFT_LINK                      = 101172452    ' &H607C4E4
%DIBUTTON_FLYINGH_GLANCE_RIGHT_LINK                     = 101172460    ' &H607C4EC
%DIBUTTON_FLYINGH_GLANCE_UP_LINK                        = 101172448    ' &H607C4E0
%DIBUTTON_FLYINGH_GLANCE_DOWN_LINK                      = 101172456    ' &H607C4E8
%DIBUTTON_FLYINGH_DEVICE                                = 100680958    ' &H60044FE
%DIBUTTON_FLYINGH_PAUSE                                 = 100680956    ' &H60044FC
%DIVIRTUAL_SPACESIM                                     = 117440512    ' &H7000000
%DIAXIS_SPACESIM_LATERAL                                = 117473793    ' &H7008201
%DIAXIS_SPACESIM_MOVE                                   = 117506562    ' &H7010202
%DIAXIS_SPACESIM_THROTTLE                               = 117670403    ' &H7038203
%DIBUTTON_SPACESIM_FIRE                                 = 117441537    ' &H7000401
%DIBUTTON_SPACESIM_WEAPONS                              = 117441538    ' &H7000402
%DIBUTTON_SPACESIM_TARGET                               = 117441539    ' &H7000403
%DIBUTTON_SPACESIM_MENU                                 = 117441789    ' &H70004FD
%DIHATSWITCH_SPACESIM_GLANCE                            = 117458433    ' &H7004601
%DIAXIS_SPACESIM_CLIMB                                  = 117555716    ' &H701C204
%DIAXIS_SPACESIM_ROTATE                                 = 117588485    ' &H7024205
%DIBUTTON_SPACESIM_VIEW                                 = 117457924    ' &H7004404
%DIBUTTON_SPACESIM_DISPLAY                              = 117457925    ' &H7004405
%DIBUTTON_SPACESIM_RAISE                                = 117457926    ' &H7004406
%DIBUTTON_SPACESIM_LOWER                                = 117457927    ' &H7004407
%DIBUTTON_SPACESIM_GEAR                                 = 117457928    ' &H7004408
%DIBUTTON_SPACESIM_FIRESECONDARY                        = 117457929    ' &H7004409
%DIBUTTON_SPACESIM_LEFT_LINK                            = 117490916    ' &H700C4E4
%DIBUTTON_SPACESIM_RIGHT_LINK                           = 117490924    ' &H700C4EC
%DIBUTTON_SPACESIM_FORWARD_LINK                         = 117523680    ' &H70144E0
%DIBUTTON_SPACESIM_BACKWARD_LINK                        = 117523688    ' &H70144E8
%DIBUTTON_SPACESIM_FASTER_LINK                          = 117687520    ' &H703C4E0
%DIBUTTON_SPACESIM_SLOWER_LINK                          = 117687528    ' &H703C4E8
%DIBUTTON_SPACESIM_TURN_LEFT_LINK                       = 117589220    ' &H70244E4
%DIBUTTON_SPACESIM_TURN_RIGHT_LINK                      = 117589228    ' &H70244EC
%DIBUTTON_SPACESIM_GLANCE_LEFT_LINK                     = 117949668    ' &H707C4E4
%DIBUTTON_SPACESIM_GLANCE_RIGHT_LINK                    = 117949676    ' &H707C4EC
%DIBUTTON_SPACESIM_GLANCE_UP_LINK                       = 117949664    ' &H707C4E0
%DIBUTTON_SPACESIM_GLANCE_DOWN_LINK                     = 117949672    ' &H707C4E8
%DIBUTTON_SPACESIM_DEVICE                               = 117458174    ' &H70044FE
%DIBUTTON_SPACESIM_PAUSE                                = 117458172    ' &H70044FC
%DIVIRTUAL_FIGHTING_HAND2HAND                           = 134217728    ' &H8000000
%DIAXIS_FIGHTINGH_LATERAL                               = 134251009    ' &H8008201
%DIAXIS_FIGHTINGH_MOVE                                  = 134283778    ' &H8010202
%DIBUTTON_FIGHTINGH_PUNCH                               = 134218753    ' &H8000401
%DIBUTTON_FIGHTINGH_KICK                                = 134218754    ' &H8000402
%DIBUTTON_FIGHTINGH_BLOCK                               = 134218755    ' &H8000403
%DIBUTTON_FIGHTINGH_CROUCH                              = 134218756    ' &H8000404
%DIBUTTON_FIGHTINGH_JUMP                                = 134218757    ' &H8000405
%DIBUTTON_FIGHTINGH_SPECIAL1                            = 134218758    ' &H8000406
%DIBUTTON_FIGHTINGH_SPECIAL2                            = 134218759    ' &H8000407
%DIBUTTON_FIGHTINGH_MENU                                = 134219005    ' &H80004FD
%DIBUTTON_FIGHTINGH_SELECT                              = 134235144    ' &H8004408
%DIHATSWITCH_FIGHTINGH_SLIDE                            = 134235649    ' &H8004601
%DIBUTTON_FIGHTINGH_DISPLAY                             = 134235145    ' &H8004409
%DIAXIS_FIGHTINGH_ROTATE                                = 134365699    ' &H8024203
%DIBUTTON_FIGHTINGH_DODGE                               = 134235146    ' &H800440A
%DIBUTTON_FIGHTINGH_LEFT_LINK                           = 134268132    ' &H800C4E4
%DIBUTTON_FIGHTINGH_RIGHT_LINK                          = 134268140    ' &H800C4EC
%DIBUTTON_FIGHTINGH_FORWARD_LINK                        = 134300896    ' &H80144E0
%DIBUTTON_FIGHTINGH_BACKWARD_LINK                       = 134300904    ' &H80144E8
%DIBUTTON_FIGHTINGH_DEVICE                              = 134235390    ' &H80044FE
%DIBUTTON_FIGHTINGH_PAUSE                               = 134235388    ' &H80044FC
%DIVIRTUAL_FIGHTING_FPS                                 = 150994944    ' &H9000000
%DIAXIS_FPS_ROTATE                                      = 151028225    ' &H9008201
%DIAXIS_FPS_MOVE                                        = 151060994    ' &H9010202
%DIBUTTON_FPS_FIRE                                      = 150995969    ' &H9000401
%DIBUTTON_FPS_WEAPONS                                   = 150995970    ' &H9000402
%DIBUTTON_FPS_APPLY                                     = 150995971    ' &H9000403
%DIBUTTON_FPS_SELECT                                    = 150995972    ' &H9000404
%DIBUTTON_FPS_CROUCH                                    = 150995973    ' &H9000405
%DIBUTTON_FPS_JUMP                                      = 150995974    ' &H9000406
%DIAXIS_FPS_LOOKUPDOWN                                  = 151093763    ' &H9018203
%DIBUTTON_FPS_STRAFE                                    = 150995975    ' &H9000407
%DIBUTTON_FPS_MENU                                      = 150996221    ' &H90004FD
%DIHATSWITCH_FPS_GLANCE                                 = 151012865    ' &H9004601
%DIBUTTON_FPS_DISPLAY                                   = 151012360    ' &H9004408
%DIAXIS_FPS_SIDESTEP                                    = 151142916    ' &H9024204
%DIBUTTON_FPS_DODGE                                     = 151012361    ' &H9004409
%DIBUTTON_FPS_GLANCEL                                   = 151012362    ' &H900440A
%DIBUTTON_FPS_GLANCER                                   = 151012363    ' &H900440B
%DIBUTTON_FPS_FIRESECONDARY                             = 151012364    ' &H900440C
%DIBUTTON_FPS_ROTATE_LEFT_LINK                          = 151045348    ' &H900C4E4
%DIBUTTON_FPS_ROTATE_RIGHT_LINK                         = 151045356    ' &H900C4EC
%DIBUTTON_FPS_FORWARD_LINK                              = 151078112    ' &H90144E0
%DIBUTTON_FPS_BACKWARD_LINK                             = 151078120    ' &H90144E8
%DIBUTTON_FPS_GLANCE_UP_LINK                            = 151110880    ' &H901C4E0
%DIBUTTON_FPS_GLANCE_DOWN_LINK                          = 151110888    ' &H901C4E8
%DIBUTTON_FPS_DEVICE                                    = 151012606    ' &H90044FE
%DIBUTTON_FPS_PAUSE                                     = 151012604    ' &H90044FC
%DIVIRTUAL_FIGHTING_THIRDPERSON                         = 167772160    ' &HA000000
%DIAXIS_TPS_TURN                                        = 167903745    ' &HA020201
%DIAXIS_TPS_MOVE                                        = 167838210    ' &HA010202
%DIBUTTON_TPS_RUN                                       = 167773185    ' &HA000401
%DIBUTTON_TPS_ACTION                                    = 167773186    ' &HA000402
%DIBUTTON_TPS_SELECT                                    = 167773187    ' &HA000403
%DIBUTTON_TPS_USE                                       = 167773188    ' &HA000404
%DIBUTTON_TPS_JUMP                                      = 167773189    ' &HA000405
%DIBUTTON_TPS_MENU                                      = 167773437    ' &HA0004FD
%DIHATSWITCH_TPS_GLANCE                                 = 167790081    ' &HA004601
%DIBUTTON_TPS_VIEW                                      = 167789574    ' &HA004406
%DIBUTTON_TPS_STEPLEFT                                  = 167789575    ' &HA004407
%DIBUTTON_TPS_STEPRIGHT                                 = 167789576    ' &HA004408
%DIAXIS_TPS_STEP                                        = 167821827    ' &HA00C203
%DIBUTTON_TPS_DODGE                                     = 167789577    ' &HA004409
%DIBUTTON_TPS_INVENTORY                                 = 167789578    ' &HA00440A
%DIBUTTON_TPS_TURN_LEFT_LINK                            = 167920868    ' &HA0244E4
%DIBUTTON_TPS_TURN_RIGHT_LINK                           = 167920876    ' &HA0244EC
%DIBUTTON_TPS_FORWARD_LINK                              = 167855328    ' &HA0144E0
%DIBUTTON_TPS_BACKWARD_LINK                             = 167855336    ' &HA0144E8
%DIBUTTON_TPS_GLANCE_UP_LINK                            = 168281312    ' &HA07C4E0
%DIBUTTON_TPS_GLANCE_DOWN_LINK                          = 168281320    ' &HA07C4E8
%DIBUTTON_TPS_GLANCE_LEFT_LINK                          = 168281316    ' &HA07C4E4
%DIBUTTON_TPS_GLANCE_RIGHT_LINK                         = 168281324    ' &HA07C4EC
%DIBUTTON_TPS_DEVICE                                    = 167789822    ' &HA0044FE
%DIBUTTON_TPS_PAUSE                                     = 167789820    ' &HA0044FC
%DIVIRTUAL_STRATEGY_ROLEPLAYING                         = 184549376    ' &HB000000
%DIAXIS_STRATEGYR_LATERAL                               = 184582657    ' &HB008201
%DIAXIS_STRATEGYR_MOVE                                  = 184615426    ' &HB010202
%DIBUTTON_STRATEGYR_GET                                 = 184550401    ' &HB000401
%DIBUTTON_STRATEGYR_APPLY                               = 184550402    ' &HB000402
%DIBUTTON_STRATEGYR_SELECT                              = 184550403    ' &HB000403
%DIBUTTON_STRATEGYR_ATTACK                              = 184550404    ' &HB000404
%DIBUTTON_STRATEGYR_CAST                                = 184550405    ' &HB000405
%DIBUTTON_STRATEGYR_CROUCH                              = 184550406    ' &HB000406
%DIBUTTON_STRATEGYR_JUMP                                = 184550407    ' &HB000407
%DIBUTTON_STRATEGYR_MENU                                = 184550653    ' &HB0004FD
%DIHATSWITCH_STRATEGYR_GLANCE                           = 184567297    ' &HB004601
%DIBUTTON_STRATEGYR_MAP                                 = 184566792    ' &HB004408
%DIBUTTON_STRATEGYR_DISPLAY                             = 184566793    ' &HB004409
%DIAXIS_STRATEGYR_ROTATE                                = 184697347    ' &HB024203
%DIBUTTON_STRATEGYR_LEFT_LINK                           = 184599780    ' &HB00C4E4
%DIBUTTON_STRATEGYR_RIGHT_LINK                          = 184599788    ' &HB00C4EC
%DIBUTTON_STRATEGYR_FORWARD_LINK                        = 184632544    ' &HB0144E0
%DIBUTTON_STRATEGYR_BACK_LINK                           = 184632552    ' &HB0144E8
%DIBUTTON_STRATEGYR_ROTATE_LEFT_LINK                    = 184698084    ' &HB0244E4
%DIBUTTON_STRATEGYR_ROTATE_RIGHT_LINK                   = 184698092    ' &HB0244EC
%DIBUTTON_STRATEGYR_DEVICE                              = 184567038    ' &HB0044FE
%DIBUTTON_STRATEGYR_PAUSE                               = 184567036    ' &HB0044FC
%DIVIRTUAL_STRATEGY_TURN                                = 201326592    ' &HC000000
%DIAXIS_STRATEGYT_LATERAL                               = 201359873    ' &HC008201
%DIAXIS_STRATEGYT_MOVE                                  = 201392642    ' &HC010202
%DIBUTTON_STRATEGYT_SELECT                              = 201327617    ' &HC000401
%DIBUTTON_STRATEGYT_INSTRUCT                            = 201327618    ' &HC000402
%DIBUTTON_STRATEGYT_APPLY                               = 201327619    ' &HC000403
%DIBUTTON_STRATEGYT_TEAM                                = 201327620    ' &HC000404
%DIBUTTON_STRATEGYT_TURN                                = 201327621    ' &HC000405
%DIBUTTON_STRATEGYT_MENU                                = 201327869    ' &HC0004FD
%DIBUTTON_STRATEGYT_ZOOM                                = 201344006    ' &HC004406
%DIBUTTON_STRATEGYT_MAP                                 = 201344007    ' &HC004407
%DIBUTTON_STRATEGYT_DISPLAY                             = 201344008    ' &HC004408
%DIBUTTON_STRATEGYT_LEFT_LINK                           = 201376996    ' &HC00C4E4
%DIBUTTON_STRATEGYT_RIGHT_LINK                          = 201377004    ' &HC00C4EC
%DIBUTTON_STRATEGYT_FORWARD_LINK                        = 201409760    ' &HC0144E0
%DIBUTTON_STRATEGYT_BACK_LINK                           = 201409768    ' &HC0144E8
%DIBUTTON_STRATEGYT_DEVICE                              = 201344254    ' &HC0044FE
%DIBUTTON_STRATEGYT_PAUSE                               = 201344252    ' &HC0044FC
%DIVIRTUAL_SPORTS_HUNTING                               = 218103808    ' &HD000000
%DIAXIS_HUNTING_LATERAL                                 = 218137089    ' &HD008201
%DIAXIS_HUNTING_MOVE                                    = 218169858    ' &HD010202
%DIBUTTON_HUNTING_FIRE                                  = 218104833    ' &HD000401
%DIBUTTON_HUNTING_AIM                                   = 218104834    ' &HD000402
%DIBUTTON_HUNTING_WEAPON                                = 218104835    ' &HD000403
%DIBUTTON_HUNTING_BINOCULAR                             = 218104836    ' &HD000404
%DIBUTTON_HUNTING_CALL                                  = 218104837    ' &HD000405
%DIBUTTON_HUNTING_MAP                                   = 218104838    ' &HD000406
%DIBUTTON_HUNTING_SPECIAL                               = 218104839    ' &HD000407
%DIBUTTON_HUNTING_MENU                                  = 218105085    ' &HD0004FD
%DIHATSWITCH_HUNTING_GLANCE                             = 218121729    ' &HD004601
%DIBUTTON_HUNTING_DISPLAY                               = 218121224    ' &HD004408
%DIAXIS_HUNTING_ROTATE                                  = 218251779    ' &HD024203
%DIBUTTON_HUNTING_CROUCH                                = 218121225    ' &HD004409
%DIBUTTON_HUNTING_JUMP                                  = 218121226    ' &HD00440A
%DIBUTTON_HUNTING_FIRESECONDARY                         = 218121227    ' &HD00440B
%DIBUTTON_HUNTING_LEFT_LINK                             = 218154212    ' &HD00C4E4
%DIBUTTON_HUNTING_RIGHT_LINK                            = 218154220    ' &HD00C4EC
%DIBUTTON_HUNTING_FORWARD_LINK                          = 218186976    ' &HD0144E0
%DIBUTTON_HUNTING_BACK_LINK                             = 218186984    ' &HD0144E8
%DIBUTTON_HUNTING_ROTATE_LEFT_LINK                      = 218252516    ' &HD0244E4
%DIBUTTON_HUNTING_ROTATE_RIGHT_LINK                     = 218252524    ' &HD0244EC
%DIBUTTON_HUNTING_DEVICE                                = 218121470    ' &HD0044FE
%DIBUTTON_HUNTING_PAUSE                                 = 218121468    ' &HD0044FC
%DIVIRTUAL_SPORTS_FISHING                               = 234881024    ' &HE000000
%DIAXIS_FISHING_LATERAL                                 = 234914305    ' &HE008201
%DIAXIS_FISHING_MOVE                                    = 234947074    ' &HE010202
%DIBUTTON_FISHING_CAST                                  = 234882049    ' &HE000401
%DIBUTTON_FISHING_TYPE                                  = 234882050    ' &HE000402
%DIBUTTON_FISHING_BINOCULAR                             = 234882051    ' &HE000403
%DIBUTTON_FISHING_BAIT                                  = 234882052    ' &HE000404
%DIBUTTON_FISHING_MAP                                   = 234882053    ' &HE000405
%DIBUTTON_FISHING_MENU                                  = 234882301    ' &HE0004FD
%DIHATSWITCH_FISHING_GLANCE                             = 234898945    ' &HE004601
%DIBUTTON_FISHING_DISPLAY                               = 234898438    ' &HE004406
%DIAXIS_FISHING_ROTATE                                  = 235028995    ' &HE024203
%DIBUTTON_FISHING_CROUCH                                = 234898439    ' &HE004407
%DIBUTTON_FISHING_JUMP                                  = 234898440    ' &HE004408
%DIBUTTON_FISHING_LEFT_LINK                             = 234931428    ' &HE00C4E4
%DIBUTTON_FISHING_RIGHT_LINK                            = 234931436    ' &HE00C4EC
%DIBUTTON_FISHING_FORWARD_LINK                          = 234964192    ' &HE0144E0
%DIBUTTON_FISHING_BACK_LINK                             = 234964200    ' &HE0144E8
%DIBUTTON_FISHING_ROTATE_LEFT_LINK                      = 235029732    ' &HE0244E4
%DIBUTTON_FISHING_ROTATE_RIGHT_LINK                     = 235029740    ' &HE0244EC
%DIBUTTON_FISHING_DEVICE                                = 234898686    ' &HE0044FE
%DIBUTTON_FISHING_PAUSE                                 = 234898684    ' &HE0044FC
%DIVIRTUAL_SPORTS_BASEBALL_BAT                          = 251658240    ' &HF000000
%DIAXIS_BASEBALLB_LATERAL                               = 251691521    ' &HF008201
%DIAXIS_BASEBALLB_MOVE                                  = 251724290    ' &HF010202
%DIBUTTON_BASEBALLB_SELECT                              = 251659265    ' &HF000401
%DIBUTTON_BASEBALLB_NORMAL                              = 251659266    ' &HF000402
%DIBUTTON_BASEBALLB_POWER                               = 251659267    ' &HF000403
%DIBUTTON_BASEBALLB_BUNT                                = 251659268    ' &HF000404
%DIBUTTON_BASEBALLB_STEAL                               = 251659269    ' &HF000405
%DIBUTTON_BASEBALLB_BURST                               = 251659270    ' &HF000406
%DIBUTTON_BASEBALLB_SLIDE                               = 251659271    ' &HF000407
%DIBUTTON_BASEBALLB_CONTACT                             = 251659272    ' &HF000408
%DIBUTTON_BASEBALLB_MENU                                = 251659517    ' &HF0004FD
%DIBUTTON_BASEBALLB_NOSTEAL                             = 251675657    ' &HF004409
%DIBUTTON_BASEBALLB_BOX                                 = 251675658    ' &HF00440A
%DIBUTTON_BASEBALLB_LEFT_LINK                           = 251708644    ' &HF00C4E4
%DIBUTTON_BASEBALLB_RIGHT_LINK                          = 251708652    ' &HF00C4EC
%DIBUTTON_BASEBALLB_FORWARD_LINK                        = 251741408    ' &HF0144E0
%DIBUTTON_BASEBALLB_BACK_LINK                           = 251741416    ' &HF0144E8
%DIBUTTON_BASEBALLB_DEVICE                              = 251675902    ' &HF0044FE
%DIBUTTON_BASEBALLB_PAUSE                               = 251675900    ' &HF0044FC
%DIVIRTUAL_SPORTS_BASEBALL_PITCH                        = 268435456    ' &H10000000
%DIAXIS_BASEBALLP_LATERAL                               = 268468737    ' &H10008201
%DIAXIS_BASEBALLP_MOVE                                  = 268501506    ' &H10010202
%DIBUTTON_BASEBALLP_SELECT                              = 268436481    ' &H10000401
%DIBUTTON_BASEBALLP_PITCH                               = 268436482    ' &H10000402
%DIBUTTON_BASEBALLP_BASE                                = 268436483    ' &H10000403
%DIBUTTON_BASEBALLP_THROW                               = 268436484    ' &H10000404
%DIBUTTON_BASEBALLP_FAKE                                = 268436485    ' &H10000405
%DIBUTTON_BASEBALLP_MENU                                = 268436733    ' &H100004FD
%DIBUTTON_BASEBALLP_WALK                                = 268452870    ' &H10004406
%DIBUTTON_BASEBALLP_LOOK                                = 268452871    ' &H10004407
%DIBUTTON_BASEBALLP_LEFT_LINK                           = 268485860    ' &H1000C4E4
%DIBUTTON_BASEBALLP_RIGHT_LINK                          = 268485868    ' &H1000C4EC
%DIBUTTON_BASEBALLP_FORWARD_LINK                        = 268518624    ' &H100144E0
%DIBUTTON_BASEBALLP_BACK_LINK                           = 268518632    ' &H100144E8
%DIBUTTON_BASEBALLP_DEVICE                              = 268453118    ' &H100044FE
%DIBUTTON_BASEBALLP_PAUSE                               = 268453116    ' &H100044FC
%DIVIRTUAL_SPORTS_BASEBALL_FIELD                        = 285212672    ' &H11000000
%DIAXIS_BASEBALLF_LATERAL                               = 285245953    ' &H11008201
%DIAXIS_BASEBALLF_MOVE                                  = 285278722    ' &H11010202
%DIBUTTON_BASEBALLF_NEAREST                             = 285213697    ' &H11000401
%DIBUTTON_BASEBALLF_THROW1                              = 285213698    ' &H11000402
%DIBUTTON_BASEBALLF_THROW2                              = 285213699    ' &H11000403
%DIBUTTON_BASEBALLF_BURST                               = 285213700    ' &H11000404
%DIBUTTON_BASEBALLF_JUMP                                = 285213701    ' &H11000405
%DIBUTTON_BASEBALLF_DIVE                                = 285213702    ' &H11000406
%DIBUTTON_BASEBALLF_MENU                                = 285213949    ' &H110004FD
%DIBUTTON_BASEBALLF_SHIFTIN                             = 285230087    ' &H11004407
%DIBUTTON_BASEBALLF_SHIFTOUT                            = 285230088    ' &H11004408
%DIBUTTON_BASEBALLF_AIM_LEFT_LINK                       = 285263076    ' &H1100C4E4
%DIBUTTON_BASEBALLF_AIM_RIGHT_LINK                      = 285263084    ' &H1100C4EC
%DIBUTTON_BASEBALLF_FORWARD_LINK                        = 285295840    ' &H110144E0
%DIBUTTON_BASEBALLF_BACK_LINK                           = 285295848    ' &H110144E8
%DIBUTTON_BASEBALLF_DEVICE                              = 285230334    ' &H110044FE
%DIBUTTON_BASEBALLF_PAUSE                               = 285230332    ' &H110044FC
%DIVIRTUAL_SPORTS_BASKETBALL_OFFENSE                    = 301989888    ' &H12000000
%DIAXIS_BBALLO_LATERAL                                  = 302023169    ' &H12008201
%DIAXIS_BBALLO_MOVE                                     = 302055938    ' &H12010202
%DIBUTTON_BBALLO_SHOOT                                  = 301990913    ' &H12000401
%DIBUTTON_BBALLO_DUNK                                   = 301990914    ' &H12000402
%DIBUTTON_BBALLO_PASS                                   = 301990915    ' &H12000403
%DIBUTTON_BBALLO_FAKE                                   = 301990916    ' &H12000404
%DIBUTTON_BBALLO_SPECIAL                                = 301990917    ' &H12000405
%DIBUTTON_BBALLO_PLAYER                                 = 301990918    ' &H12000406
%DIBUTTON_BBALLO_BURST                                  = 301990919    ' &H12000407
%DIBUTTON_BBALLO_CALL                                   = 301990920    ' &H12000408
%DIBUTTON_BBALLO_MENU                                   = 301991165    ' &H120004FD
%DIHATSWITCH_BBALLO_GLANCE                              = 302007809    ' &H12004601
%DIBUTTON_BBALLO_SCREEN                                 = 302007305    ' &H12004409
%DIBUTTON_BBALLO_PLAY                                   = 302007306    ' &H1200440A
%DIBUTTON_BBALLO_JAB                                    = 302007307    ' &H1200440B
%DIBUTTON_BBALLO_POST                                   = 302007308    ' &H1200440C
%DIBUTTON_BBALLO_TIMEOUT                                = 302007309    ' &H1200440D
%DIBUTTON_BBALLO_SUBSTITUTE                             = 302007310    ' &H1200440E
%DIBUTTON_BBALLO_LEFT_LINK                              = 302040292    ' &H1200C4E4
%DIBUTTON_BBALLO_RIGHT_LINK                             = 302040300    ' &H1200C4EC
%DIBUTTON_BBALLO_FORWARD_LINK                           = 302073056    ' &H120144E0
%DIBUTTON_BBALLO_BACK_LINK                              = 302073064    ' &H120144E8
%DIBUTTON_BBALLO_DEVICE                                 = 302007550    ' &H120044FE
%DIBUTTON_BBALLO_PAUSE                                  = 302007548    ' &H120044FC
%DIVIRTUAL_SPORTS_BASKETBALL_DEFENSE                    = 318767104    ' &H13000000
%DIAXIS_BBALLD_LATERAL                                  = 318800385    ' &H13008201
%DIAXIS_BBALLD_MOVE                                     = 318833154    ' &H13010202
%DIBUTTON_BBALLD_JUMP                                   = 318768129    ' &H13000401
%DIBUTTON_BBALLD_STEAL                                  = 318768130    ' &H13000402
%DIBUTTON_BBALLD_FAKE                                   = 318768131    ' &H13000403
%DIBUTTON_BBALLD_SPECIAL                                = 318768132    ' &H13000404
%DIBUTTON_BBALLD_PLAYER                                 = 318768133    ' &H13000405
%DIBUTTON_BBALLD_BURST                                  = 318768134    ' &H13000406
%DIBUTTON_BBALLD_PLAY                                   = 318768135    ' &H13000407
%DIBUTTON_BBALLD_MENU                                   = 318768381    ' &H130004FD
%DIHATSWITCH_BBALLD_GLANCE                              = 318785025    ' &H13004601
%DIBUTTON_BBALLD_TIMEOUT                                = 318784520    ' &H13004408
%DIBUTTON_BBALLD_SUBSTITUTE                             = 318784521    ' &H13004409
%DIBUTTON_BBALLD_LEFT_LINK                              = 318817508    ' &H1300C4E4
%DIBUTTON_BBALLD_RIGHT_LINK                             = 318817516    ' &H1300C4EC
%DIBUTTON_BBALLD_FORWARD_LINK                           = 318850272    ' &H130144E0
%DIBUTTON_BBALLD_BACK_LINK                              = 318850280    ' &H130144E8
%DIBUTTON_BBALLD_DEVICE                                 = 318784766    ' &H130044FE
%DIBUTTON_BBALLD_PAUSE                                  = 318784764    ' &H130044FC
%DIVIRTUAL_SPORTS_FOOTBALL_FIELD                        = 335544320    ' &H14000000
%DIBUTTON_FOOTBALLP_PLAY                                = 335545345    ' &H14000401
%DIBUTTON_FOOTBALLP_SELECT                              = 335545346    ' &H14000402
%DIBUTTON_FOOTBALLP_HELP                                = 335545347    ' &H14000403
%DIBUTTON_FOOTBALLP_MENU                                = 335545597    ' &H140004FD
%DIBUTTON_FOOTBALLP_DEVICE                              = 335561982    ' &H140044FE
%DIBUTTON_FOOTBALLP_PAUSE                               = 335561980    ' &H140044FC
%DIVIRTUAL_SPORTS_FOOTBALL_QBCK                         = 352321536    ' &H15000000
%DIAXIS_FOOTBALLQ_LATERAL                               = 352354817    ' &H15008201
%DIAXIS_FOOTBALLQ_MOVE                                  = 352387586    ' &H15010202
%DIBUTTON_FOOTBALLQ_SELECT                              = 352322561    ' &H15000401
%DIBUTTON_FOOTBALLQ_SNAP                                = 352322562    ' &H15000402
%DIBUTTON_FOOTBALLQ_JUMP                                = 352322563    ' &H15000403
%DIBUTTON_FOOTBALLQ_SLIDE                               = 352322564    ' &H15000404
%DIBUTTON_FOOTBALLQ_PASS                                = 352322565    ' &H15000405
%DIBUTTON_FOOTBALLQ_FAKE                                = 352322566    ' &H15000406
%DIBUTTON_FOOTBALLQ_MENU                                = 352322813    ' &H150004FD
%DIBUTTON_FOOTBALLQ_FAKESNAP                            = 352338951    ' &H15004407
%DIBUTTON_FOOTBALLQ_MOTION                              = 352338952    ' &H15004408
%DIBUTTON_FOOTBALLQ_AUDIBLE                             = 352338953    ' &H15004409
%DIBUTTON_FOOTBALLQ_LEFT_LINK                           = 352371940    ' &H1500C4E4
%DIBUTTON_FOOTBALLQ_RIGHT_LINK                          = 352371948    ' &H1500C4EC
%DIBUTTON_FOOTBALLQ_FORWARD_LINK                        = 352404704    ' &H150144E0
%DIBUTTON_FOOTBALLQ_BACK_LINK                           = 352404712    ' &H150144E8
%DIBUTTON_FOOTBALLQ_DEVICE                              = 352339198    ' &H150044FE
%DIBUTTON_FOOTBALLQ_PAUSE                               = 352339196    ' &H150044FC
%DIVIRTUAL_SPORTS_FOOTBALL_OFFENSE                      = 369098752    ' &H16000000
%DIAXIS_FOOTBALLO_LATERAL                               = 369132033    ' &H16008201
%DIAXIS_FOOTBALLO_MOVE                                  = 369164802    ' &H16010202
%DIBUTTON_FOOTBALLO_JUMP                                = 369099777    ' &H16000401
%DIBUTTON_FOOTBALLO_LEFTARM                             = 369099778    ' &H16000402
%DIBUTTON_FOOTBALLO_RIGHTARM                            = 369099779    ' &H16000403
%DIBUTTON_FOOTBALLO_THROW                               = 369099780    ' &H16000404
%DIBUTTON_FOOTBALLO_SPIN                                = 369099781    ' &H16000405
%DIBUTTON_FOOTBALLO_MENU                                = 369100029    ' &H160004FD
%DIBUTTON_FOOTBALLO_JUKE                                = 369116166    ' &H16004406
%DIBUTTON_FOOTBALLO_SHOULDER                            = 369116167    ' &H16004407
%DIBUTTON_FOOTBALLO_TURBO                               = 369116168    ' &H16004408
%DIBUTTON_FOOTBALLO_DIVE                                = 369116169    ' &H16004409
%DIBUTTON_FOOTBALLO_ZOOM                                = 369116170    ' &H1600440A
%DIBUTTON_FOOTBALLO_SUBSTITUTE                          = 369116171    ' &H1600440B
%DIBUTTON_FOOTBALLO_LEFT_LINK                           = 369149156    ' &H1600C4E4
%DIBUTTON_FOOTBALLO_RIGHT_LINK                          = 369149164    ' &H1600C4EC
%DIBUTTON_FOOTBALLO_FORWARD_LINK                        = 369181920    ' &H160144E0
%DIBUTTON_FOOTBALLO_BACK_LINK                           = 369181928    ' &H160144E8
%DIBUTTON_FOOTBALLO_DEVICE                              = 369116414    ' &H160044FE
%DIBUTTON_FOOTBALLO_PAUSE                               = 369116412    ' &H160044FC
%DIVIRTUAL_SPORTS_FOOTBALL_DEFENSE                      = 385875968    ' &H17000000
%DIAXIS_FOOTBALLD_LATERAL                               = 385909249    ' &H17008201
%DIAXIS_FOOTBALLD_MOVE                                  = 385942018    ' &H17010202
%DIBUTTON_FOOTBALLD_PLAY                                = 385876993    ' &H17000401
%DIBUTTON_FOOTBALLD_SELECT                              = 385876994    ' &H17000402
%DIBUTTON_FOOTBALLD_JUMP                                = 385876995    ' &H17000403
%DIBUTTON_FOOTBALLD_TACKLE                              = 385876996    ' &H17000404
%DIBUTTON_FOOTBALLD_FAKE                                = 385876997    ' &H17000405
%DIBUTTON_FOOTBALLD_SUPERTACKLE                         = 385876998    ' &H17000406
%DIBUTTON_FOOTBALLD_MENU                                = 385877245    ' &H170004FD
%DIBUTTON_FOOTBALLD_SPIN                                = 385893383    ' &H17004407
%DIBUTTON_FOOTBALLD_SWIM                                = 385893384    ' &H17004408
%DIBUTTON_FOOTBALLD_BULLRUSH                            = 385893385    ' &H17004409
%DIBUTTON_FOOTBALLD_RIP                                 = 385893386    ' &H1700440A
%DIBUTTON_FOOTBALLD_AUDIBLE                             = 385893387    ' &H1700440B
%DIBUTTON_FOOTBALLD_ZOOM                                = 385893388    ' &H1700440C
%DIBUTTON_FOOTBALLD_SUBSTITUTE                          = 385893389    ' &H1700440D
%DIBUTTON_FOOTBALLD_LEFT_LINK                           = 385926372    ' &H1700C4E4
%DIBUTTON_FOOTBALLD_RIGHT_LINK                          = 385926380    ' &H1700C4EC
%DIBUTTON_FOOTBALLD_FORWARD_LINK                        = 385959136    ' &H170144E0
%DIBUTTON_FOOTBALLD_BACK_LINK                           = 385959144    ' &H170144E8
%DIBUTTON_FOOTBALLD_DEVICE                              = 385893630    ' &H170044FE
%DIBUTTON_FOOTBALLD_PAUSE                               = 385893628    ' &H170044FC
%DIVIRTUAL_SPORTS_GOLF                                  = 402653184    ' &H18000000
%DIAXIS_GOLF_LATERAL                                    = 402686465    ' &H18008201
%DIAXIS_GOLF_MOVE                                       = 402719234    ' &H18010202
%DIBUTTON_GOLF_SWING                                    = 402654209    ' &H18000401
%DIBUTTON_GOLF_SELECT                                   = 402654210    ' &H18000402
%DIBUTTON_GOLF_UP                                       = 402654211    ' &H18000403
%DIBUTTON_GOLF_DOWN                                     = 402654212    ' &H18000404
%DIBUTTON_GOLF_TERRAIN                                  = 402654213    ' &H18000405
%DIBUTTON_GOLF_FLYBY                                    = 402654214    ' &H18000406
%DIBUTTON_GOLF_MENU                                     = 402654461    ' &H180004FD
%DIHATSWITCH_GOLF_SCROLL                                = 402671105    ' &H18004601
%DIBUTTON_GOLF_ZOOM                                     = 402670599    ' &H18004407
%DIBUTTON_GOLF_TIMEOUT                                  = 402670600    ' &H18004408
%DIBUTTON_GOLF_SUBSTITUTE                               = 402670601    ' &H18004409
%DIBUTTON_GOLF_LEFT_LINK                                = 402703588    ' &H1800C4E4
%DIBUTTON_GOLF_RIGHT_LINK                               = 402703596    ' &H1800C4EC
%DIBUTTON_GOLF_FORWARD_LINK                             = 402736352    ' &H180144E0
%DIBUTTON_GOLF_BACK_LINK                                = 402736360    ' &H180144E8
%DIBUTTON_GOLF_DEVICE                                   = 402670846    ' &H180044FE
%DIBUTTON_GOLF_PAUSE                                    = 402670844    ' &H180044FC
%DIVIRTUAL_SPORTS_HOCKEY_OFFENSE                        = 419430400    ' &H19000000
%DIAXIS_HOCKEYO_LATERAL                                 = 419463681    ' &H19008201
%DIAXIS_HOCKEYO_MOVE                                    = 419496450    ' &H19010202
%DIBUTTON_HOCKEYO_SHOOT                                 = 419431425    ' &H19000401
%DIBUTTON_HOCKEYO_PASS                                  = 419431426    ' &H19000402
%DIBUTTON_HOCKEYO_BURST                                 = 419431427    ' &H19000403
%DIBUTTON_HOCKEYO_SPECIAL                               = 419431428    ' &H19000404
%DIBUTTON_HOCKEYO_FAKE                                  = 419431429    ' &H19000405
%DIBUTTON_HOCKEYO_MENU                                  = 419431677    ' &H190004FD
%DIHATSWITCH_HOCKEYO_SCROLL                             = 419448321    ' &H19004601
%DIBUTTON_HOCKEYO_ZOOM                                  = 419447814    ' &H19004406
%DIBUTTON_HOCKEYO_STRATEGY                              = 419447815    ' &H19004407
%DIBUTTON_HOCKEYO_TIMEOUT                               = 419447816    ' &H19004408
%DIBUTTON_HOCKEYO_SUBSTITUTE                            = 419447817    ' &H19004409
%DIBUTTON_HOCKEYO_LEFT_LINK                             = 419480804    ' &H1900C4E4
%DIBUTTON_HOCKEYO_RIGHT_LINK                            = 419480812    ' &H1900C4EC
%DIBUTTON_HOCKEYO_FORWARD_LINK                          = 419513568    ' &H190144E0
%DIBUTTON_HOCKEYO_BACK_LINK                             = 419513576    ' &H190144E8
%DIBUTTON_HOCKEYO_DEVICE                                = 419448062    ' &H190044FE
%DIBUTTON_HOCKEYO_PAUSE                                 = 419448060    ' &H190044FC
%DIVIRTUAL_SPORTS_HOCKEY_DEFENSE                        = 436207616    ' &H1A000000
%DIAXIS_HOCKEYD_LATERAL                                 = 436240897    ' &H1A008201
%DIAXIS_HOCKEYD_MOVE                                    = 436273666    ' &H1A010202
%DIBUTTON_HOCKEYD_PLAYER                                = 436208641    ' &H1A000401
%DIBUTTON_HOCKEYD_STEAL                                 = 436208642    ' &H1A000402
%DIBUTTON_HOCKEYD_BURST                                 = 436208643    ' &H1A000403
%DIBUTTON_HOCKEYD_BLOCK                                 = 436208644    ' &H1A000404
%DIBUTTON_HOCKEYD_FAKE                                  = 436208645    ' &H1A000405
%DIBUTTON_HOCKEYD_MENU                                  = 436208893    ' &H1A0004FD
%DIHATSWITCH_HOCKEYD_SCROLL                             = 436225537    ' &H1A004601
%DIBUTTON_HOCKEYD_ZOOM                                  = 436225030    ' &H1A004406
%DIBUTTON_HOCKEYD_STRATEGY                              = 436225031    ' &H1A004407
%DIBUTTON_HOCKEYD_TIMEOUT                               = 436225032    ' &H1A004408
%DIBUTTON_HOCKEYD_SUBSTITUTE                            = 436225033    ' &H1A004409
%DIBUTTON_HOCKEYD_LEFT_LINK                             = 436258020    ' &H1A00C4E4
%DIBUTTON_HOCKEYD_RIGHT_LINK                            = 436258028    ' &H1A00C4EC
%DIBUTTON_HOCKEYD_FORWARD_LINK                          = 436290784    ' &H1A0144E0
%DIBUTTON_HOCKEYD_BACK_LINK                             = 436290792    ' &H1A0144E8
%DIBUTTON_HOCKEYD_DEVICE                                = 436225278    ' &H1A0044FE
%DIBUTTON_HOCKEYD_PAUSE                                 = 436225276    ' &H1A0044FC
%DIVIRTUAL_SPORTS_HOCKEY_GOALIE                         = 452984832    ' &H1B000000
%DIAXIS_HOCKEYG_LATERAL                                 = 453018113    ' &H1B008201
%DIAXIS_HOCKEYG_MOVE                                    = 453050882    ' &H1B010202
%DIBUTTON_HOCKEYG_PASS                                  = 452985857    ' &H1B000401
%DIBUTTON_HOCKEYG_POKE                                  = 452985858    ' &H1B000402
%DIBUTTON_HOCKEYG_STEAL                                 = 452985859    ' &H1B000403
%DIBUTTON_HOCKEYG_BLOCK                                 = 452985860    ' &H1B000404
%DIBUTTON_HOCKEYG_MENU                                  = 452986109    ' &H1B0004FD
%DIHATSWITCH_HOCKEYG_SCROLL                             = 453002753    ' &H1B004601
%DIBUTTON_HOCKEYG_ZOOM                                  = 453002245    ' &H1B004405
%DIBUTTON_HOCKEYG_STRATEGY                              = 453002246    ' &H1B004406
%DIBUTTON_HOCKEYG_TIMEOUT                               = 453002247    ' &H1B004407
%DIBUTTON_HOCKEYG_SUBSTITUTE                            = 453002248    ' &H1B004408
%DIBUTTON_HOCKEYG_LEFT_LINK                             = 453035236    ' &H1B00C4E4
%DIBUTTON_HOCKEYG_RIGHT_LINK                            = 453035244    ' &H1B00C4EC
%DIBUTTON_HOCKEYG_FORWARD_LINK                          = 453068000    ' &H1B0144E0
%DIBUTTON_HOCKEYG_BACK_LINK                             = 453068008    ' &H1B0144E8
%DIBUTTON_HOCKEYG_DEVICE                                = 453002494    ' &H1B0044FE
%DIBUTTON_HOCKEYG_PAUSE                                 = 453002492    ' &H1B0044FC
%DIVIRTUAL_SPORTS_BIKING_MOUNTAIN                       = 469762048    ' &H1C000000
%DIAXIS_BIKINGM_TURN                                    = 469795329    ' &H1C008201
%DIAXIS_BIKINGM_PEDAL                                   = 469828098    ' &H1C010202
%DIBUTTON_BIKINGM_JUMP                                  = 469763073    ' &H1C000401
%DIBUTTON_BIKINGM_CAMERA                                = 469763074    ' &H1C000402
%DIBUTTON_BIKINGM_SPECIAL1                              = 469763075    ' &H1C000403
%DIBUTTON_BIKINGM_SELECT                                = 469763076    ' &H1C000404
%DIBUTTON_BIKINGM_SPECIAL2                              = 469763077    ' &H1C000405
%DIBUTTON_BIKINGM_MENU                                  = 469763325    ' &H1C0004FD
%DIHATSWITCH_BIKINGM_SCROLL                             = 469779969    ' &H1C004601
%DIBUTTON_BIKINGM_ZOOM                                  = 469779462    ' &H1C004406
%DIAXIS_BIKINGM_BRAKE                                   = 470041091    ' &H1C044203
%DIBUTTON_BIKINGM_LEFT_LINK                             = 469812452    ' &H1C00C4E4
%DIBUTTON_BIKINGM_RIGHT_LINK                            = 469812460    ' &H1C00C4EC
%DIBUTTON_BIKINGM_FASTER_LINK                           = 469845216    ' &H1C0144E0
%DIBUTTON_BIKINGM_SLOWER_LINK                           = 469845224    ' &H1C0144E8
%DIBUTTON_BIKINGM_BRAKE_BUTTON_LINK                     = 470041832    ' &H1C0444E8
%DIBUTTON_BIKINGM_DEVICE                                = 469779710    ' &H1C0044FE
%DIBUTTON_BIKINGM_PAUSE                                 = 469779708    ' &H1C0044FC
%DIVIRTUAL_SPORTS_SKIING                                = 486539264    ' &H1D000000
%DIAXIS_SKIING_TURN                                     = 486572545    ' &H1D008201
%DIAXIS_SKIING_SPEED                                    = 486605314    ' &H1D010202
%DIBUTTON_SKIING_JUMP                                   = 486540289    ' &H1D000401
%DIBUTTON_SKIING_CROUCH                                 = 486540290    ' &H1D000402
%DIBUTTON_SKIING_CAMERA                                 = 486540291    ' &H1D000403
%DIBUTTON_SKIING_SPECIAL1                               = 486540292    ' &H1D000404
%DIBUTTON_SKIING_SELECT                                 = 486540293    ' &H1D000405
%DIBUTTON_SKIING_SPECIAL2                               = 486540294    ' &H1D000406
%DIBUTTON_SKIING_MENU                                   = 486540541    ' &H1D0004FD
%DIHATSWITCH_SKIING_GLANCE                              = 486557185    ' &H1D004601
%DIBUTTON_SKIING_ZOOM                                   = 486556679    ' &H1D004407
%DIBUTTON_SKIING_LEFT_LINK                              = 486589668    ' &H1D00C4E4
%DIBUTTON_SKIING_RIGHT_LINK                             = 486589676    ' &H1D00C4EC
%DIBUTTON_SKIING_FASTER_LINK                            = 486622432    ' &H1D0144E0
%DIBUTTON_SKIING_SLOWER_LINK                            = 486622440    ' &H1D0144E8
%DIBUTTON_SKIING_DEVICE                                 = 486556926    ' &H1D0044FE
%DIBUTTON_SKIING_PAUSE                                  = 486556924    ' &H1D0044FC
%DIVIRTUAL_SPORTS_SOCCER_OFFENSE                        = 503316480    ' &H1E000000
%DIAXIS_SOCCERO_LATERAL                                 = 503349761    ' &H1E008201
%DIAXIS_SOCCERO_MOVE                                    = 503382530    ' &H1E010202
%DIAXIS_SOCCERO_BEND                                    = 503415299    ' &H1E018203
%DIBUTTON_SOCCERO_SHOOT                                 = 503317505    ' &H1E000401
%DIBUTTON_SOCCERO_PASS                                  = 503317506    ' &H1E000402
%DIBUTTON_SOCCERO_FAKE                                  = 503317507    ' &H1E000403
%DIBUTTON_SOCCERO_PLAYER                                = 503317508    ' &H1E000404
%DIBUTTON_SOCCERO_SPECIAL1                              = 503317509    ' &H1E000405
%DIBUTTON_SOCCERO_SELECT                                = 503317510    ' &H1E000406
%DIBUTTON_SOCCERO_MENU                                  = 503317757    ' &H1E0004FD
%DIHATSWITCH_SOCCERO_GLANCE                             = 503334401    ' &H1E004601
%DIBUTTON_SOCCERO_SUBSTITUTE                            = 503333895    ' &H1E004407
%DIBUTTON_SOCCERO_SHOOTLOW                              = 503333896    ' &H1E004408
%DIBUTTON_SOCCERO_SHOOTHIGH                             = 503333897    ' &H1E004409
%DIBUTTON_SOCCERO_PASSTHRU                              = 503333898    ' &H1E00440A
%DIBUTTON_SOCCERO_SPRINT                                = 503333899    ' &H1E00440B
%DIBUTTON_SOCCERO_CONTROL                               = 503333900    ' &H1E00440C
%DIBUTTON_SOCCERO_HEAD                                  = 503333901    ' &H1E00440D
%DIBUTTON_SOCCERO_LEFT_LINK                             = 503366884    ' &H1E00C4E4
%DIBUTTON_SOCCERO_RIGHT_LINK                            = 503366892    ' &H1E00C4EC
%DIBUTTON_SOCCERO_FORWARD_LINK                          = 503399648    ' &H1E0144E0
%DIBUTTON_SOCCERO_BACK_LINK                             = 503399656    ' &H1E0144E8
%DIBUTTON_SOCCERO_DEVICE                                = 503334142    ' &H1E0044FE
%DIBUTTON_SOCCERO_PAUSE                                 = 503334140    ' &H1E0044FC
%DIVIRTUAL_SPORTS_SOCCER_DEFENSE                        = 520093696    ' &H1F000000
%DIAXIS_SOCCERD_LATERAL                                 = 520126977    ' &H1F008201
%DIAXIS_SOCCERD_MOVE                                    = 520159746    ' &H1F010202
%DIBUTTON_SOCCERD_BLOCK                                 = 520094721    ' &H1F000401
%DIBUTTON_SOCCERD_STEAL                                 = 520094722    ' &H1F000402
%DIBUTTON_SOCCERD_FAKE                                  = 520094723    ' &H1F000403
%DIBUTTON_SOCCERD_PLAYER                                = 520094724    ' &H1F000404
%DIBUTTON_SOCCERD_SPECIAL                               = 520094725    ' &H1F000405
%DIBUTTON_SOCCERD_SELECT                                = 520094726    ' &H1F000406
%DIBUTTON_SOCCERD_SLIDE                                 = 520094727    ' &H1F000407
%DIBUTTON_SOCCERD_MENU                                  = 520094973    ' &H1F0004FD
%DIHATSWITCH_SOCCERD_GLANCE                             = 520111617    ' &H1F004601
%DIBUTTON_SOCCERD_FOUL                                  = 520111112    ' &H1F004408
%DIBUTTON_SOCCERD_HEAD                                  = 520111113    ' &H1F004409
%DIBUTTON_SOCCERD_CLEAR                                 = 520111114    ' &H1F00440A
%DIBUTTON_SOCCERD_GOALIECHARGE                          = 520111115    ' &H1F00440B
%DIBUTTON_SOCCERD_SUBSTITUTE                            = 520111116    ' &H1F00440C
%DIBUTTON_SOCCERD_LEFT_LINK                             = 520144100    ' &H1F00C4E4
%DIBUTTON_SOCCERD_RIGHT_LINK                            = 520144108    ' &H1F00C4EC
%DIBUTTON_SOCCERD_FORWARD_LINK                          = 520176864    ' &H1F0144E0
%DIBUTTON_SOCCERD_BACK_LINK                             = 520176872    ' &H1F0144E8
%DIBUTTON_SOCCERD_DEVICE                                = 520111358    ' &H1F0044FE
%DIBUTTON_SOCCERD_PAUSE                                 = 520111356    ' &H1F0044FC
%DIVIRTUAL_SPORTS_RACQUET                               = 536870912    ' &H20000000
%DIAXIS_RACQUET_LATERAL                                 = 536904193    ' &H20008201
%DIAXIS_RACQUET_MOVE                                    = 536936962    ' &H20010202
%DIBUTTON_RACQUET_SWING                                 = 536871937    ' &H20000401
%DIBUTTON_RACQUET_BACKSWING                             = 536871938    ' &H20000402
%DIBUTTON_RACQUET_SMASH                                 = 536871939    ' &H20000403
%DIBUTTON_RACQUET_SPECIAL                               = 536871940    ' &H20000404
%DIBUTTON_RACQUET_SELECT                                = 536871941    ' &H20000405
%DIBUTTON_RACQUET_MENU                                  = 536872189    ' &H200004FD
%DIHATSWITCH_RACQUET_GLANCE                             = 536888833    ' &H20004601
%DIBUTTON_RACQUET_TIMEOUT                               = 536888326    ' &H20004406
%DIBUTTON_RACQUET_SUBSTITUTE                            = 536888327    ' &H20004407
%DIBUTTON_RACQUET_LEFT_LINK                             = 536921316    ' &H2000C4E4
%DIBUTTON_RACQUET_RIGHT_LINK                            = 536921324    ' &H2000C4EC
%DIBUTTON_RACQUET_FORWARD_LINK                          = 536954080    ' &H200144E0
%DIBUTTON_RACQUET_BACK_LINK                             = 536954088    ' &H200144E8
%DIBUTTON_RACQUET_DEVICE                                = 536888574    ' &H200044FE
%DIBUTTON_RACQUET_PAUSE                                 = 536888572    ' &H200044FC
%DIVIRTUAL_ARCADE_SIDE2SIDE                             = 553648128    ' &H21000000
%DIAXIS_ARCADES_LATERAL                                 = 553681409    ' &H21008201
%DIAXIS_ARCADES_MOVE                                    = 553714178    ' &H21010202
%DIBUTTON_ARCADES_THROW                                 = 553649153    ' &H21000401
%DIBUTTON_ARCADES_CARRY                                 = 553649154    ' &H21000402
%DIBUTTON_ARCADES_ATTACK                                = 553649155    ' &H21000403
%DIBUTTON_ARCADES_SPECIAL                               = 553649156    ' &H21000404
%DIBUTTON_ARCADES_SELECT                                = 553649157    ' &H21000405
%DIBUTTON_ARCADES_MENU                                  = 553649405    ' &H210004FD
%DIHATSWITCH_ARCADES_VIEW                               = 553666049    ' &H21004601
%DIBUTTON_ARCADES_LEFT_LINK                             = 553698532    ' &H2100C4E4
%DIBUTTON_ARCADES_RIGHT_LINK                            = 553698540    ' &H2100C4EC
%DIBUTTON_ARCADES_FORWARD_LINK                          = 553731296    ' &H210144E0
%DIBUTTON_ARCADES_BACK_LINK                             = 553731304    ' &H210144E8
%DIBUTTON_ARCADES_VIEW_UP_LINK                          = 554157280    ' &H2107C4E0
%DIBUTTON_ARCADES_VIEW_DOWN_LINK                        = 554157288    ' &H2107C4E8
%DIBUTTON_ARCADES_VIEW_LEFT_LINK                        = 554157284    ' &H2107C4E4
%DIBUTTON_ARCADES_VIEW_RIGHT_LINK                       = 554157292    ' &H2107C4EC
%DIBUTTON_ARCADES_DEVICE                                = 553665790    ' &H210044FE
%DIBUTTON_ARCADES_PAUSE                                 = 553665788    ' &H210044FC
%DIVIRTUAL_ARCADE_PLATFORM                              = 570425344    ' &H22000000
%DIAXIS_ARCADEP_LATERAL                                 = 570458625    ' &H22008201
%DIAXIS_ARCADEP_MOVE                                    = 570491394    ' &H22010202
%DIBUTTON_ARCADEP_JUMP                                  = 570426369    ' &H22000401
%DIBUTTON_ARCADEP_FIRE                                  = 570426370    ' &H22000402
%DIBUTTON_ARCADEP_CROUCH                                = 570426371    ' &H22000403
%DIBUTTON_ARCADEP_SPECIAL                               = 570426372    ' &H22000404
%DIBUTTON_ARCADEP_SELECT                                = 570426373    ' &H22000405
%DIBUTTON_ARCADEP_MENU                                  = 570426621    ' &H220004FD
%DIHATSWITCH_ARCADEP_VIEW                               = 570443265    ' &H22004601
%DIBUTTON_ARCADEP_FIRESECONDARY                         = 570442758    ' &H22004406
%DIBUTTON_ARCADEP_LEFT_LINK                             = 570475748    ' &H2200C4E4
%DIBUTTON_ARCADEP_RIGHT_LINK                            = 570475756    ' &H2200C4EC
%DIBUTTON_ARCADEP_FORWARD_LINK                          = 570508512    ' &H220144E0
%DIBUTTON_ARCADEP_BACK_LINK                             = 570508520    ' &H220144E8
%DIBUTTON_ARCADEP_VIEW_UP_LINK                          = 570934496    ' &H2207C4E0
%DIBUTTON_ARCADEP_VIEW_DOWN_LINK                        = 570934504    ' &H2207C4E8
%DIBUTTON_ARCADEP_VIEW_LEFT_LINK                        = 570934500    ' &H2207C4E4
%DIBUTTON_ARCADEP_VIEW_RIGHT_LINK                       = 570934508    ' &H2207C4EC
%DIBUTTON_ARCADEP_DEVICE                                = 570443006    ' &H220044FE
%DIBUTTON_ARCADEP_PAUSE                                 = 570443004    ' &H220044FC
%DIVIRTUAL_CAD_2DCONTROL                                = 587202560    ' &H23000000
%DIAXIS_2DCONTROL_LATERAL                               = 587235841    ' &H23008201
%DIAXIS_2DCONTROL_MOVE                                  = 587268610    ' &H23010202
%DIAXIS_2DCONTROL_INOUT                                 = 587301379    ' &H23018203
%DIBUTTON_2DCONTROL_SELECT                              = 587203585    ' &H23000401
%DIBUTTON_2DCONTROL_SPECIAL1                            = 587203586    ' &H23000402
%DIBUTTON_2DCONTROL_SPECIAL                             = 587203587    ' &H23000403
%DIBUTTON_2DCONTROL_SPECIAL2                            = 587203588    ' &H23000404
%DIBUTTON_2DCONTROL_MENU                                = 587203837    ' &H230004FD
%DIHATSWITCH_2DCONTROL_HATSWITCH                        = 587220481    ' &H23004601
%DIAXIS_2DCONTROL_ROTATEZ                               = 587350532    ' &H23024204
%DIBUTTON_2DCONTROL_DISPLAY                             = 587219973    ' &H23004405
%DIBUTTON_2DCONTROL_DEVICE                              = 587220222    ' &H230044FE
%DIBUTTON_2DCONTROL_PAUSE                               = 587220220    ' &H230044FC
%DIVIRTUAL_CAD_3DCONTROL                                = 603979776    ' &H24000000
%DIAXIS_3DCONTROL_LATERAL                               = 604013057    ' &H24008201
%DIAXIS_3DCONTROL_MOVE                                  = 604045826    ' &H24010202
%DIAXIS_3DCONTROL_INOUT                                 = 604078595    ' &H24018203
%DIBUTTON_3DCONTROL_SELECT                              = 603980801    ' &H24000401
%DIBUTTON_3DCONTROL_SPECIAL1                            = 603980802    ' &H24000402
%DIBUTTON_3DCONTROL_SPECIAL                             = 603980803    ' &H24000403
%DIBUTTON_3DCONTROL_SPECIAL2                            = 603980804    ' &H24000404
%DIBUTTON_3DCONTROL_MENU                                = 603981053    ' &H240004FD
%DIHATSWITCH_3DCONTROL_HATSWITCH                        = 603997697    ' &H24004601
%DIAXIS_3DCONTROL_ROTATEX                               = 604193284    ' &H24034204
%DIAXIS_3DCONTROL_ROTATEY                               = 604160517    ' &H2402C205
%DIAXIS_3DCONTROL_ROTATEZ                               = 604127750    ' &H24024206
%DIBUTTON_3DCONTROL_DISPLAY                             = 603997189    ' &H24004405
%DIBUTTON_3DCONTROL_DEVICE                              = 603997438    ' &H240044FE
%DIBUTTON_3DCONTROL_PAUSE                               = 603997436    ' &H240044FC
%DIVIRTUAL_CAD_FLYBY                                    = 620756992    ' &H25000000
%DIAXIS_CADF_LATERAL                                    = 620790273    ' &H25008201
%DIAXIS_CADF_MOVE                                       = 620823042    ' &H25010202
%DIAXIS_CADF_INOUT                                      = 620855811    ' &H25018203
%DIBUTTON_CADF_SELECT                                   = 620758017    ' &H25000401
%DIBUTTON_CADF_SPECIAL1                                 = 620758018    ' &H25000402
%DIBUTTON_CADF_SPECIAL                                  = 620758019    ' &H25000403
%DIBUTTON_CADF_SPECIAL2                                 = 620758020    ' &H25000404
%DIBUTTON_CADF_MENU                                     = 620758269    ' &H250004FD
%DIHATSWITCH_CADF_HATSWITCH                             = 620774913    ' &H25004601
%DIAXIS_CADF_ROTATEX                                    = 620970500    ' &H25034204
%DIAXIS_CADF_ROTATEY                                    = 620937733    ' &H2502C205
%DIAXIS_CADF_ROTATEZ                                    = 620904966    ' &H25024206
%DIBUTTON_CADF_DISPLAY                                  = 620774405    ' &H25004405
%DIBUTTON_CADF_DEVICE                                   = 620774654    ' &H250044FE
%DIBUTTON_CADF_PAUSE                                    = 620774652    ' &H250044FC
%DIVIRTUAL_CAD_MODEL                                    = 637534208    ' &H26000000
%DIAXIS_CADM_LATERAL                                    = 637567489    ' &H26008201
%DIAXIS_CADM_MOVE                                       = 637600258    ' &H26010202
%DIAXIS_CADM_INOUT                                      = 637633027    ' &H26018203
%DIBUTTON_CADM_SELECT                                   = 637535233    ' &H26000401
%DIBUTTON_CADM_SPECIAL1                                 = 637535234    ' &H26000402
%DIBUTTON_CADM_SPECIAL                                  = 637535235    ' &H26000403
%DIBUTTON_CADM_SPECIAL2                                 = 637535236    ' &H26000404
%DIBUTTON_CADM_MENU                                     = 637535485    ' &H260004FD
%DIHATSWITCH_CADM_HATSWITCH                             = 637552129    ' &H26004601
%DIAXIS_CADM_ROTATEX                                    = 637747716    ' &H26034204
%DIAXIS_CADM_ROTATEY                                    = 637714949    ' &H2602C205
%DIAXIS_CADM_ROTATEZ                                    = 637682182    ' &H26024206
%DIBUTTON_CADM_DISPLAY                                  = 637551621    ' &H26004405
%DIBUTTON_CADM_DEVICE                                   = 637551870    ' &H260044FE
%DIBUTTON_CADM_PAUSE                                    = 637551868    ' &H260044FC
%DIVIRTUAL_REMOTE_CONTROL                               = 654311424    ' &H27000000
%DIAXIS_REMOTE_SLIDER                                   = 654639617    ' &H27050201
%DIBUTTON_REMOTE_MUTE                                   = 654312449    ' &H27000401
%DIBUTTON_REMOTE_SELECT                                 = 654312450    ' &H27000402
%DIBUTTON_REMOTE_PLAY                                   = 654320643    ' &H27002403
%DIBUTTON_REMOTE_CUE                                    = 654320644    ' &H27002404
%DIBUTTON_REMOTE_REVIEW                                 = 654320645    ' &H27002405
%DIBUTTON_REMOTE_CHANGE                                 = 654320646    ' &H27002406
%DIBUTTON_REMOTE_RECORD                                 = 654320647    ' &H27002407
%DIBUTTON_REMOTE_MENU                                   = 654312701    ' &H270004FD
%DIAXIS_REMOTE_SLIDER2                                  = 654656002    ' &H27054202
%DIBUTTON_REMOTE_TV                                     = 654334984    ' &H27005C08
%DIBUTTON_REMOTE_CABLE                                  = 654334985    ' &H27005C09
%DIBUTTON_REMOTE_CD                                     = 654334986    ' &H27005C0A
%DIBUTTON_REMOTE_VCR                                    = 654334987    ' &H27005C0B
%DIBUTTON_REMOTE_TUNER                                  = 654334988    ' &H27005C0C
%DIBUTTON_REMOTE_DVD                                    = 654334989    ' &H27005C0D
%DIBUTTON_REMOTE_ADJUST                                 = 654334990    ' &H27005C0E
%DIBUTTON_REMOTE_DIGIT0                                 = 654332943    ' &H2700540F
%DIBUTTON_REMOTE_DIGIT1                                 = 654332944    ' &H27005410
%DIBUTTON_REMOTE_DIGIT2                                 = 654332945    ' &H27005411
%DIBUTTON_REMOTE_DIGIT3                                 = 654332946    ' &H27005412
%DIBUTTON_REMOTE_DIGIT4                                 = 654332947    ' &H27005413
%DIBUTTON_REMOTE_DIGIT5                                 = 654332948    ' &H27005414
%DIBUTTON_REMOTE_DIGIT6                                 = 654332949    ' &H27005415
%DIBUTTON_REMOTE_DIGIT7                                 = 654332950    ' &H27005416
%DIBUTTON_REMOTE_DIGIT8                                 = 654332951    ' &H27005417
%DIBUTTON_REMOTE_DIGIT9                                 = 654332952    ' &H27005418
%DIBUTTON_REMOTE_DEVICE                                 = 654329086    ' &H270044FE
%DIBUTTON_REMOTE_PAUSE                                  = 654329084    ' &H270044FC
%DIVIRTUAL_BROWSER_CONTROL                              = 671088640    ' &H28000000
%DIAXIS_BROWSER_LATERAL                                 = 671121921    ' &H28008201
%DIAXIS_BROWSER_MOVE                                    = 671154690    ' &H28010202
%DIBUTTON_BROWSER_SELECT                                = 671089665    ' &H28000401
%DIAXIS_BROWSER_VIEW                                    = 671187459    ' &H28018203
%DIBUTTON_BROWSER_REFRESH                               = 671089666    ' &H28000402
%DIBUTTON_BROWSER_MENU                                  = 671089917    ' &H280004FD
%DIBUTTON_BROWSER_SEARCH                                = 671106051    ' &H28004403
%DIBUTTON_BROWSER_STOP                                  = 671106052    ' &H28004404
%DIBUTTON_BROWSER_HOME                                  = 671106053    ' &H28004405
%DIBUTTON_BROWSER_FAVORITES                             = 671106054    ' &H28004406
%DIBUTTON_BROWSER_NEXT                                  = 671106055    ' &H28004407
%DIBUTTON_BROWSER_PREVIOUS                              = 671106056    ' &H28004408
%DIBUTTON_BROWSER_HISTORY                               = 671106057    ' &H28004409
%DIBUTTON_BROWSER_PRINT                                 = 671106058    ' &H2800440A
%DIBUTTON_BROWSER_DEVICE                                = 671106302    ' &H280044FE
%DIBUTTON_BROWSER_PAUSE                                 = 671106300    ' &H280044FC
%DIVIRTUAL_DRIVING_MECHA                                = 687865856    ' &H29000000
%DIAXIS_MECHA_STEER                                     = 687899137    ' &H29008201
%DIAXIS_MECHA_TORSO                                     = 687931906    ' &H29010202
%DIAXIS_MECHA_ROTATE                                    = 687997443    ' &H29020203
%DIAXIS_MECHA_THROTTLE                                  = 688095748    ' &H29038204
%DIBUTTON_MECHA_FIRE                                    = 687866881    ' &H29000401
%DIBUTTON_MECHA_WEAPONS                                 = 687866882    ' &H29000402
%DIBUTTON_MECHA_TARGET                                  = 687866883    ' &H29000403
%DIBUTTON_MECHA_REVERSE                                 = 687866884    ' &H29000404
%DIBUTTON_MECHA_ZOOM                                    = 687866885    ' &H29000405
%DIBUTTON_MECHA_JUMP                                    = 687866886    ' &H29000406
%DIBUTTON_MECHA_MENU                                    = 687867133    ' &H290004FD
%DIBUTTON_MECHA_CENTER                                  = 687883271    ' &H29004407
%DIHATSWITCH_MECHA_GLANCE                               = 687883777    ' &H29004601
%DIBUTTON_MECHA_VIEW                                    = 687883272    ' &H29004408
%DIBUTTON_MECHA_FIRESECONDARY                           = 687883273    ' &H29004409
%DIBUTTON_MECHA_LEFT_LINK                               = 687916260    ' &H2900C4E4
%DIBUTTON_MECHA_RIGHT_LINK                              = 687916268    ' &H2900C4EC
%DIBUTTON_MECHA_FORWARD_LINK                            = 687949024    ' &H290144E0
%DIBUTTON_MECHA_BACK_LINK                               = 687949032    ' &H290144E8
%DIBUTTON_MECHA_ROTATE_LEFT_LINK                        = 688014564    ' &H290244E4
%DIBUTTON_MECHA_ROTATE_RIGHT_LINK                       = 688014572    ' &H290244EC
%DIBUTTON_MECHA_FASTER_LINK                             = 688112864    ' &H2903C4E0
%DIBUTTON_MECHA_SLOWER_LINK                             = 688112872    ' &H2903C4E8
%DIBUTTON_MECHA_DEVICE                                  = 687883518    ' &H290044FE
%DIBUTTON_MECHA_PAUSE                                   = 687883516    ' &H290044FC

' ========================================================================================
' CONST_DIEDBSFLAGS enum
' ========================================================================================

%DIEDBS_MAPPEDPRI1                                      = 1            ' &H1
%DIEDBS_MAPPEDPRI2                                      = 2            ' &H2
%DIEDBS_RECENTDEVICE                                    = 16           ' &H10
%DIEDBS_NEWDEVICE                                       = 32           ' &H20

' ========================================================================================
' CONST_DIEDBSFLFLAGS enum
' ========================================================================================

%DIEDBSFL_ATTACHEDONLY                                  = 0            ' &H0
%DIEDBSFL_THISUSER                                      = 16           ' &H10
%DIEDBSFL_FORCEFEEDBACK                                 = 256          ' &H100
%DIEDBSFL_AVAILABLEDEVICES                              = 4096         ' &H1000
%DIEDBSFL_MULTIMICEKEYBOARDS                            = 8192         ' &H2000
%DIEDBSFL_NONGAMINGDEVICES                              = 16384        ' &H4000
%DIEDBSFL_VALID                                         = 28944        ' &H7110

' ========================================================================================
' CONST_DIDALFLAGS enum
' ========================================================================================

%DIDAL_CENTERED                                         = 0            ' &H0
%DIDAL_LEFTALIGNED                                      = 1            ' &H1
%DIDAL_RIGHTALIGNED                                     = 2            ' &H2
%DIDAL_MIDDLE                                           = 0            ' &H0
%DIDAL_TOPALIGNED                                       = 4            ' &H4
%DIDAL_BOTTOMALIGNED                                    = 8            ' &H8

' ========================================================================================
' CONST_DIMAPFLAGS enum
' ========================================================================================

%DIAXIS_ANY_X_1                                         = -16727551    ' &HFF00C201
%DIAXIS_ANY_X_2                                         = -16727550    ' &HFF00C202
%DIAXIS_ANY_Y_1                                         = -16694783    ' &HFF014201
%DIAXIS_ANY_Y_2                                         = -16694782    ' &HFF014202
%DIAXIS_ANY_Z_1                                         = -16662015    ' &HFF01C201
%DIAXIS_ANY_Z_2                                         = -16662014    ' &HFF01C202
%DIAXIS_ANY_R_1                                         = -16629247    ' &HFF024201
%DIAXIS_ANY_R_2                                         = -16629246    ' &HFF024202
%DIAXIS_ANY_U_1                                         = -16596479    ' &HFF02C201
%DIAXIS_ANY_U_2                                         = -16596478    ' &HFF02C202
%DIAXIS_ANY_V_1                                         = -16563711    ' &HFF034201
%DIAXIS_ANY_V_2                                         = -16563710    ' &HFF034202
%DIAXIS_ANY_A_1                                         = -16530943    ' &HFF03C201
%DIAXIS_ANY_A_2                                         = -16530942    ' &HFF03C202
%DIAXIS_ANY_B_1                                         = -16498175    ' &HFF044201
%DIAXIS_ANY_B_2                                         = -16498174    ' &HFF044202
%DIAXIS_ANY_C_1                                         = -16465407    ' &HFF04C201
%DIAXIS_ANY_C_2                                         = -16465406    ' &HFF04C202
%DIAXIS_ANY_S_1                                         = -16432639    ' &HFF054201
%DIAXIS_ANY_S_2                                         = -16432638    ' &HFF054202
%DIAXIS_ANY_1                                           = -16760319    ' &HFF004201
%DIAXIS_ANY_2                                           = -16760318    ' &HFF004202
%DIAXIS_ANY_3                                           = -16760317    ' &HFF004203
%DIAXIS_ANY_4                                           = -16760316    ' &HFF004204
%DIPOV_ANY_1                                            = -16759295    ' &HFF004601
%DIPOV_ANY_2                                            = -16759294    ' &HFF004602
%DIPOV_ANY_3                                            = -16759293    ' &HFF004603
%DIPOV_ANY_4                                            = -16759292    ' &HFF004604
%DIBUTTON_ANY                                           = -16759808    ' &HFF004400

' ========================================================================================
' CONST_DIFEFFLAGS enum
' ========================================================================================

%DIFEF_DEFAULT                                          = 0            ' &H0
%DIFEF_INCLUDENONSTANDARD                               = 1            ' &H1
%DIFEF_MODIFYIFNEEDED                                   = 16           ' &H10

' ========================================================================================
' CONST_IDBAMFLAGS enum <alias> CONST_DIDBAMFLAGS
' ========================================================================================

%DIDBAM_DEFAULT                                         = 0            ' &H0
%DIDBAM_PRESERVE                                        = 1            ' &H1
%DIDBAM_INITIALIZE                                      = 2            ' &H2
%DIDBAM_HWDEFAULTS                                      = 4            ' &H4

' ========================================================================================
' CONST_DIAFTSFLAGS enum
' ========================================================================================

%DIAFTS_NEWDEVICELOW                                    = -1           ' &HFFFFFFFF
%DIAFTS_NEWDEVICEHIGH                                   = -1           ' &HFFFFFFFF
%DIAFTS_UNUSEDDEVICELOW                                 = 0            ' &H0
%DIAFTS_UNUSEDDEVICEHIGH                                = 0            ' &H0

' ========================================================================================
' CONST_DIDSAMFLAGS enum
' ========================================================================================

%DIDSAM_DEFAULT                                         = 0            ' &H0
%DIDSAM_NOUSER                                          = 1            ' &H1
%DIDSAM_FORCESAVE                                       = 2            ' &H2

' ========================================================================================
' CONST_DICDFLAGS enum
' ========================================================================================

%DICD_DEFAULT                                           = 0            ' &H0
%DICD_EDIT                                              = 1            ' &H1

' ========================================================================================
' CONST_DIAFLAGS enum
' ========================================================================================

%DIA_FORCEFEEDBACK                                      = 1            ' &H1
%DIA_APPMAPPED                                          = 2            ' &H2
%DIA_APPNOMAP                                           = 4            ' &H4
%DIA_NORANGE                                            = 8            ' &H8
%DIA_APPFIXED                                           = 16           ' &H10

' ========================================================================================
' CONST_DIAHFLAGS enum
' ========================================================================================

%DIAH_UNMAPPED                                          = 0            ' &H0
%DIAH_USERCONFIG                                        = 1            ' &H1
%DIAH_APPREQUESTED                                      = 2            ' &H2
%DIAH_HWAPP                                             = 4            ' &H4
%DIAH_HWDEFAULT                                         = 8            ' &H8
%DIAH_DEFAULT                                           = 32           ' &H20
%DIAH_ERROR                                             = -2147483648  ' &H80000000

' ========================================================================================
' CONST_DI8DEVICESUBTYPE enum
' ========================================================================================

%DIDEVTYPE_HID                                          = 65536        ' &H10000
%DI8DEVTYPEMOUSE_UNKNOWN                                = 256          ' &H100
%DI8DEVTYPEMOUSE_TRADITIONAL                            = 512          ' &H200
%DI8DEVTYPEMOUSE_FINGERSTICK                            = 768          ' &H300
%DI8DEVTYPEMOUSE_TOUCHPAD                               = 1024         ' &H400
%DI8DEVTYPEMOUSE_TRACKBALL                              = 1280         ' &H500
%DI8DEVTYPEMOUSE_ABSOLUTE                               = 1536         ' &H600
%DI8DEVTYPEKEYBOARD_UNKNOWN                             = 0            ' &H0
%DI8DEVTYPEKEYBOARD_PCXT                                = 256          ' &H100
%DI8DEVTYPEKEYBOARD_OLIVETTI                            = 512          ' &H200
%DI8DEVTYPEKEYBOARD_PCAT                                = 768          ' &H300
%DI8DEVTYPEKEYBOARD_PCENH                               = 1024         ' &H400
%DI8DEVTYPEKEYBOARD_NOKIA1050                           = 1280         ' &H500
%DI8DEVTYPEKEYBOARD_NOKIA9140                           = 1536         ' &H600
%DI8DEVTYPEKEYBOARD_NEC98                               = 1792         ' &H700
%DI8DEVTYPEKEYBOARD_NEC98LAPTOP                         = 2048         ' &H800
%DI8DEVTYPEKEYBOARD_NEC98106                            = 2304         ' &H900
%DI8DEVTYPEKEYBOARD_JAPAN106                            = 2560         ' &HA00
%DI8DEVTYPEKEYBOARD_JAPANAX                             = 2816         ' &HB00
%DI8DEVTYPEKEYBOARD_J3100                               = 3072         ' &HC00
%DI8DEVTYPE_LIMITEDGAMESUBTYPE                          = 256          ' &H100
%DI8DEVTYPEJOYSTICK_LIMITED                             = 256          ' &H100
%DI8DEVTYPEJOYSTICK_STANDARD                            = 512          ' &H200
%DI8D8EVTYPEJOYSTICK_ENHANCED                           = 768          ' &H300
%DI8DEVTYPEGAMEPAD_LIMITED                              = 256          ' &H100
%DI8DEVTYPEGAMEPAD_STANDARD                             = 512          ' &H200
%DI8DEVTYPEGAMEPAD_TILT                                 = 768          ' &H300
%DI8DEVTYPEDRIVING_LIMITED                              = 256          ' &H100
%DI8DEVTYPEDRIVING_COMBINEDPEDALS                       = 512          ' &H200
%DI8DEVTYPEDRIVING_DUALPEDALS                           = 768          ' &H300
%DI8DEVTYPEDRIVING_THREEPEDALS                          = 1024         ' &H400
%DI8DEVTYPEDRIVING_HANDHELD                             = 1280         ' &H500
%DI8DEVTYPEFLIGHT_LIMITED                               = 256          ' &H100
%DI8DEVTYPEFLIGHT_STICK                                 = 512          ' &H200
%DI8DEVTYPEFLIGHT_YOKE                                  = 768          ' &H300
%DI8DEVTYPEFLIGHT_RC                                    = 1024         ' &H400
%DI8DEVTYPE1STPERSON_LIMITED                            = 256          ' &H100
%DI8DEVTYPE1STPERSON_UNKNOWN                            = 512          ' &H200
%DI8DEVTYPE1STPERSON_SIXDOF                             = 768          ' &H300
%DI8DEVTYPE1STPERSON_SHOOTER                            = 1024         ' &H400
%DI8DEVTYPESCREENPTR_UNKNOWN                            = 512          ' &H200
%DI8DEVTYPESCREENPTR_LIGHTGUN                           = 768          ' &H300
%DI8DEVTYPESCREENPTR_LIGHTPEN                           = 1024         ' &H400
%DI8DEVTYPESCREENPTR_TOUCH                              = 1280         ' &H500
%DI8DEVTYPEREMOTE_UNKNOWN                               = 512          ' &H200
%DI8DEVTYPEDEVICECTRL_UNKNOWN                           = 512          ' &H200
%DI8DEVTYPEDEVICECTRL_COMMSSELECTION                    = 768          ' &H300
%DI8DEVTYPEDEVICECTRL_COMMSSELECTION_HARDWIRED          = 1024         ' &H400
%DI8DEVTYPESUPPLEMENTAL_UNKNOWN                         = 512          ' &H200
%DI8DEVTYPESUPPLEMENTAL_2NDHANDCONTROLLER               = 768          ' &H300
%DI8DEVTYPESUPPLEMENTAL_HEADTRACKER                     = 1024         ' &H400
%DI8DEVTYPESUPPLEMENTAL_HANDTRACKER                     = 1280         ' &H500
%DI8DEVTYPESUPPLEMENTAL_SHIFTSTICKGATE                  = 1536         ' &H600
%DI8DEVTYPESUPPLEMENTAL_SHIFTER                         = 1792         ' &H700
%DI8DEVTYPESUPPLEMENTAL_THROTTLE                        = 2048         ' &H800
%DI8DEVTYPESUPPLEMENTAL_SPLITTHROTTLE                   = 2304         ' &H900
%DI8DEVTYPESUPPLEMENTAL_COMBINEDPEDALS                  = 2560         ' &HA00
%DI8DEVTYPESUPPLEMENTAL_DUALPEDALS                      = 2816         ' &HB00
%DI8DEVTYPESUPPLEMENTAL_THREEPEDALS                     = 3072         ' &HC00
%DI8DEVTYPESUPPLEMENTAL_RUDDERPEDALS                    = 3328         ' &HD00

' ========================================================================================
' CONST_DIDIFTFLAGS enum
' ========================================================================================

%DIDIFT_CONFIGURATION                                   = 1            ' &H1
%DIDIFT_OVERLAY                                         = 2            ' &H2

' ========================================================================================
' CONST_DIKEYFLAGS enum
' ========================================================================================

%DIK_ESCAPE                                             = 1            ' &H1
%DIK_1                                                  = 2            ' &H2
%DIK_2                                                  = 3            ' &H3
%DIK_3                                                  = 4            ' &H4
%DIK_4                                                  = 5            ' &H5
%DIK_5                                                  = 6            ' &H6
%DIK_6                                                  = 7            ' &H7
%DIK_7                                                  = 8            ' &H8
%DIK_8                                                  = 9            ' &H9
%DIK_9                                                  = 10           ' &HA
%DIK_0                                                  = 11           ' &HB
%DIK_MINUS                                              = 12           ' &HC
%DIK_EQUALS                                             = 13           ' &HD
%DIK_BACK                                               = 14           ' &HE
%DIK_BACKSPACE                                          = 14           ' &HE
%DIK_TAB                                                = 15           ' &HF
%DIK_Q                                                  = 16           ' &H10
%DIK_W                                                  = 17           ' &H11
%DIK_E                                                  = 18           ' &H12
%DIK_R                                                  = 19           ' &H13
%DIK_T                                                  = 20           ' &H14
%DIK_Y                                                  = 21           ' &H15
%DIK_U                                                  = 22           ' &H16
%DIK_I                                                  = 23           ' &H17
%DIK_O                                                  = 24           ' &H18
%DIK_P                                                  = 25           ' &H19
%DIK_LBRACKET                                           = 26           ' &H1A
%DIK_RBRACKET                                           = 27           ' &H1B
%DIK_RETURN                                             = 28           ' &H1C
%DIK_LCONTROL                                           = 29           ' &H1D
%DIK_A                                                  = 30           ' &H1E
%DIK_S                                                  = 31           ' &H1F
%DIK_D                                                  = 32           ' &H20
%DIK_F                                                  = 33           ' &H21
%DIK_G                                                  = 34           ' &H22
%DIK_H                                                  = 35           ' &H23
%DIK_J                                                  = 36           ' &H24
%DIK_K                                                  = 37           ' &H25
%DIK_L                                                  = 38           ' &H26
%DIK_SEMICOLON                                          = 39           ' &H27
%DIK_APOSTROPHE                                         = 40           ' &H28
%DIK_GRAVE                                              = 41           ' &H29
%DIK_LSHIFT                                             = 42           ' &H2A
%DIK_BACKSLASH                                          = 43           ' &H2B
%DIK_Z                                                  = 44           ' &H2C
%DIK_X                                                  = 45           ' &H2D
%DIK_C                                                  = 46           ' &H2E
%DIK_V                                                  = 47           ' &H2F
%DIK_B                                                  = 48           ' &H30
%DIK_N                                                  = 49           ' &H31
%DIK_M                                                  = 50           ' &H32
%DIK_COMMA                                              = 51           ' &H33
%DIK_PERIOD                                             = 52           ' &H34
%DIK_SLASH                                              = 53           ' &H35
%DIK_RSHIFT                                             = 54           ' &H36
%DIK_MULTIPLY                                           = 55           ' &H37
%DIK_NUMPADSTAR                                         = 55           ' &H37
%DIK_LMENU                                              = 56           ' &H38
%DIK_LALT                                               = 56           ' &H38
%DIK_SPACE                                              = 57           ' &H39
%DIK_CAPITAL                                            = 58           ' &H3A
%DIK_CAPSLOCK                                           = 58           ' &H3A
%DIK_F1                                                 = 59           ' &H3B
%DIK_F2                                                 = 60           ' &H3C
%DIK_F3                                                 = 61           ' &H3D
%DIK_F4                                                 = 62           ' &H3E
%DIK_F5                                                 = 63           ' &H3F
%DIK_F6                                                 = 64           ' &H40
%DIK_F7                                                 = 65           ' &H41
%DIK_F8                                                 = 66           ' &H42
%DIK_F9                                                 = 67           ' &H43
%DIK_F10                                                = 68           ' &H44
%DIK_NUMLOCK                                            = 69           ' &H45
%DIK_SCROLL                                             = 70           ' &H46
%DIK_NUMPAD7                                            = 71           ' &H47
%DIK_NUMPAD8                                            = 72           ' &H48
%DIK_NUMPAD9                                            = 73           ' &H49
%DIK_SUBTRACT                                           = 74           ' &H4A
%DIK_NUMPADMINUS                                        = 74           ' &H4A
%DIK_NUMPAD4                                            = 75           ' &H4B
%DIK_NUMPAD5                                            = 76           ' &H4C
%DIK_NUMPAD6                                            = 77           ' &H4D
%DIK_ADD                                                = 78           ' &H4E
%DIK_NUMPADPLUS                                         = 78           ' &H4E
%DIK_NUMPAD1                                            = 79           ' &H4F
%DIK_NUMPAD2                                            = 80           ' &H50
%DIK_NUMPAD3                                            = 81           ' &H51
%DIK_NUMPAD0                                            = 82           ' &H52
%DIK_DECIMAL                                            = 83           ' &H53
%DIK_NUMPADPERIOD                                       = 83           ' &H53
%DIK_OEM_102                                            = 86           ' &H56
%DIK_F11                                                = 87           ' &H57
%DIK_F12                                                = 88           ' &H58
%DIK_F13                                                = 100          ' &H64
%DIK_F14                                                = 101          ' &H65
%DIK_F15                                                = 102          ' &H66
%DIK_KANA                                               = 112          ' &H70
%DIK_ABNT_C1                                            = 115          ' &H73
%DIK_CONVERT                                            = 121          ' &H79
%DIK_NOCONVERT                                          = 123          ' &H7B
%DIK_YEN                                                = 125          ' &H7D
%DIK_ABNT_C2                                            = 126          ' &H7E
%DIK_NUMPADEQUALS                                       = 141          ' &H8D
%DIK_CIRCUMFLEX                                         = 144          ' &H90
%DIK_PREVTRACK                                          = 144          ' &H90
%DIK_AT                                                 = 145          ' &H91
%DIK_COLON                                              = 146          ' &H92
%DIK_UNDERLINE                                          = 147          ' &H93
%DIK_KANJI                                              = 148          ' &H94
%DIK_STOP                                               = 149          ' &H95
%DIK_AX                                                 = 150          ' &H96
%DIK_UNLABELED                                          = 151          ' &H97
%DIK_NEXTTRACK                                          = 153          ' &H99
%DIK_NUMPADENTER                                        = 156          ' &H9C
%DIK_RCONTROL                                           = 157          ' &H9D
%DIK_MUTE                                               = 160          ' &HA0
%DIK_CALCULATOR                                         = 161          ' &HA1
%DIK_PLAYPAUSE                                          = 162          ' &HA2
%DIK_MEDIASTOP                                          = 164          ' &HA4
%DIK_VOLUMEDOWN                                         = 174          ' &HAE
%DIK_VOLUMEUP                                           = 176          ' &HB0
%DIK_WEBHOME                                            = 178          ' &HB2
%DIK_NUMPADCOMMA                                        = 179          ' &HB3
%DIK_DIVIDE                                             = 181          ' &HB5
%DIK_NUMPADSLASH                                        = 181          ' &HB5
%DIK_SYSRQ                                              = 183          ' &HB7
%DIK_RMENU                                              = 184          ' &HB8
%DIK_RALT                                               = 184          ' &HB8
%DIK_PAUSE                                              = 197          ' &HC5
%DIK_HOME                                               = 199          ' &HC7
%DIK_UP                                                 = 200          ' &HC8
%DIK_UPARROW                                            = 200          ' &HC8
%DIK_PRIOR                                              = 201          ' &HC9
%DIK_PGUP                                               = 201          ' &HC9
%DIK_LEFT                                               = 203          ' &HCB
%DIK_LEFTARROW                                          = 203          ' &HCB
%DIK_RIGHT                                              = 205          ' &HCD
%DIK_RIGHTARROW                                         = 205          ' &HCD
%DIK_END                                                = 207          ' &HCF
%DIK_DOWN                                               = 208          ' &HD0
%DIK_DOWNARROW                                          = 208          ' &HD0
%DIK_NEXT                                               = 209          ' &HD1
%DIK_PGDN                                               = 209          ' &HD1
%DIK_INSERT                                             = 210          ' &HD2
%DIK_DELETE                                             = 211          ' &HD3
%DIK_LWIN                                               = 219          ' &HDB
%DIK_RWIN                                               = 220          ' &HDC
%DIK_APPS                                               = 221          ' &HDD
%DIK_POWER                                              = 222          ' &HDE
%DIK_SLEEP                                              = 223          ' &HDF
%DIK_WAKE                                               = 227          ' &HE3
%DIK_WEBSEARCH                                          = 229          ' &HE5
%DIK_WEBFAVORITES                                       = 230          ' &HE6
%DIK_WEBREFRESH                                         = 231          ' &HE7
%DIK_WEBSTOP                                            = 232          ' &HE8
%DIK_WEBFORWARD                                         = 233          ' &HE9
%DIK_WEBBACK                                            = 234          ' &HEA
%DIK_MYCOMPUTER                                         = 235          ' &HEB
%DIK_MAIL                                               = 236          ' &HEC
%DIK_MEDIASELECT                                        = 237          ' &HED

' ========================================================================================
' CONST_DIKEYBOARDFLAGS enum
' ========================================================================================

%DIKEYBOARD_ESCAPE                                      = -2130705407  ' &H81000401
%DIKEYBOARD_1                                           = -2130705406  ' &H81000402
%DIKEYBOARD_2                                           = -2130705405  ' &H81000403
%DIKEYBOARD_3                                           = -2130705404  ' &H81000404
%DIKEYBOARD_4                                           = -2130705403  ' &H81000405
%DIKEYBOARD_5                                           = -2130705402  ' &H81000406
%DIKEYBOARD_6                                           = -2130705401  ' &H81000407
%DIKEYBOARD_7                                           = -2130705400  ' &H81000408
%DIKEYBOARD_8                                           = -2130705399  ' &H81000409
%DIKEYBOARD_9                                           = -2130705398  ' &H8100040A
%DIKEYBOARD_0                                           = -2130705397  ' &H8100040B
%DIKEYBOARD_MINUS                                       = -2130705396  ' &H8100040C
%DIKEYBOARD_EQUALS                                      = -2130705395  ' &H8100040D
%DIKEYBOARD_BACK                                        = -2130705394  ' &H8100040E
%DIKEYBOARD_TAB                                         = -2130705393  ' &H8100040F
%DIKEYBOARD_Q                                           = -2130705392  ' &H81000410
%DIKEYBOARD_W                                           = -2130705391  ' &H81000411
%DIKEYBOARD_E                                           = -2130705390  ' &H81000412
%DIKEYBOARD_R                                           = -2130705389  ' &H81000413
%DIKEYBOARD_T                                           = -2130705388  ' &H81000414
%DIKEYBOARD_Y                                           = -2130705387  ' &H81000415
%DIKEYBOARD_U                                           = -2130705386  ' &H81000416
%DIKEYBOARD_I                                           = -2130705385  ' &H81000417
%DIKEYBOARD_O                                           = -2130705384  ' &H81000418
%DIKEYBOARD_P                                           = -2130705383  ' &H81000419
%DIKEYBOARD_LBRACKET                                    = -2130705382  ' &H8100041A
%DIKEYBOARD_RBRACKET                                    = -2130705381  ' &H8100041B
%DIKEYBOARD_RETURN                                      = -2130705380  ' &H8100041C
%DIKEYBOARD_LCONTROL                                    = -2130705379  ' &H8100041D
%DIKEYBOARD_A                                           = -2130705378  ' &H8100041E
%DIKEYBOARD_S                                           = -2130705377  ' &H8100041F
%DIKEYBOARD_D                                           = -2130705376  ' &H81000420
%DIKEYBOARD_F                                           = -2130705375  ' &H81000421
%DIKEYBOARD_G                                           = -2130705374  ' &H81000422
%DIKEYBOARD_H                                           = -2130705373  ' &H81000423
%DIKEYBOARD_J                                           = -2130705372  ' &H81000424
%DIKEYBOARD_K                                           = -2130705371  ' &H81000425
%DIKEYBOARD_L                                           = -2130705370  ' &H81000426
%DIKEYBOARD_SEMICOLON                                   = -2130705369  ' &H81000427
%DIKEYBOARD_APOSTROPHE                                  = -2130705368  ' &H81000428
%DIKEYBOARD_GRAVE                                       = -2130705367  ' &H81000429
%DIKEYBOARD_LSHIFT                                      = -2130705366  ' &H8100042A
%DIKEYBOARD_BACKSLASH                                   = -2130705365  ' &H8100042B
%DIKEYBOARD_Z                                           = -2130705364  ' &H8100042C
%DIKEYBOARD_X                                           = -2130705363  ' &H8100042D
%DIKEYBOARD_C                                           = -2130705362  ' &H8100042E
%DIKEYBOARD_V                                           = -2130705361  ' &H8100042F
%DIKEYBOARD_B                                           = -2130705360  ' &H81000430
%DIKEYBOARD_N                                           = -2130705359  ' &H81000431
%DIKEYBOARD_M                                           = -2130705358  ' &H81000432
%DIKEYBOARD_COMMA                                       = -2130705357  ' &H81000433
%DIKEYBOARD_PERIOD                                      = -2130705356  ' &H81000434
%DIKEYBOARD_SLASH                                       = -2130705355  ' &H81000435
%DIKEYBOARD_RSHIFT                                      = -2130705354  ' &H81000436
%DIKEYBOARD_MULTIPLY                                    = -2130705353  ' &H81000437
%DIKEYBOARD_LMENU                                       = -2130705352  ' &H81000438
%DIKEYBOARD_SPACE                                       = -2130705351  ' &H81000439
%DIKEYBOARD_CAPITAL                                     = -2130705350  ' &H8100043A
%DIKEYBOARD_F1                                          = -2130705349  ' &H8100043B
%DIKEYBOARD_F2                                          = -2130705348  ' &H8100043C
%DIKEYBOARD_F3                                          = -2130705347  ' &H8100043D
%DIKEYBOARD_F4                                          = -2130705346  ' &H8100043E
%DIKEYBOARD_F5                                          = -2130705345  ' &H8100043F
%DIKEYBOARD_F6                                          = -2130705344  ' &H81000440
%DIKEYBOARD_F7                                          = -2130705343  ' &H81000441
%DIKEYBOARD_F8                                          = -2130705342  ' &H81000442
%DIKEYBOARD_F9                                          = -2130705341  ' &H81000443
%DIKEYBOARD_F10                                         = -2130705340  ' &H81000444
%DIKEYBOARD_NUMLOCK                                     = -2130705339  ' &H81000445
%DIKEYBOARD_SCROLL                                      = -2130705338  ' &H81000446
%DIKEYBOARD_NUMPAD7                                     = -2130705337  ' &H81000447
%DIKEYBOARD_NUMPAD8                                     = -2130705336  ' &H81000448
%DIKEYBOARD_NUMPAD9                                     = -2130705335  ' &H81000449
%DIKEYBOARD_SUBTRACT                                    = -2130705334  ' &H8100044A
%DIKEYBOARD_NUMPAD4                                     = -2130705333  ' &H8100044B
%DIKEYBOARD_NUMPAD5                                     = -2130705332  ' &H8100044C
%DIKEYBOARD_NUMPAD6                                     = -2130705331  ' &H8100044D
%DIKEYBOARD_ADD                                         = -2130705330  ' &H8100044E
%DIKEYBOARD_NUMPAD1                                     = -2130705329  ' &H8100044F
%DIKEYBOARD_NUMPAD2                                     = -2130705328  ' &H81000450
%DIKEYBOARD_NUMPAD3                                     = -2130705327  ' &H81000451
%DIKEYBOARD_NUMPAD0                                     = -2130705326  ' &H81000452
%DIKEYBOARD_DECIMAL                                     = -2130705325  ' &H81000453
%DIKEYBOARD_OEM_102                                     = -2130705322  ' &H81000456
%DIKEYBOARD_F11                                         = -2130705321  ' &H81000457
%DIKEYBOARD_F12                                         = -2130705320  ' &H81000458
%DIKEYBOARD_F13                                         = -2130705308  ' &H81000464
%DIKEYBOARD_F14                                         = -2130705307  ' &H81000465
%DIKEYBOARD_F15                                         = -2130705306  ' &H81000466
%DIKEYBOARD_KANA                                        = -2130705296  ' &H81000470
%DIKEYBOARD_ABNT_C1                                     = -2130705293  ' &H81000473
%DIKEYBOARD_CONVERT                                     = -2130705287  ' &H81000479
%DIKEYBOARD_NOCONVERT                                   = -2130705285  ' &H8100047B
%DIKEYBOARD_YEN                                         = -2130705283  ' &H8100047D
%DIKEYBOARD_ABNT_C2                                     = -2130705282  ' &H8100047E
%DIKEYBOARD_NUMPADEQUALS                                = -2130705267  ' &H8100048D
%DIKEYBOARD_PREVTRACK                                   = -2130705264  ' &H81000490
%DIKEYBOARD_AT                                          = -2130705263  ' &H81000491
%DIKEYBOARD_COLON                                       = -2130705262  ' &H81000492
%DIKEYBOARD_UNDERLINE                                   = -2130705261  ' &H81000493
%DIKEYBOARD_KANJI                                       = -2130705260  ' &H81000494
%DIKEYBOARD_STOP                                        = -2130705259  ' &H81000495
%DIKEYBOARD_AX                                          = -2130705258  ' &H81000496
%DIKEYBOARD_UNLABELED                                   = -2130705257  ' &H81000497
%DIKEYBOARD_NEXTTRACK                                   = -2130705255  ' &H81000499
%DIKEYBOARD_NUMPADENTER                                 = -2130705252  ' &H8100049C
%DIKEYBOARD_RCONTROL                                    = -2130705251  ' &H8100049D
%DIKEYBOARD_MUTE                                        = -2130705248  ' &H810004A0
%DIKEYBOARD_CALCULATOR                                  = -2130705247  ' &H810004A1
%DIKEYBOARD_PLAYPAUSE                                   = -2130705246  ' &H810004A2
%DIKEYBOARD_MEDIASTOP                                   = -2130705244  ' &H810004A4
%DIKEYBOARD_VOLUMEDOWN                                  = -2130705234  ' &H810004AE
%DIKEYBOARD_VOLUMEUP                                    = -2130705232  ' &H810004B0
%DIKEYBOARD_WEBHOME                                     = -2130705230  ' &H810004B2
%DIKEYBOARD_NUMPADCOMMA                                 = -2130705229  ' &H810004B3
%DIKEYBOARD_DIVIDE                                      = -2130705227  ' &H810004B5
%DIKEYBOARD_SYSRQ                                       = -2130705225  ' &H810004B7
%DIKEYBOARD_RMENU                                       = -2130705224  ' &H810004B8
%DIKEYBOARD_PAUSE                                       = -2130705211  ' &H810004C5
%DIKEYBOARD_HOME                                        = -2130705209  ' &H810004C7
%DIKEYBOARD_UP                                          = -2130705208  ' &H810004C8
%DIKEYBOARD_PRIOR                                       = -2130705207  ' &H810004C9
%DIKEYBOARD_LEFT                                        = -2130705205  ' &H810004CB
%DIKEYBOARD_RIGHT                                       = -2130705203  ' &H810004CD
%DIKEYBOARD_END                                         = -2130705201  ' &H810004CF
%DIKEYBOARD_DOWN                                        = -2130705200  ' &H810004D0
%DIKEYBOARD_NEXT                                        = -2130705199  ' &H810004D1
%DIKEYBOARD_INSERT                                      = -2130705198  ' &H810004D2
%DIKEYBOARD_DELETE                                      = -2130705197  ' &H810004D3
%DIKEYBOARD_LWIN                                        = -2130705189  ' &H810004DB
%DIKEYBOARD_RWIN                                        = -2130705188  ' &H810004DC
%DIKEYBOARD_APPS                                        = -2130705187  ' &H810004DD
%DIKEYBOARD_POWER                                       = -2130705186  ' &H810004DE
%DIKEYBOARD_SLEEP                                       = -2130705185  ' &H810004DF
%DIKEYBOARD_WAKE                                        = -2130705181  ' &H810004E3
%DIKEYBOARD_WEBSEARCH                                   = -2130705179  ' &H810004E5
%DIKEYBOARD_WEBFAVORITES                                = -2130705178  ' &H810004E6
%DIKEYBOARD_WEBREFRESH                                  = -2130705177  ' &H810004E7
%DIKEYBOARD_WEBSTOP                                     = -2130705176  ' &H810004E8
%DIKEYBOARD_WEBFORWARD                                  = -2130705175  ' &H810004E9
%DIKEYBOARD_WEBBACK                                     = -2130705174  ' &H810004EA
%DIKEYBOARD_MYCOMPUTER                                  = -2130705173  ' &H810004EB
%DIKEYBOARD_MAIL                                        = -2130705172  ' &H810004EC
%DIKEYBOARD_MEDIASELECT                                 = -2130705171  ' &H810004ED

' ========================================================================================
' CONST_DIMOUSEOFS enum
' ========================================================================================

%DIMOFS_X                                               = 0            ' &H0
%DIMOFS_Y                                               = 4            ' &H4
%DIMOFS_Z                                               = 8            ' &H8
%DIMOFS_BUTTON0                                         = 12           ' &HC
%DIMOFS_BUTTON1                                         = 13           ' &HD
%DIMOFS_BUTTON2                                         = 14           ' &HE
%DIMOFS_BUTTON3                                         = 15           ' &HF
%DIMOFS_BUTTON4                                         = 16           ' &H10
%DIMOFS_BUTTON5                                         = 17           ' &H11
%DIMOFS_BUTTON6                                         = 18           ' &H12
%DIMOFS_BUTTON7                                         = 19           ' &H13

' ========================================================================================
' CONST_DIMOUSEFLAGS enum
' ========================================================================================

%DIMOUSE_XAXISAB                                        = -2113928704  ' &H82000200
%DIMOUSE_YAXISAB                                        = -2113928700  ' &H82000204
%DIMOUSE_XAXIS                                          = -2113928448  ' &H82000300
%DIMOUSE_YAXIS                                          = -2113928444  ' &H82000304
%DIMOUSE_WHEEL                                          = -2113928440  ' &H82000308
%DIMOUSE_BUTTON0                                        = -2113928180  ' &H8200040C
%DIMOUSE_BUTTON1                                        = -2113928179  ' &H8200040D
%DIMOUSE_BUTTON2                                        = -2113928178  ' &H8200040E
%DIMOUSE_BUTTON3                                        = -2113928177  ' &H8200040F
%DIMOUSE_BUTTON4                                        = -2113928176  ' &H82000410
%DIMOUSE_BUTTON5                                        = -2113928175  ' &H82000411
%DIMOUSE_BUTTON6                                        = -2113928174  ' &H82000412
%DIMOUSE_BUTTON7                                        = -2113928173  ' &H82000413

' ========================================================================================
' CONST_DIVOICEFLAGS enum
' ========================================================================================

%DIVOICE_CHANNEL1                                       = -2097150975  ' &H83000401
%DIVOICE_CHANNEL2                                       = -2097150974  ' &H83000402
%DIVOICE_CHANNEL3                                       = -2097150973  ' &H83000403
%DIVOICE_CHANNEL4                                       = -2097150972  ' &H83000404
%DIVOICE_CHANNEL5                                       = -2097150971  ' &H83000405
%DIVOICE_CHANNEL6                                       = -2097150970  ' &H83000406
%DIVOICE_CHANNEL7                                       = -2097150969  ' &H83000407
%DIVOICE_CHANNEL8                                       = -2097150968  ' &H83000408
%DIVOICE_TEAM                                           = -2097150967  ' &H83000409
%DIVOICE_ALL                                            = -2097150966  ' &H8300040A
%DIVOICE_RECORDMUTE                                     = -2097150965  ' &H8300040B
%DIVOICE_PLAYBACKMUTE                                   = -2097150964  ' &H8300040C
%DIVOICE_TRANSMIT                                       = -2097150963  ' &H8300040D
%DIVOICE_VOICECOMMAND                                   = -2097150960  ' &H83000410

' ========================================================================================
' CONST_DINPUTCONSTANTS enum <alias> CONST_DINPUT
' ========================================================================================

%DIPROPRANGE_NOMIN                                      = -2147483648  ' &H80000000
%DIPROPRANGE_NOMAX                                      = 2147483647   ' &H7FFFFFFF
%DI_DEGREES                                             = 100          ' &H64
%DI_FFNOMINALMAX                                        = 10000        ' &H2710
%DI_SECONDS                                             = 1000000      ' &HF4240
%DIPROPAXISMODE_ABS                                     = 0            ' &H0
%DIPROPAXISMODE_REL                                     = 1            ' &H1
%DIPROPCALIBRATIONMODE_COOKED                           = 0            ' &H0
%DIPROPCALIBRATIONMODE_RAW                              = 1            ' &H1
%DIPROPAUTOCENTER_OFF                                   = 0            ' &H0
%DIPROPAUTOCENTER_ON                                    = 1            ' &H1
%DIEB_NOTRIGGER                                         = -1           ' &HFFFFFFFF
%MAXCPOINTSNUM                                          = 8            ' &H8

' ========================================================================================
' CONST_DINPUTERR enum
' ========================================================================================

%DI_OK                                                  = 0            ' &H0
%DI_NOTATTACHED                                         = 1            ' &H1
%DI_PROPNOEFFECT                                        = 1            ' &H1
%DI_NOEFFECT                                            = 1            ' &H1
%DI_POLLEDDEVICE                                        = 2            ' &H2
%DI_DOWNLOADSKIPPED                                     = 3            ' &H3
%DI_EFFECTRESTARTED                                     = 4            ' &H4
%DI_SETTINGSNOTSAVED                                    = 11           ' &HB
%DI_TRUNCATED                                           = 8            ' &H8
%DI_TRUNCATEDANDRESTARTED                               = 12           ' &HC
%DI_WRITEPROTECT                                        = 19           ' &H13
%DI_BUFFEROVERFLOW                                      = -2147220896  ' &H80040260
%DIERR_OLDDIRECTINPUTVERSION                            = -2147023746  ' &H8007047E
%DIERR_BETADIRECTINPUTVERSION                           = -2147023743  ' &H80070481
%DIERR_BADDRIVERVER                                     = -2147024777  ' &H80070077
%DIERR_DEVICENOTREG                                     = -2147221164  ' &H80040154
%DIERR_NOTFOUND                                         = -2147024894  ' &H80070002
%DIERR_OBJECTNOTFOUND                                   = -2147024894  ' &H80070002
%DIERR_INVALIDPARAM                                     = 5            ' &H5
%DIERR_NOINTERFACE                                      = 430          ' &H1AE
%DIERR_GENERIC                                          = -2147467259  ' &H80004005
%DIERR_OUTOFMEMORY                                      = 7            ' &H7
%DIERR_UNSUPPORTED                                      = 445          ' &H1BD
%DIERR_NOTINITIALIZED                                   = -2147024875  ' &H80070015
%DIERR_ALREADYINITIALIZED                               = -2147023649  ' &H800704DF
%DIERR_INPUTLOST                                        = -2147024866  ' &H8007001E
%DIERR_ACQUIRED                                         = -2147024726  ' &H800700AA
%DIERR_NOTACQUIRED                                      = -2147024884  ' &H8007000C
%DIERR_NOAGGREGATION                                    = -2147467262  ' &H80004002
%DIERR_OTHERAPPHASPRIO                                  = -2147024891  ' &H80070005
%DIERR_READONLY                                         = -2147024891  ' &H80070005
%DIERR_HANDLEEXISTS                                     = -2147024891  ' &H80070005
%E_PENDING                                              = -2147483638  ' &H8000000A
%DIERR_INSUFFICIENTPRIVS                                = -2147220992  ' &H80040200
%DIERR_DEVICEFULL                                       = -2147220991  ' &H80040201
%DIERR_MOREDATA                                         = -2147220990  ' &H80040202
%DIERR_NOTDOWNLOADED                                    = -2147220989  ' &H80040203
%DIERR_HASEFFECTS                                       = -2147220988  ' &H80040204
%DIERR_NOTEXCLUSIVEACQUIRED                             = -2147220987  ' &H80040205
%DIERR_INCOMPLETEEFFECT                                 = -2147220986  ' &H80040206
%DIERR_NOTBUFFERED                                      = -2147220985  ' &H80040207
%DIERR_EFFECTPLAYING                                    = -2147220984  ' &H80040208
%DIERR_UNPLUGGED                                        = -2147220983  ' &H80040209
%DIERR_REPORTFULL                                       = -2147220982  ' &H8004020A
%DIERR_MAPFILEFAIL                                      = -2147220981  ' &H8004020B

' ========================================================================================
' CONST_DIJOYSTICKOFS enum
' ========================================================================================

%DIJOFS_X                                               = 0            ' &H0
%DIJOFS_Y                                               = 4            ' &H4
%DIJOFS_Z                                               = 8            ' &H8
%DIJOFS_RX                                              = 12           ' &HC
%DIJOFS_RY                                              = 16           ' &H10
%DIJOFS_RZ                                              = 20           ' &H14
%DIJOFS_SLIDER0                                         = 24           ' &H18
%DIJOFS_SLIDER1                                         = 28           ' &H1C
%DIJOFS_POV0                                            = 32           ' &H20
%DIJOFS_POV1                                            = 36           ' &H24
%DIJOFS_POV2                                            = 40           ' &H28
%DIJOFS_POV3                                            = 44           ' &H2C
%DIJOFS_BUTTON0                                         = 48           ' &H30
%DIJOFS_BUTTON1                                         = 49           ' &H31
%DIJOFS_BUTTON2                                         = 50           ' &H32
%DIJOFS_BUTTON3                                         = 51           ' &H33
%DIJOFS_BUTTON4                                         = 52           ' &H34
%DIJOFS_BUTTON5                                         = 53           ' &H35
%DIJOFS_BUTTON6                                         = 54           ' &H36
%DIJOFS_BUTTON7                                         = 55           ' &H37
%DIJOFS_BUTTON8                                         = 56           ' &H38
%DIJOFS_BUTTON9                                         = 57           ' &H39
%DIJOFS_BUTTON10                                        = 58           ' &H3A
%DIJOFS_BUTTON11                                        = 59           ' &H3B
%DIJOFS_BUTTON12                                        = 60           ' &H3C
%DIJOFS_BUTTON13                                        = 61           ' &H3D
%DIJOFS_BUTTON14                                        = 62           ' &H3E
%DIJOFS_BUTTON15                                        = 63           ' &H3F
%DIJOFS_BUTTON16                                        = 64           ' &H40
%DIJOFS_BUTTON17                                        = 65           ' &H41
%DIJOFS_BUTTON18                                        = 66           ' &H42
%DIJOFS_BUTTON19                                        = 67           ' &H43
%DIJOFS_BUTTON20                                        = 68           ' &H44
%DIJOFS_BUTTON21                                        = 69           ' &H45
%DIJOFS_BUTTON22                                        = 70           ' &H46
%DIJOFS_BUTTON23                                        = 71           ' &H47
%DIJOFS_BUTTON24                                        = 72           ' &H48
%DIJOFS_BUTTON25                                        = 73           ' &H49
%DIJOFS_BUTTON26                                        = 74           ' &H4A
%DIJOFS_BUTTON27                                        = 75           ' &H4B
%DIJOFS_BUTTON28                                        = 76           ' &H4C
%DIJOFS_BUTTON29                                        = 77           ' &H4D
%DIJOFS_BUTTON30                                        = 78           ' &H4E
%DIJOFS_BUTTON31                                        = 79           ' &H4F

' ========================================================================================
' CONST_DIEFFFLAGS enum
' ========================================================================================

%DIEFF_OBJECTIDS                                        = 1            ' &H1
%DIEFF_OBJECTOFFSETS                                    = 2            ' &H2
%DIEFF_CARTESIAN                                        = 16           ' &H10
%DIEFF_POLAR                                            = 32           ' &H20
%DIEFF_SPHERICAL                                        = 64           ' &H40

' ========================================================================================
' CONST_DIEGESFLAGS enum
' ========================================================================================

%DIEGES_PLAYING                                         = 1            ' &H1
%DIEGES_EMULATED                                        = 2            ' &H2

' ========================================================================================
' CONST_DIESFLAGS enum
' ========================================================================================

%DIES_SOLO                                              = 1            ' &H1
%DIES_NODOWNLOAD                                        = -2147483648  ' &H80000000

' ========================================================================================
' CONST_DPNSENDFLAGS enum
' ========================================================================================

%DPNSEND_SYNC                                           = -2147483648  ' &H80000000
%DPNSEND_NOCOPY                                         = 1            ' &H1
%DPNSEND_NOCOMPLETE                                     = 2            ' &H2
%DPNSEND_COMPLETEONPROCESS                              = 4            ' &H4
%DPNSEND_GUARANTEED                                     = 8            ' &H8
%DPNSEND_NONSEQUENTIAL                                  = 16           ' &H10
%DPNSEND_NOLOOPBACK                                     = 32           ' &H20
%DPNSEND_PRIORITY_LOW                                   = 64           ' &H40
%DPNSEND_PRIORITY_HIGH                                  = 128          ' &H80

' ========================================================================================
' CONST_DPNINFO enum
' ========================================================================================

%DPNINFO_NAME                                           = 1            ' &H1
%DPNINFO_DATA                                           = 2            ' &H2

' ========================================================================================
' CONST_DPNGROUPINFOFLAGS enum
' ========================================================================================

%DPNGROUP_AUTODESTRUCT                                  = 1            ' &H1

' ========================================================================================
' CONST_DPNOPERATIONS enum
' ========================================================================================

%DPNOP_SYNC                                             = -2147483648  ' &H80000000
%DPNCONNECT_SYNC                                        = -2147483648  ' &H80000000
%DPNENUMHOSTS_SYNC                                      = -2147483648  ' &H80000000
%DPNCREATEGROUP_SYNC                                    = -2147483648  ' &H80000000
%DPNDESTROYGROUP_SYNC                                   = -2147483648  ' &H80000000
%DPNADDPLAYERTOGROUP_SYNC                               = -2147483648  ' &H80000000
%DPNREMOVEPLAYERFROMGROUP_SYNC                          = -2147483648  ' &H80000000
%DPNSETGROUPINFO_SYNC                                   = -2147483648  ' &H80000000
%DPNSETCLIENTINFO_SYNC                                  = -2147483648  ' &H80000000
%DPNSETSERVERINFO_SYNC                                  = -2147483648  ' &H80000000
%DPNSETPEERINFO_SYNC                                    = -2147483648  ' &H80000000
%DPNHOST_OKTOQUERYFORADDRESSING                         = 1            ' &H1

' ========================================================================================
' CONST_DPNGETSENDQUEUEINFO enum
' ========================================================================================

%DPNGETSENDQUEUEINFO_PRIORITY_NORMAL                    = 1            ' &H1
%DPNGETSENDQUEUEINFO_PRIORITY_HIGH                      = 2            ' &H2
%DPNGETSENDQUEUEINFO_PRIORITY_LOW                       = 4            ' &H4

' ========================================================================================
' CONST_DPNPLAYINFOFLAGS enum
' ========================================================================================

%DPNPLAYER_LOCAL                                        = 2            ' &H2
%DPNPLAYER_HOST                                         = 4            ' &H4

' ========================================================================================
' CONST_DPNSESSIONFLAGS enum
' ========================================================================================

%DPNSESSION_CLIENT_SERVER                               = 1            ' &H1
%DPNSESSION_MIGRATE_HOST                                = 4            ' &H4
%DPNSESSION_NODPNSVR                                    = 64           ' &H40
%DPNSESSION_REQUIREPASSWORD                             = 128          ' &H80

' ========================================================================================
' CONST_DPNENUMCLIENTGROUPFLAGS enum
' ========================================================================================

%DPNENUM_PLAYERS                                        = 1            ' &H1
%DPNENUM_GROUPS                                         = 16           ' &H10

' ========================================================================================
' CONST_DPNCANCELFLAGS enum
' ========================================================================================

%DPNCANCEL_ALL_OPERATIONS                               = 32768        ' &H8000
%DPNCANCEL_CONNECT                                      = 1            ' &H1
%DPNCANCEL_ENUM                                         = 2            ' &H2
%DPNCANCEL_SEND                                         = 4            ' &H4

' ========================================================================================
' CONST_DPLCONNECTSETTINGS enum
' ========================================================================================

%DPLCONNECTSETTINGS_HOST                                = 1            ' &H1

' ========================================================================================
' CONST_DPLAVAILABLE enum
' ========================================================================================

%DPLAVAILABLE_ALLOWMULTIPLECONNECT                      = 1            ' &H1

' ========================================================================================
' CONST_DPLSESSION enum
' ========================================================================================

%DPLSESSION_CONNECTED                                   = 1            ' &H1
%DPLSESSION_COULDNOTCONNECT                             = 2            ' &H2
%DPLSESSION_DISCONNECTED                                = 3            ' &H3
%DPLSESSION_TERMINATED                                  = 4            ' &H4
%DPLSESSION_HOSTMIGRATED                                = 5            ' &H5
%DPLSESSION_HOSTMIGRATEDHERE                            = 6            ' &H6

' ========================================================================================
' CONST_DPLCONNECT enum
' ========================================================================================

%DPLCONNECT_LAUNCHNEW                                   = 1            ' &H1
%DPLCONNECT_LAUNCHNOTFOUND                              = 2            ' &H2

' ========================================================================================
' CONST_DVSOUNDEFFECT enum
' ========================================================================================

%DVSOUNDCONFIG_NORMALMODE                               = 1            ' &H1
%DVSOUNDCONFIG_AUTOSELECT                               = 2            ' &H2
%DVSOUNDCONFIG_HALFDUPLEX                               = 4            ' &H4
%DVSOUNDCONFIG_SETCONVERSIONQUALITY                     = 8            ' &H8
%DVSOUNDCONFIG_NORECVOLAVAILABLE                        = 16           ' &H10
%DVSOUNDCONFIG_NOFOCUS                                  = 536870912    ' &H20000000
%DVSOUNDCONFIG_STRICTFOCUS                              = 1073741824   ' &H40000000

' ========================================================================================
' CONST_DVCLIENTCONFIGENUM enum
' ========================================================================================

%DVCLIENTCONFIG_RECORDMUTE                              = 1            ' &H1
%DVCLIENTCONFIG_PLAYBACKMUTE                            = 2            ' &H2
%DVCLIENTCONFIG_MANUALVOICEACTIVATED                    = 4            ' &H4
%DVCLIENTCONFIG_AUTORECORDVOLUME                        = 8            ' &H8
%DVCLIENTCONFIG_MUTEGLOBAL                              = 16           ' &H10
%DVCLIENTCONFIG_AUTOVOICEACTIVATED                      = 32           ' &H20
%DVCLIENTCONFIG_ECHOSUPPRESSION                         = 134217728    ' &H8000000

' ========================================================================================
' CONST_DVTHRESHOLD enum
' ========================================================================================

%DVTHRESHOLD_MIN                                        = 0            ' &H0
%DVTHRESHOLD_MAX                                        = 99           ' &H63
%DVTHRESHOLD_DEFAULT                                    = -1           ' &HFFFFFFFF
%DVTHRESHOLD_UNUSED                                     = -2           ' &HFFFFFFFE

' ========================================================================================
' CONST_DVBUFFERQUALITY enum
' ========================================================================================

%DVBUFFERQUALITY_MIN                                    = 1            ' &H1
%DVBUFFERQUALITY_MAX                                    = 100          ' &H64
%DVBUFFERQUALITY_DEFAULT                                = 0            ' &H0

' ========================================================================================
' CONST_DVBUFFERAGGRESSIVENESS enum
' ========================================================================================

%DVBUFFERAGGRESSIVENESS_MIN                             = 1            ' &H1
%DVBUFFERAGGRESSIVENESS_MAX                             = 100          ' &H64
%DVBUFFERAGGRESSIVENESS_DEFAULT                         = 0            ' &H0

' ========================================================================================
' CONST_DVSESSION enum
' ========================================================================================

%DVSESSION_NOHOSTMIGRATION                              = 1            ' &H1
%DVSESSION_SERVERCONTROLTARGET                          = 2            ' &H2

' ========================================================================================
' CONST_DVSESSIONTYPE enum
' ========================================================================================

%DVSESSIONTYPE_PEER                                     = 1            ' &H1
%DVSESSIONTYPE_MIXING                                   = 2            ' &H2
%DVSESSIONTYPE_FORWARDING                               = 3            ' &H3
%DVSESSIONTYPE_ECHO                                     = 4            ' &H4

' ========================================================================================
' CONST_DPNDESTROYPLAYERREASON enum
' ========================================================================================

%DPNDESTROYPLAYERREASON_NORMAL                          = 1            ' &H1
%DPNDESTROYPLAYERREASON_CONNECTIONLOST                  = 2            ' &H2
%DPNDESTROYPLAYERREASON_SESSIONTERMINATED               = 3            ' &H3
%DPNDESTROYPLAYERREASON_HOSTDESTROYEDPLAYER             = 4            ' &H4

' ========================================================================================
' CONST_DPNDESTROYGROUPREASON enum
' ========================================================================================

%DPNDESTROYGROUPREASON_NORMAL                           = 1            ' &H1
%DPNDESTROYGROUPREASON_AUTODESTRUCTED                   = 2            ' &H2
%DPNDESTROYGROUPREASON_SESSIONTERMINATED                = 3            ' &H3

' ========================================================================================
' CONST_DPLHANDLE enum
' ========================================================================================

%DPLHANDLE_ALLCONNECTIONS                               = -1           ' &HFFFFFFFF

' ========================================================================================
' CONST_DPLAYBUFSIZE enum
' ========================================================================================

%SIZE_BYTE                                              = 1            ' &H1
%SIZE_LONG                                              = 4            ' &H4
%SIZE_INTEGER                                           = 2            ' &H2
%SIZE_BOOLEAN                                           = 2            ' &H2
%SIZE_SINGLE                                            = 4            ' &H4
%SIZE_DOUBLE                                            = 8            ' &H8
%SIZE_CURRENCY                                          = 8            ' &H8
%SIZE_DECIMAL                                           = 14           ' &HE
%SIZE_DATE                                              = 8            ' &H8

' ========================================================================================
' CONST_DPNSPCAPS enum
' ========================================================================================

%DPNSPCAPS_SUPPORTSDPNSRV                               = 1            ' &H1
%DPNSPCAPS_SUPPORTSBROADCAST                            = 2            ' &H2
%DPNSPCAPS_SUPPORTSALLADAPTERS                          = 4            ' &H4

' ========================================================================================
' CONST_DPLMSG enum
' ========================================================================================

%DPL_MSGID_RECEIVE                                      = 32769        ' &H8001
%DPL_MSGID_CONNECT                                      = 32770        ' &H8002
%DPL_MSGID_DISCONNECT                                   = 32771        ' &H8003
%DPL_MSGID_SESSION_STATUS                               = 32772        ' &H8004
%DPL_MSGID_CONNECTION_SETTINGS                          = 32773        ' &H8005

' ========================================================================================
' CONST_DPNWAITTIME enum
' ========================================================================================

'%INFINITE                                               = -1           ' &HFFFFFFFF

' ========================================================================================
' CONST_DPNLOBBY enum
' ========================================================================================

%DPNLOBBY_REGISTER                                      = 1            ' &H1
%DPNLOBBY_UNREGISTER                                    = 2            ' &H2

' ========================================================================================
' CONST_DPNERROR enum
' ========================================================================================

%DPN_OK                                                 = 0            ' &H0
%DPNSUCCESS_PENDING                                     = 259          ' &H103
%DPNERR_ABORTED                                         = -2146074576  ' &H80158030
%DPNERR_ADDRESSING                                      = -2146074560  ' &H80158040
%DPNERR_ALREADYCLOSING                                  = -2146074544  ' &H80158050
%DPNERR_ALREADYCONNECTED                                = -2146074528  ' &H80158060
%DPNERR_ALREADYDISCONNECTING                            = -2146074512  ' &H80158070
%DPNERR_ALREADYINITIALIZED                              = -2146074496  ' &H80158080
%DPNERR_ALREADYREGISTERED                               = -2146074480  ' &H80158090
%DPNERR_BUFFERTOOSMALL                                  = -2146074368  ' &H80158100
%DPNERR_CANNOTCANCEL                                    = -2146074352  ' &H80158110
%DPNERR_CANTCREATEGROUP                                 = -2146074336  ' &H80158120
%DPNERR_CANTCREATEPLAYER                                = -2146074320  ' &H80158130
%DPNERR_CANTLAUNCHAPPLICATION                           = -2146074304  ' &H80158140
%DPNERR_CONNECTING                                      = -2146074288  ' &H80158150
%DPNERR_CONNECTIONLOST                                  = -2146074272  ' &H80158160
%DPNERR_CONVERSION                                      = -2146074256  ' &H80158170
%DPNERR_DATATOOLARGE                                    = -2146074251  ' &H80158175
%DPNERR_DOESNOTEXIST                                    = -2146074240  ' &H80158180
%DPNERR_DUPLICATECOMMAND                                = -2146074224  ' &H80158190
%DPNERR_ENDPOINTNOTRECEIVING                            = -2146074112  ' &H80158200
%DPNERR_ENUMQUERYTOOLARGE                               = -2146074096  ' &H80158210
%DPNERR_ENUMRESPONSETOOLARGE                            = -2146074080  ' &H80158220
%DPNERR_EXCEPTION                                       = -2146074064  ' &H80158230
%DPNERR_GENERIC                                         = -2147483640  ' &H80000008
%DPNERR_GROUPNOTEMPTY                                   = -2146074048  ' &H80158240
%DPNERR_HOSTING                                         = -2146074032  ' &H80158250
%DPNERR_HOSTREJECTEDCONNECTION                          = -2146074016  ' &H80158260
%DPNERR_HOSTTERMINATEDSESSION                           = -2146074000  ' &H80158270
%DPNERR_INCOMPLETEADDRESS                               = -2146073984  ' &H80158280
%DPNERR_INVALIDADDRESSFORMAT                            = -2146073968  ' &H80158290
%DPNERR_INVALIDAPPLICATION                              = -2146073856  ' &H80158300
%DPNERR_INVALIDCOMMAND                                  = -2146073840  ' &H80158310
%DPNERR_INVALIDDEVICEADDRESS                            = -2146073824  ' &H80158320
%DPNERR_INVALIDENDPOINT                                 = -2146073808  ' &H80158330
%DPNERR_INVALIDFLAGS                                    = -2146073792  ' &H80158340
%DPNERR_INVALIDGROUP                                    = -2146073776  ' &H80158350
%DPNERR_INVALIDHANDLE                                   = -2146073760  ' &H80158360
%DPNERR_INVALIDHOSTADDRESS                              = -2146073744  ' &H80158370
%DPNERR_INVALIDINSTANCE                                 = -2146073728  ' &H80158380
%DPNERR_INVALIDINTERFACE                                = -2146073712  ' &H80158390
%DPNERR_INVALIDOBJECT                                   = -2146073600  ' &H80158400
%DPNERR_INVALIDPARAM                                    = 5            ' &H5
%DPNERR_INVALIDPASSWORD                                 = -2146073584  ' &H80158410
%DPNERR_INVALIDPLAYER                                   = -2146073568  ' &H80158420
%DPNERR_INVALIDPOINTER                                  = -2147467261  ' &H80004003
%DPNERR_INVALIDPRIORITY                                 = -2146073552  ' &H80158430
%DPNERR_INVALIDSTRING                                   = -2146073536  ' &H80158440
%DPNERR_INVALIDURL                                      = -2146073520  ' &H80158450
%DPNERR_INVALIDVERSION                                  = -2146073504  ' &H80158460
%DPNERR_NOCAPS                                          = -2146073488  ' &H80158470
%DPNERR_NOCONNECTION                                    = -2146073472  ' &H80158480
%DPNERR_NOHOSTPLAYER                                    = -2146073456  ' &H80158490
%DPNERR_NOINTERFACE                                     = 430          ' &H1AE
%DPNERR_NOMOREADDRESSCOMPONENTS                         = -2146073344  ' &H80158500
%DPNERR_NORESPONSE                                      = -2146073328  ' &H80158510
%DPNERR_NOTALLOWED                                      = -2146073312  ' &H80158520
%DPNERR_NOTHOST                                         = -2146073296  ' &H80158530
%DPNERR_NOTREADY                                        = -2146073280  ' &H80158540
%DPNERR_NOTREGISTERED                                   = -2146073264  ' &H80158550
%DPNERR_OUTOFMEMORY                                     = 7            ' &H7
%DPNERR_PENDING                                         = 259          ' &H103
%DPNERR_PLAYERALREADYINGROUP                            = -2146073248  ' &H80158560
%DPNERR_PLAYERLOST                                      = -2146073232  ' &H80158570
%DPNERR_PLAYERNOTINGROUP                                = -2146073216  ' &H80158580
%DPNERR_PLAYERNOTREACHABLE                              = -2146073200  ' &H80158590
%DPNERR_SENDTOOLARGE                                    = -2146073088  ' &H80158600
%DPNERR_SESSIONFULL                                     = -2146073072  ' &H80158610
%DPNERR_TABLEFULL                                       = -2146073056  ' &H80158620
%DPNERR_TIMEDOUT                                        = -2146073040  ' &H80158630
%DPNERR_UNINITIALIZED                                   = -2146073024  ' &H80158640
%DPNERR_UNSUPPORTED                                     = 445          ' &H1BD
%DPNERR_USERCANCEL                                      = -2146073008  ' &H80158650

' ========================================================================================
' CONST_DPNSTATUS enum
' ========================================================================================

%DPN_ACCEPTED                                           = 0            ' &H0
%DPN_REJECTED                                           = -2147483640  ' &H80000008

' ========================================================================================
' CONST_DPCONNECT enum
' ========================================================================================

%DPNCONNECT_OKTOQUERYFORADDRESSING                      = 1            ' &H1

' ========================================================================================
' CONST_DPENUMHOSTS enum
' ========================================================================================

%DPNENUMHOSTS_OKTOQUERYFORADDRESSING                    = 1            ' &H1
%DPNENUMHOSTS_NOBROADCASTFALLBACK                       = 2            ' &H2

' ========================================================================================
' CONST_DPNPLAYERGROUPFLAGS enum
' ========================================================================================

%DPNID_ALL_PLAYERS_GROUP                                = 0            ' &H0

' ========================================================================================
' CONST_DPNMESSAGEID enum
' ========================================================================================

%DPN_MSGID_ADD_PLAYER_TO_GROUP                          = -65535       ' &HFFFF0001
%DPN_MSGID_APPLICATION_DESC                             = -65534       ' &HFFFF0002
%DPN_MSGID_ASYNC_OP_COMPLETE                            = -65533       ' &HFFFF0003
%DPN_MSGID_CLIENT_INFO                                  = -65532       ' &HFFFF0004
%DPN_MSGID_CONNECT_COMPLETE                             = -65531       ' &HFFFF0005
%DPN_MSGID_CREATE_GROUP                                 = -65530       ' &HFFFF0006
%DPN_MSGID_CREATE_PLAYER                                = -65529       ' &HFFFF0007
%DPN_MSGID_DESTROY_GROUP                                = -65528       ' &HFFFF0008
%DPN_MSGID_DESTROY_PLAYER                               = -65527       ' &HFFFF0009
%DPN_MSGID_ENUM_HOSTS_QUERY                             = -65526       ' &HFFFF000A
%DPN_MSGID_ENUM_HOSTS_RESPONSE                          = -65525       ' &HFFFF000B
%DPN_MSGID_GROUP_INFO                                   = -65524       ' &HFFFF000C
%DPN_MSGID_HOST_MIGRATE                                 = -65523       ' &HFFFF000D
%DPN_MSGID_INDICATE_CONNECT                             = -65522       ' &HFFFF000E
%DPN_MSGID_INDICATED_CONNECT_ABORTED                    = -65521       ' &HFFFF000F
%DPN_MSGID_PEER_INFO                                    = -65520       ' &HFFFF0010
%DPN_MSGID_RECEIVE                                      = -65519       ' &HFFFF0011
%DPN_MSGID_REMOVE_PLAYER_FROM_GROUP                     = -65518       ' &HFFFF0012
%DPN_MSGID_RETURN_BUFFER                                = -65517       ' &HFFFF0013
%DPN_MSGID_SEND_COMPLETE                                = -65516       ' &HFFFF0014
%DPN_MSGID_SERVER_INFO                                  = -65515       ' &HFFFF0015
%DPN_MSGID_TERMINATE_SESSION                            = -65514       ' &HFFFF0016

' ========================================================================================
' CONST_DVCOMPRESSIONCAPS enum
' ========================================================================================

%DVCOMPRESSIONCAPS_HW                                   = 1            ' &H1
%DVCOMPRESSIONCAPS_VARIABLE                             = 2            ' &H2
%DVCOMPRESSIONCAPS_NATIVE                               = 4            ' &H4

' ========================================================================================
' CONST_DVNOTIFY enum
' ========================================================================================

%DVNOTIFYPERIOD_MINPERIOD                               = 20           ' &H14

' ========================================================================================
' CONST_DVCAPSENUM enum
' ========================================================================================

%DVCAPS_HWMIXING                                        = 1            ' &H1

' ========================================================================================
' CONST_DVFLAGS enum
' ========================================================================================

%DVFLAGS_SYNC                                           = 1            ' &H1
%DVFLAGS_QUERYONLY                                      = 2            ' &H2
%DVFLAGS_NOHOSTMIGRATE                                  = 8            ' &H8
%DVFLAGS_ALLOWBACK                                      = 16           ' &H10

' ========================================================================================
' CONST_DVPLAYBACKVOLUME enum
' ========================================================================================

%DVPLAYBACKVOLUME_DEFAULT                               = 0            ' &H0

' ========================================================================================
' CONST_DVMESSAGE enum
' ========================================================================================

%DVMSGID_BASE                                           = 0            ' &H0
%DVMSGID_CREATEVOICEPLAYER                              = 1            ' &H1
%DVMSGID_DELETEVOICEPLAYER                              = 2            ' &H2
%DVMSGID_SESSIONLOST                                    = 3            ' &H3
%DVMSGID_PLAYERVOICESTART                               = 4            ' &H4
%DVMSGID_PLAYERVOICESTOP                                = 5            ' &H5
%DVMSGID_RECORDSTART                                    = 6            ' &H6
%DVMSGID_RECORDSTOP                                     = 7            ' &H7
%DVMSGID_CONNECTRESULT                                  = 8            ' &H8
%DVMSGID_DISCONNECTRESULT                               = 9            ' &H9
%DVMSGID_INPUTLEVEL                                     = 10           ' &HA
%DVMSGID_OUTPUTLEVEL                                    = 11           ' &HB
%DVMSGID_HOSTMIGRATED                                   = 12           ' &HC
%DVMSGID_SETTARGETS                                     = 13           ' &HD
%DVMSGID_PLAYEROUTPUTLEVEL                              = 14           ' &HE
%DVMSGID_LOSTFOCUS                                      = 16           ' &H10
%DVMSGID_GAINFOCUS                                      = 17           ' &H11
%DVMSGID_LOCALHOSTSETUP                                 = 18           ' &H12
%DVMSGID_MINBASE                                        = 1            ' &H1
%DVMSGID_MAXBASE                                        = 18           ' &H12
%DVID_SYS                                               = 0            ' &H0
%DVID_SERVERPLAYER                                      = 1            ' &H1
%DVID_ALLPLAYERS                                        = 0            ' &H0
%DVID_NOTARGET                                          = -1           ' &HFFFFFFFF
%DVID_REMAINING                                         = -1           ' &HFFFFFFFF

' ========================================================================================
' CONST_DVERR enum
' ========================================================================================

%DV_OK                                                  = 0            ' &H0
%DV_FULLDUPLEX                                          = 1376261      ' &H150005
%DV_HALFDUPLEX                                          = 1376266      ' &H15000A
%DV_EXIT                                                = 1376271      ' &H15000F
%DVERR_BUFFERTOOSMALL                                   = -2146107362  ' &H8015001E
%DVERR_EXCEPTION                                        = -2146107302  ' &H8015005A
%DVERR_GENERIC                                          = -2147467259  ' &H80004005
%DVERR_INVALIDFLAGS                                     = -2146107272  ' &H80150078
%DVERR_INVALIDOBJECT                                    = -2146107262  ' &H80150082
%DVERR_INVALIDPARAM                                     = -2147024809  ' &H80070057
%DVERR_INVALIDPLAYER                                    = -2146107257  ' &H80150087
%DVERR_INVALIDENDPOINT                                  = -2146107252  ' &H8015008C
%DVERR_INVALIDGROUP                                     = -2146107247  ' &H80150091
%DVERR_INVALIDHANDLE                                    = -2146107242  ' &H80150096
%DVERR_OUTOFMEMORY                                      = -2147024882  ' &H8007000E
%DVERR_PENDING                                          = -2147483638  ' &H8000000A
%DVERR_NOTSUPPORTED                                     = -2147467263  ' &H80004001
%DVERR_NOINTERFACE                                      = -2147467262  ' &H80004002
%DVERR_SESSIONLOST                                      = -2146107092  ' &H8015012C
%DVERR_NOVOICESESSION                                   = -2146107090  ' &H8015012E
%DVERR_CONNECTIONLOST                                   = -2146107032  ' &H80150168
%DVERR_NOTINITIALIZED                                   = -2146107031  ' &H80150169
%DVERR_CONNECTED                                        = -2146107030  ' &H8015016A
%DVERR_NOTCONNECTED                                     = -2146107029  ' &H8015016B
%DVERR_FORWARDNOTSUPPORTED                              = -2146107028  ' &H8015016C
%DVERR_COMMANDPENDING                                   = -2146107027  ' &H8015016D
%DVERR_CONNECTABORTING                                  = -2146107026  ' &H8015016E
%DVERR_NOTALLOWED                                       = -2146107025  ' &H8015016F
%DVERR_INVALIDTARGET                                    = -2146107024  ' &H80150170
%DVERR_NOTTRANSPORTHOST                                 = -2146107023  ' &H80150171
%DVERR_COMPRESSIONNOTSUPPORTED                          = -2146107022  ' &H80150172
%DVERR_COMMANDALREADYPENDING                            = -2146107021  ' &H80150173
%DVERR_SOUNDINITFAILURE                                 = -2146107020  ' &H80150174
%DVERR_TIMEOUT                                          = -2146107019  ' &H80150175
%DVERR_CONNECTABORTED                                   = -2146107018  ' &H80150176
%DVERR_NO3DSOUND                                        = -2146107017  ' &H80150177
%DVERR_ALREADYBUFFERED                                  = -2146107016  ' &H80150178
%DVERR_NOTBUFFERED                                      = -2146107015  ' &H80150179
%DVERR_HOSTING                                          = -2146107014  ' &H8015017A
%DVERR_NOTHOSTING                                       = -2146107013  ' &H8015017B
%DVERR_INVALIDDEVICE                                    = -2146107012  ' &H8015017C
%DVERR_RECORDSYSTEMERROR                                = -2146107011  ' &H8015017D
%DVERR_PLAYBACKSYSTEMERROR                              = -2146107010  ' &H8015017E
%DVERR_SENDERROR                                        = -2146107009  ' &H8015017F
%DVERR_USERCANCEL                                       = -2146107008  ' &H80150180
%DVERR_UNKNOWN                                          = -2146107007  ' &H80150181
%DVERR_DIALOGBOX                                        = -2146107006  ' &H80150182
%DVERR_RUN_SETUP                                        = -2146107005  ' &H80150183
%DVERR_INCOMPATIBLEVERSION                              = -2146107004  ' &H80150184
%DVERR_PREVIOUSCRASH                                    = -2146107003  ' &H80150185
%DVERR_CHILDPROCESSFAILED                               = -2146107002  ' &H80150186
%DVERR_WIN32                                            = -2146107002  ' &H80150186
%DVERR_INITIALIZED                                      = -2146107001  ' &H80150187
%DVERR_NOTRANSPORT                                      = -2146107000  ' &H80150188
%DVERR_NOCALLBACK                                       = -2146106999  ' &H80150189
%DVERR_TRANSPORTNOTINIT                                 = -2146106998  ' &H8015018A
%DVERR_TRANSPORTNOSESSION                               = -2146106997  ' &H8015018B
%DVERR_TRANSPORTNOPLAYER                                = -2146106996  ' &H8015018C
%DVERR_USERBACK                                         = -2146106995  ' &H8015018D
%DVERR_NORECVOLAVAILABLE                                = -2146106994  ' &H8015018E
%DVERR_INVALIDBUFFER                                    = -2146106993  ' &H8015018F
%DVERR_LOCKEDBUFFER                                     = -2146106992  ' &H80150190

' ========================================================================================
' CONST_D3DXIMAGE_FILEFORMAT enum
' ========================================================================================

%D3DXIFF_BMP                                            = 0            ' &H0
%D3DXIFF_JPG                                            = 1            ' &H1
%D3DXIFF_TGA                                            = 2            ' &H2
%D3DXIFF_PNG                                            = 3            ' &H3
%D3DXIFF_DDS                                            = 4            ' &H4
%D3DXIFF_PPM                                            = 5            ' &H5
%D3DXIFF_DIB                                            = 6            ' &H6
%D3DXIFF_FORCE_DWORD                                    = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_D3DXERR enum
' ========================================================================================

%D3DXERR_CANNOTMODIFYINDEXBUFFER                        = -2005529772  ' &H88760B54
%D3DXERR_INVALIDMESH                                    = -2005529771  ' &H88760B55
%D3DXERR_CANNOTATTRSORT                                 = -2005529770  ' &H88760B56
%D3DXERR_SKINNINGNOTSUPPORTED                           = -2005529769  ' &H88760B57
%D3DXERR_TOOMANYINFLUENCES                              = -2005529768  ' &H88760B58
%D3DXERR_INVALIDDATA                                    = -2005529767  ' &H88760B59
%D3DXERR_LOADEDMESHASNODATA                             = -2005529766  ' &H88760B5A

' ========================================================================================
' CONST_D3DXMESHENUM enum <alias> CONST_D3DXMESH
' ========================================================================================

%D3DXMESH_32BIT                                         = 1            ' &H1
%D3DXMESH_DONOTCLIP                                     = 2            ' &H2
%D3DXMESH_POINTS                                        = 4            ' &H4
%D3DXMESH_RTPATCHES                                     = 8            ' &H8
%D3DXMESH_NPATCHES                                      = 16384        ' &H4000
%D3DXMESH_VB_SYSTEMMEM                                  = 16           ' &H10
%D3DXMESH_VB_MANAGED                                    = 32           ' &H20
%D3DXMESH_VB_WRITEONLY                                  = 64           ' &H40
%D3DXMESH_VB_DYNAMIC                                    = 128          ' &H80
%D3DXMESH_IB_SYSTEMMEM                                  = 256          ' &H100
%D3DXMESH_IB_MANAGED                                    = 512          ' &H200
%D3DXMESH_IB_WRITEONLY                                  = 1024         ' &H400
%D3DXMESH_IB_DYNAMIC                                    = 2048         ' &H800
%D3DXMESH_VB_SHARE                                      = 4096         ' &H1000
%D3DXMESH_USEHWONLY                                     = 8192         ' &H2000
%D3DXMESH_SYSTEMMEM                                     = 272          ' &H110
%D3DXMESH_MANAGED                                       = 544          ' &H220
%D3DXMESH_WRITEONLY                                     = 1088         ' &H440
%D3DXMESH_DYNAMIC                                       = 2176         ' &H880

' ========================================================================================
' CONST_D3DXASM enum
' ========================================================================================

%D3DXASM_DEBUG                                          = 1            ' &H1
%D3DXASM_SKIPVALIDATION                                 = 2            ' &H2

' ========================================================================================
' CONST_D3DXMESHSIMPENUM enum <alias> CONST_D3DXMESHSIMP
' ========================================================================================

%D3DXMESHSIMP_VERTEX                                    = 1            ' &H1
%D3DXMESHSIMP_FACE                                      = 2            ' &H2

' ========================================================================================
' CONST_DTFLAGS enum
' ========================================================================================

%DT_TOP                                                 = 0            ' &H0
%DT_LEFT                                                = 0            ' &H0
%DT_CENTER                                              = 1            ' &H1
%DT_RIGHT                                               = 2            ' &H2
%DT_VCENTER                                             = 4            ' &H4
%DT_BOTTOM                                              = 8            ' &H8
%DT_WORDBREAK                                           = 16           ' &H10
%DT_SINGLELINE                                          = 32           ' &H20
%DT_EXPANDTABS                                          = 64           ' &H40
%DT_TABSTOP                                             = 128          ' &H80
%DT_NOCLIP                                              = 256          ' &H100
%DT_EXTERNALLEADING                                     = 512          ' &H200
%DT_CALCRECT                                            = 1024         ' &H400
%DT_NOPREFIX                                            = 2048         ' &H800
%DT_INTERNAL                                            = 4096         ' &H1000
%DT_EDITCONTROL                                         = 8192         ' &H2000
%DT_PATH_ELLIPSIS                                       = 16384        ' &H4000
%DT_END_ELLIPSIS                                        = 32768        ' &H8000
%DT_MODIFYSTRING                                        = 65536        ' &H10000
%DT_RTLREADING                                          = 131072       ' &H20000
%DT_WORD_ELLIPSIS                                       = 262144       ' &H40000
%DT_NOFULLWIDTHCHARBREAK                                = 524288       ' &H80000
%DT_HIDEPREFIX                                          = 1048576      ' &H100000
%DT_PREFIXONLY                                          = 2097152      ' &H200000

' ========================================================================================
' CONST_D3DXMESHOPTENUM enum <alias> CONST_D3DXMESHOPT
' ========================================================================================

%D3DXMESHOPT_COMPACT                                    = 16777216     ' &H1000000
%D3DXMESHOPT_ATTRSORT                                   = 33554432     ' &H2000000
%D3DXMESHOPT_VERTEXCACHE                                = 67108864     ' &H4000000
%D3DXMESHOPT_STRIPREORDER                               = 134217728    ' &H8000000
%D3DXMESHOPT_IGNOREVERTS                                = 268435456    ' &H10000000
%D3DXMESHOPT_SHAREVB                                    = 536870912    ' &H20000000

' ========================================================================================
' CONST_D3DXMESHMISCENUM enum <alias> CONST_D3DXMESHMISC
' ========================================================================================

%UNUSED16                                               = 65535        ' &HFFFF
%UNUSED32                                               = -1           ' &HFFFFFFFF
%MAX_FVF_DECL_SIZE                                      = 20           ' &H14

' ========================================================================================
' CONST_D3DXENUM enum
' ========================================================================================

%D3DX_DEFAULT                                           = -1           ' &HFFFFFFFF
%D3DX_FILTER_NONE                                       = 1            ' &H1
%D3DX_FILTER_POINT                                      = 2            ' &H2
%D3DX_FILTER_LINEAR                                     = 3            ' &H3
%D3DX_FILTER_TRIANGLE                                   = 4            ' &H4
%D3DX_FILTER_BOX                                        = 5            ' &H5
%D3DX_FILTER_MIRROR_U                                   = 65536        ' &H10000
%D3DX_FILTER_MIRROR_V                                   = 131072       ' &H20000
%D3DX_FILTER_MIRROR_W                                   = 262144       ' &H40000
%D3DX_FILTER_MIRROR                                     = 458752       ' &H70000
%D3DX_FILTER_DITHER                                     = 524288       ' &H80000

' ========================================================================================
' CONST_DXFILEFORMATFLAGS enum
' ========================================================================================

%DXFILEFORMAT_BINARY                                    = 0            ' &H0
%DXFILEFORMAT_TEXT                                      = 1            ' &H1
%DXFILEFORMAT_COMPRESSED                                = 2            ' &H2
%DXFILEFORMAT_FORCEDWORD                                = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_DXFILELOADOPTIONS enum
' ========================================================================================

%DXFILELOAD_FROMFILE                                    = 0            ' &H0
%DXFILELOAD_FROMRESOURCE                                = 1            ' &H1
%DXFILELOAD_FROMMEMORY                                  = 2            ' &H2
%DXFILELOAD_FROMSTREAM                                  = 4            ' &H4
%DXFILELOAD_FROMURL                                     = 8            ' &H8
%DXFILELOAD_FORCEDWORD                                  = 2147483647   ' &H7FFFFFFF

' ========================================================================================
' CONST_DXFILEERR enum
' ========================================================================================

%DXFILEERR_BADOBJECT                                    = -2005531822  ' &H88760352
%DXFILEERR_BADVALUE                                     = -2005531821  ' &H88760353
%DXFILEERR_BADTYPE                                      = -2005531820  ' &H88760354
%DXFILEERR_BADSTREAMHANDLE                              = -2005531819  ' &H88760355
%DXFILEERR_BADALLOC                                     = -2005531818  ' &H88760356
%DXFILEERR_NOTFOUND                                     = -2005531817  ' &H88760357
%DXFILEERR_NOTDONEYET                                   = -2005531816  ' &H88760358
%DXFILEERR_FILENOTFOUND                                 = -2005531815  ' &H88760359
%DXFILEERR_RESOURCENOTFOUND                             = -2005531814  ' &H8876035A
%DXFILEERR_URLNOTFOUND                                  = -2005531813  ' &H8876035B
%DXFILEERR_BADRESOURCE                                  = -2005531812  ' &H8876035C
%DXFILEERR_BADFILETYPE                                  = -2005531811  ' &H8876035D
%DXFILEERR_BADFILEVERSION                               = -2005531810  ' &H8876035E
%DXFILEERR_BADFILEFLOATSIZE                             = -2005531809  ' &H8876035F
%DXFILEERR_BADFILECOMPRESSIONTYPE                       = -2005531808  ' &H88760360
%DXFILEERR_BADFILE                                      = -2005531807  ' &H88760361
%DXFILEERR_PARSEERROR                                   = -2005531806  ' &H88760362
%DXFILEERR_NOTEMPLATE                                   = -2005531805  ' &H88760363
%DXFILEERR_BADARRAYSIZE                                 = -2005531804  ' &H88760364
%DXFILEERR_BADDATAREFERENCE                             = -2005531803  ' &H88760365
%DXFILEERR_INTERNALERROR                                = -2005531802  ' &H88760366
%DXFILEERR_NOMOREOBJECTS                                = -2005531801  ' &H88760367
%DXFILEERR_BADINTRINSICS                                = -2005531800  ' &H88760368
%DXFILEERR_NOMORESTREAMHANDLES                          = -2005531799  ' &H88760369
%DXFILEERR_NOMOREDATA                                   = -2005531798  ' &H8876036A
%DXFILEERR_BADCACHEFILE                                 = -2005531797  ' &H8876036B
%DXFILEERR_NOINTERNET                                   = -2005531796  ' &H8876036C

' ========================================================================================
' D3DVECTOR record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%D3DVECTOR_DEFINED)
%D3DVECTOR_DEFINED = 1

' // Size = 12 bytes
TYPE D3DVECTOR DWORD
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
   z AS SINGLE                                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DVECTOR2 record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%D3DVECTOR2_DEFINED)
%D3DVECTOR2_DEFINED = 1

TYPE D3DVECTOR2
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DVECTOR4 record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DVECTOR4_DEFINED)
%D3DVECTOR4_DEFINED = 1

TYPE D3DVECTOR4
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
   z AS SINGLE                                          ' VT_R4 <Single>
   w AS SINGLE                                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' RECT record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DXVB_RECT_DEFINED)
%DXVB_RECT_DEFINED = 1

TYPE DXVB_RECT
   Left   AS LONG                                       ' long
   Top    AS LONG                                       ' long
   Right  AS LONG                                       ' long
   Bottom AS LONG                                       ' long
END TYPE

#ENDIF

' ========================================================================================
' DXGUID record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DXGUID_DEFINED)
%DXGUID_DEFINED = 1

TYPE DXGUID
   data1 AS LONG                                        ' long
   data2 AS INTEGER                                     ' VT_I2 <Integer>
   data3 AS INTEGER                                     ' VT_I2 <Integer>
   data4 AS STRING * 8                                  ' %VT_CARRAY <VT_UI1 <Byte>>
END TYPE

#ENDIF

' ========================================================================================
' PALETTEENTRY record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DXVB_PALETTEENTRY_DEFINED)
%DXVB_PALETTEENTRY_DEFINED = 1

TYPE DXVB_PALETTEENTRY
   red   AS BYTE                                         ' VT_UI1 <Byte>
   green AS BYTE                                        ' VT_UI1 <Byte>
   blue  AS BYTE                                        ' VT_UI1 <Byte>
   flags AS BYTE                                        ' VT_UI1 <Byte>
END TYPE

#ENDIF

' ========================================================================================
' D3DCOLORVALUE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DCOLORVALUE_DEFINED)
%D3DCOLORVALUE_DEFINED = 1

' // Size = 16 bytes
TYPE D3DCOLORVALUE DWORD
   r AS SINGLE                                          ' VT_R4 <Single>
   g AS SINGLE                                          ' VT_R4 <Single>
   b AS SINGLE                                          ' VT_R4 <Single>
   a AS SINGLE                                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' POINT record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%DXVB_POINT_DEFINED)
%DXVB_POINT_DEFINED = 1

TYPE DXVB_POINT
   x AS LONG                                            ' long
   y AS LONG                                            ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DMATERIAL8 record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%D3DMATERIAL8_DEFINED)
%D3DMATERIAL8_DEFINED = 1

TYPE D3DMATERIAL8
   diffuse AS D3DCOLORVALUE                             ' D3DCOLORVALUE <record>
   ambient AS D3DCOLORVALUE                             ' D3DCOLORVALUE <record>
   specular AS D3DCOLORVALUE                            ' D3DCOLORVALUE <record>
   emissive AS D3DCOLORVALUE                            ' D3DCOLORVALUE <record>
   power AS SINGLE                                      ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DPLANE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DPLANE_DEFINED)
%D3DPLANE_DEFINED = 1

TYPE D3DPLANE
   a AS SINGLE                                          ' VT_R4 <Single>
   b AS SINGLE                                          ' VT_R4 <Single>
   c AS SINGLE                                          ' VT_R4 <Single>
   d AS SINGLE                                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DMATRIX record
' Number of members = 16
' ========================================================================================

#IF NOT %DEF(%D3DMATRIX_DEFINED)
%D3DMATRIX_DEFINED = 1

TYPE D3DMATRIX
   m11 AS SINGLE                                        ' VT_R4 <Single>
   m12 AS SINGLE                                        ' VT_R4 <Single>
   m13 AS SINGLE                                        ' VT_R4 <Single>
   m14 AS SINGLE                                        ' VT_R4 <Single>
   m21 AS SINGLE                                        ' VT_R4 <Single>
   m22 AS SINGLE                                        ' VT_R4 <Single>
   m23 AS SINGLE                                        ' VT_R4 <Single>
   m24 AS SINGLE                                        ' VT_R4 <Single>
   m31 AS SINGLE                                        ' VT_R4 <Single>
   m32 AS SINGLE                                        ' VT_R4 <Single>
   m33 AS SINGLE                                        ' VT_R4 <Single>
   m34 AS SINGLE                                        ' VT_R4 <Single>
   m41 AS SINGLE                                        ' VT_R4 <Single>
   m42 AS SINGLE                                        ' VT_R4 <Single>
   m43 AS SINGLE                                        ' VT_R4 <Single>
   m44 AS SINGLE                                        ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DVIEWPORT8 record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%D3DVIEWPORT8_DEFINED)
%D3DVIEWPORT8_DEFINED = 1

TYPE D3DVIEWPORT8
   x AS LONG                                            ' long
   y AS LONG                                            ' long
   Width AS LONG                                        ' long
   Height AS LONG                                       ' long
   MinZ AS SINGLE                                       ' VT_R4 <Single>
   MaxZ AS SINGLE                                       ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DADAPTER_IDENTIFIER8 record
' Number of members = 10
' ========================================================================================

#IF NOT %DEF(%D3DADAPTER_IDENTIFIER8_DEFINED)
%D3DADAPTER_IDENTIFIER8_DEFINED = 1

TYPE D3DADAPTER_IDENTIFIER8
   Driver AS STRING * 512                               ' %VT_CARRAY <VT_UI1 <Byte>>
   Description AS STRING * 512                          ' %VT_CARRAY <VT_UI1 <Byte>>
   DriverVersionLowPart AS LONG                         ' long
   DriverVersionHighPart AS LONG                        ' long
   VendorId AS LONG                                     ' long
   DeviceId AS LONG                                     ' long
   SubSysId AS LONG                                     ' long
   Revision AS LONG                                     ' long
   DeviceIdentifier AS DXGUID                           ' DXGUID <record>
   WHQLLevel AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DDISPLAYMODE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DDISPLAYMODE_DEFINED)
%D3DDISPLAYMODE_DEFINED = 1

TYPE D3DDISPLAYMODE
   Width AS LONG                                        ' int
   Height AS LONG                                       ' int
   RefreshRate AS LONG                                  ' int
   Format AS LONG                                       ' CONST_D3DFORMAT <enum>
END TYPE

#ENDIF

' ========================================================================================
' D3DCAPS8 record
' Number of members = 53
' ========================================================================================

#IF NOT %DEF(%D3DCAPS8_DEFINED)
%D3DCAPS8_DEFINED = 1

TYPE D3DCAPS8
   DeviceType AS LONG                                   ' long
   AdapterOrdinal AS LONG                               ' int
   Caps AS LONG                                         ' long
   Caps2 AS LONG                                        ' long
   Caps3 AS LONG                                        ' long
   PresentationIntervals AS LONG                        ' long
   CursorCaps AS LONG                                   ' long
   DevCaps AS LONG                                      ' long
   PrimitiveMiscCaps AS LONG                            ' long
   RasterCaps AS LONG                                   ' long
   ZCmpCaps AS LONG                                     ' long
   SrcBlendCaps AS LONG                                 ' long
   DestBlendCaps AS LONG                                ' long
   AlphaCmpCaps AS LONG                                 ' long
   ShadeCaps AS LONG                                    ' long
   TextureCaps AS LONG                                  ' long
   TextureFilterCaps AS LONG                            ' long
   CubeTextureFilterCaps AS LONG                        ' long
   VolumeTextureFilterCaps AS LONG                      ' long
   TextureAddressCaps AS LONG                           ' long
   VolumeTextureAddressCaps AS LONG                     ' long
   LineCaps AS LONG                                     ' long
   MaxTextureWidth AS LONG                              ' long
   MaxTextureHeight AS LONG                             ' long
   MaxVolumeExtent AS LONG                              ' long
   MaxTextureRepeat AS LONG                             ' long
   MaxTextureAspectRatio AS LONG                        ' long
   MaxAnisotropy AS LONG                                ' long
   MaxVertexW AS SINGLE                                 ' VT_R4 <Single>
   GuardBandLeft AS SINGLE                              ' VT_R4 <Single>
   GuardBandTop AS SINGLE                               ' VT_R4 <Single>
   GuardBandRight AS SINGLE                             ' VT_R4 <Single>
   GuardBandBottom AS SINGLE                            ' VT_R4 <Single>
   ExtentsAdjust AS SINGLE                              ' VT_R4 <Single>
   StencilCaps AS LONG                                  ' long
   FVFCaps AS LONG                                      ' long
   TextureOpCaps AS LONG                                ' long
   MaxTextureBlendStages AS LONG                        ' long
   MaxSimultaneousTextures AS LONG                      ' long
   VertexProcessingCaps AS LONG                         ' long
   MaxActiveLights AS LONG                              ' long
   MaxUserClipPlanes AS LONG                            ' long
   MaxVertexBlendMatrices AS LONG                       ' long
   MaxVertexBlendMatrixIndex AS LONG                    ' long
   MaxPointSize AS SINGLE                               ' VT_R4 <Single>
   MaxPrimitiveCount AS LONG                            ' long
   MaxVertexIndex AS LONG                               ' long
   MaxStreams AS LONG                                   ' long
   MaxStreamStride AS LONG                              ' long
   VertexShaderVersion AS LONG                          ' long
   MaxVertexShaderConst AS LONG                         ' long
   PixelShaderVersion AS LONG                           ' long
   MaxPixelShaderValue AS SINGLE                        ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DPRESENT_PARAMETERS record
' Number of members = 13
' ========================================================================================

#IF NOT %DEF(%D3DPRESENT_PARAMETERS_DEFINED)
%D3DPRESENT_PARAMETERS_DEFINED = 1

TYPE D3DPRESENT_PARAMETERS
   BackBufferWidth AS LONG                              ' int
   BackBufferHeight AS LONG                             ' int
   BackBufferFormat AS LONG                             ' CONST_D3DFORMAT <enum>
   BackBufferCount AS LONG                              ' int
   MultiSampleType AS LONG                              ' CONST_D3DMULTISAMPLE_TYPE <enum>
   SwapEffect AS LONG                                   ' CONST_D3DSWAPEFFECT <enum>
   hDeviceWindow AS LONG                                ' long
   Windowed AS LONG                                     ' long
   EnableAutoDepthStencil AS LONG                       ' long
   AutoDepthStencilFormat AS LONG                       ' CONST_D3DFORMAT <enum>
   flags AS LONG                                        ' long
   FullScreen_RefreshRateInHz AS LONG                   ' int
   FullScreen_PresentationInterval AS LONG              ' int
END TYPE

#ENDIF

' ========================================================================================
' D3DDEVICE_CREATION_PARAMETERS record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DDEVICE_CREATION_PARAMETERS_DEFINED)
%D3DDEVICE_CREATION_PARAMETERS_DEFINED = 1

TYPE D3DDEVICE_CREATION_PARAMETERS
   AdapterOrdinal AS LONG                               ' int
   DeviceType AS LONG                                   ' CONST_D3DDEVTYPE <enum>
   hFocusWindow AS LONG                                 ' long
   BehaviorFlags AS LONG                                ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DSURFACE_DESC record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%D3DSURFACE_DESC_DEFINED)
%D3DSURFACE_DESC_DEFINED = 1

TYPE D3DSURFACE_DESC
   Format AS LONG                                       ' CONST_D3DFORMAT <enum>
   Type AS LONG                                         ' CONST_D3DRESOURCETYPE <enum>
   Usage AS LONG                                        ' long
   Pool AS LONG                                         ' CONST_D3DPOOL <enum>
   Size AS LONG                                         ' int
   MultiSampleType AS LONG                              ' CONST_D3DMULTISAMPLE_TYPE <enum>
   Width AS LONG                                        ' int
   Height AS LONG                                       ' int
END TYPE

#ENDIF

' ========================================================================================
' D3DLOCKED_RECT record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%D3DLOCKED_RECT_DEFINED)
%D3DLOCKED_RECT_DEFINED = 1

TYPE D3DLOCKED_RECT
   Pitch AS LONG                                        ' int
   pBits AS LONG                                        ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DRASTER_STATUS record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%D3DRASTER_STATUS_DEFINED)
%D3DRASTER_STATUS_DEFINED = 1

TYPE D3DRASTER_STATUS
   InVBLANK AS LONG                                     ' long
   ScanLine AS LONG                                     ' int
END TYPE

#ENDIF

' ========================================================================================
' D3DGAMMARAMP record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%D3DGAMMARAMP_DEFINED)
%D3DGAMMARAMP_DEFINED = 1

TYPE D3DGAMMARAMP
   red (255) AS INTEGER                                 ' %VT_CARRAY <VT_I2 <Integer>>
   green (255) AS INTEGER                               ' %VT_CARRAY <VT_I2 <Integer>>
   blue (255) AS INTEGER                                ' %VT_CARRAY <VT_I2 <Integer>>
END TYPE

#ENDIF

' ========================================================================================
' D3DVOLUME_DESC record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%D3DVOLUME_DESC_DEFINED)
%D3DVOLUME_DESC_DEFINED = 1

TYPE D3DVOLUME_DESC
   Format AS LONG                                       ' CONST_D3DFORMAT <enum>
   Type AS LONG                                         ' CONST_D3DRESOURCETYPE <enum>
   Usage AS LONG                                        ' long
   Pool AS LONG                                         ' CONST_D3DPOOL <enum>
   Size AS LONG                                         ' int
   Width AS LONG                                        ' int
   Height AS LONG                                       ' int
   Depth AS LONG                                        ' int
END TYPE

#ENDIF

' ========================================================================================
' D3DLOCKED_BOX record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%D3DLOCKED_BOX_DEFINED)
%D3DLOCKED_BOX_DEFINED = 1

TYPE D3DLOCKED_BOX
   RowPitch AS LONG                                     ' int
   SlicePitch AS LONG                                   ' int
   pBits AS LONG                                        ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DBOX record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%D3DBOX_DEFINED)
%D3DBOX_DEFINED = 1

TYPE D3DBOX
   left AS LONG                                         ' int
   top AS LONG                                          ' int
   right AS LONG                                        ' int
   bottom AS LONG                                       ' int
   front AS LONG                                        ' int
   back AS LONG                                         ' int
END TYPE

#ENDIF

' ========================================================================================
' D3DVERTEXBUFFER_DESC record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%D3DVERTEXBUFFER_DESC_DEFINED)
%D3DVERTEXBUFFER_DESC_DEFINED = 1

TYPE D3DVERTEXBUFFER_DESC
   Format AS LONG                                       ' CONST_D3DFORMAT <enum>
   Type AS LONG                                         ' CONST_D3DRESOURCETYPE <enum>
   Usage AS LONG                                        ' long
   Pool AS LONG                                         ' CONST_D3DPOOL <enum>
   Size AS LONG                                         ' int
   FVF AS LONG                                          ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DINDEXBUFFER_DESC record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%D3DINDEXBUFFER_DESC_DEFINED)
%D3DINDEXBUFFER_DESC_DEFINED = 1

TYPE D3DINDEXBUFFER_DESC
   Format AS LONG                                       ' CONST_D3DFORMAT <enum>
   Type AS LONG                                         ' CONST_D3DRESOURCETYPE <enum>
   Usage AS LONG                                        ' long
   Pool AS LONG                                         ' CONST_D3DPOOL <enum>
   Size AS LONG                                         ' int
END TYPE

#ENDIF

' ========================================================================================
' D3DLIGHT8 record
' Number of members = 13
' ========================================================================================

#IF NOT %DEF(%D3DLIGHT8_DEFINED)
%D3DLIGHT8_DEFINED = 1

TYPE D3DLIGHT8
   Type AS LONG                                         ' CONST_D3DLIGHTTYPE <enum>
   diffuse AS D3DCOLORVALUE                             ' D3DCOLORVALUE <record>
   specular AS D3DCOLORVALUE                            ' D3DCOLORVALUE <record>
   ambient AS D3DCOLORVALUE                             ' D3DCOLORVALUE <record>
   Position AS D3DVECTOR                                ' D3DVECTOR <record>
   Direction AS D3DVECTOR                               ' D3DVECTOR <record>
   Range AS SINGLE                                      ' VT_R4 <Single>
   Falloff AS SINGLE                                    ' VT_R4 <Single>
   Attenuation0 AS SINGLE                               ' VT_R4 <Single>
   Attenuation1 AS SINGLE                               ' VT_R4 <Single>
   Attenuation2 AS SINGLE                               ' VT_R4 <Single>
   Theta AS SINGLE                                      ' VT_R4 <Single>
   Phi AS SINGLE                                        ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DCLIPSTATUS8 record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%D3DCLIPSTATUS8_DEFINED)
%D3DCLIPSTATUS8_DEFINED = 1

TYPE D3DCLIPSTATUS8
   ClipUnion AS LONG                                    ' long
   ClipIntersection AS LONG                             ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DRECT record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DRECT_DEFINED)
%D3DRECT_DEFINED = 1

' // Size = 16 bytes
TYPE D3DRECT DWORD
   x1 AS LONG                                           ' long
   y1 AS LONG                                           ' long
   x2 AS LONG                                           ' long
   y2 AS LONG                                           ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DTLVERTEX record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%D3DTLVERTEX_DEFINED)
%D3DTLVERTEX_DEFINED = 1

TYPE D3DTLVERTEX
   sx AS SINGLE                                         ' VT_R4 <Single>
   sy AS SINGLE                                         ' VT_R4 <Single>
   sz AS SINGLE                                         ' VT_R4 <Single>
   rhw AS SINGLE                                        ' VT_R4 <Single>
   color AS LONG                                        ' long
   specular AS LONG                                     ' long
   tu AS SINGLE                                         ' VT_R4 <Single>
   tv AS SINGLE                                         ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DLVERTEX record
' Number of members = 7
' ========================================================================================

#IF NOT %DEF(%D3DLVERTEX_DEFINED)
%D3DLVERTEX_DEFINED = 1

TYPE D3DLVERTEX
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
   z AS SINGLE                                          ' VT_R4 <Single>
   color AS LONG                                        ' long
   specular AS LONG                                     ' long
   tu AS SINGLE                                         ' VT_R4 <Single>
   tv AS SINGLE                                         ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DVERTEX record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%D3DVERTEX_DEFINED)
%D3DVERTEX_DEFINED = 1

TYPE D3DVERTEX
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
   z AS SINGLE                                          ' VT_R4 <Single>
   nx AS SINGLE                                         ' VT_R4 <Single>
   ny AS SINGLE                                         ' VT_R4 <Single>
   nz AS SINGLE                                         ' VT_R4 <Single>
   tu AS SINGLE                                         ' VT_R4 <Single>
   tv AS SINGLE                                         ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DTLVERTEX2 record
' Number of members = 10
' ========================================================================================

#IF NOT %DEF(%D3DTLVERTEX2_DEFINED)
%D3DTLVERTEX2_DEFINED = 1

TYPE D3DTLVERTEX2
   sx AS SINGLE                                         ' VT_R4 <Single>
   sy AS SINGLE                                         ' VT_R4 <Single>
   sz AS SINGLE                                         ' VT_R4 <Single>
   rhw AS SINGLE                                        ' VT_R4 <Single>
   color AS LONG                                        ' long
   specular AS LONG                                     ' long
   tu1 AS SINGLE                                        ' VT_R4 <Single>
   tv1 AS SINGLE                                        ' VT_R4 <Single>
   tu2 AS SINGLE                                        ' VT_R4 <Single>
   tv2 AS SINGLE                                        ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DLVERTEX2 record
' Number of members = 9
' ========================================================================================

#IF NOT %DEF(%D3DLVERTEX2_DEFINED)
%D3DLVERTEX2_DEFINED = 1

TYPE D3DLVERTEX2
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
   z AS SINGLE                                          ' VT_R4 <Single>
   color AS LONG                                        ' long
   specular AS LONG                                     ' long
   tu1 AS SINGLE                                        ' VT_R4 <Single>
   tv1 AS SINGLE                                        ' VT_R4 <Single>
   tu2 AS SINGLE                                        ' VT_R4 <Single>
   tv2 AS SINGLE                                        ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DVERTEX2 record
' Number of members = 10
' ========================================================================================

#IF NOT %DEF(%D3DVERTEX2_DEFINED)
%D3DVERTEX2_DEFINED = 1

TYPE D3DVERTEX2
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
   z AS SINGLE                                          ' VT_R4 <Single>
   nx AS SINGLE                                         ' VT_R4 <Single>
   ny AS SINGLE                                         ' VT_R4 <Single>
   nz AS SINGLE                                         ' VT_R4 <Single>
   tu1 AS SINGLE                                        ' VT_R4 <Single>
   tv1 AS SINGLE                                        ' VT_R4 <Single>
   tu2 AS SINGLE                                        ' VT_R4 <Single>
   tv2 AS SINGLE                                        ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DRANGE record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%D3DRANGE_DEFINED)
%D3DRANGE_DEFINED = 1

TYPE D3DRANGE
   Offset AS LONG                                       ' int
   Size AS LONG                                         ' int
END TYPE

#ENDIF

' ========================================================================================
' D3DRECTPATCH_INFO record
' Number of members = 7
' ========================================================================================

#IF NOT %DEF(%D3DRECTPATCH_INFO_DEFINED)
%D3DRECTPATCH_INFO_DEFINED = 1

TYPE D3DRECTPATCH_INFO
   StartVertexOffsetWidth AS LONG                       ' long
   StartVertexOffsetHeight AS LONG                      ' long
   Width AS LONG                                        ' long
   Height AS LONG                                       ' long
   Stride AS LONG                                       ' long
   Basis AS LONG                                        ' CONST_D3DBASISTYPE <enum>
   Order AS LONG                                        ' CONST_D3DORDERTYPE <enum>
END TYPE

#ENDIF

' ========================================================================================
' D3DTRIPATCH_INFO record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DTRIPATCH_INFO_DEFINED)
%D3DTRIPATCH_INFO_DEFINED = 1

TYPE D3DTRIPATCH_INFO
   StartVertexOffsetWidth AS LONG                       ' long
   NumVertices AS LONG                                  ' long
   Basis AS LONG                                        ' CONST_D3DBASISTYPE <enum>
   Order AS LONG                                        ' CONST_D3DORDERTYPE <enum>
END TYPE

#ENDIF

' ========================================================================================
' D3DLINEPATTERN record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%D3DLINEPATTERN_DEFINED)
%D3DLINEPATTERN_DEFINED = 1

TYPE D3DLINEPATTERN
   RepeatFactor AS INTEGER                              ' VT_I2 <Integer>
   LinePattern AS INTEGER                               ' VT_I2 <Integer>
END TYPE

#ENDIF

' ========================================================================================
' WAVEFORMATEX record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%DXVB_WAVEFORMATEX_DEFINED)
%DXVB_WAVEFORMATEX_DEFINED = 1

TYPE DXVB_WAVEFORMATEX
   nFormatTag AS INTEGER                                ' VT_I2 <Integer>
   nChannels AS INTEGER                                 ' VT_I2 <Integer>
   lSamplesPerSec AS LONG                               ' long
   lAvgBytesPerSec AS LONG                              ' long
   nBlockAlign AS INTEGER                               ' VT_I2 <Integer>
   nBitsPerSample AS INTEGER                            ' VT_I2 <Integer>
   nSize AS INTEGER                                     ' VT_I2 <Integer>
   lExtra AS LONG                                       ' long
END TYPE

#ENDIF

' ========================================================================================
' DSBUFFERDESC record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DSBUFFERDESC_DEFINED)
%DSBUFFERDESC_DEFINED = 1

TYPE DSBUFFERDESC
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DSBCAPSFLAGS <enum>
   lBufferBytes AS LONG                                 ' long
   lReserved AS LONG                                    ' long
   fxFormat AS DXVB_WAVEFORMATEX                        ' WAVEFORMATEX <record>
   guid3DAlgorithm AS DWORD                             ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DS3DBUFFER record
' Number of members = 10
' ========================================================================================

#IF NOT %DEF(%DS3DBUFFER_DEFINED)
%DS3DBUFFER_DEFINED = 1

TYPE DS3DBUFFER
   lSize AS LONG                                        ' long
   vPosition AS D3DVECTOR                               ' D3DVECTOR <record>
   vVelocity AS D3DVECTOR                               ' D3DVECTOR <record>
   lInsideConeAngle AS LONG                             ' long
   lOutsideConeAngle AS LONG                            ' long
   vConeOrientation AS D3DVECTOR                        ' D3DVECTOR <record>
   lConeOutsideVolume AS LONG                           ' long
   minDistance AS SINGLE                                ' VT_R4 <Single>
   maxDistance AS SINGLE                                ' VT_R4 <Single>
   lMode AS LONG                                        ' CONST_DS3DMODEFLAGS <enum>
END TYPE

#ENDIF

' ========================================================================================
' DSBCAPS record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DSBCAPS_DEFINED)
%DSBCAPS_DEFINED = 1

TYPE DSBCAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DSBCAPSFLAGS <enum>
   lBufferBytes AS LONG                                 ' long
   lUnlockTransferRate AS LONG                          ' long
   lPlayCpuOverhead AS LONG                             ' long
END TYPE

#ENDIF

' ========================================================================================
' DSCURSORS record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%DSCURSORS_DEFINED)
%DSCURSORS_DEFINED = 1

TYPE DSCURSORS
   lPlay AS LONG                                        ' long
   lWrite AS LONG                                       ' long
END TYPE

#ENDIF

' ========================================================================================
' DSBPOSITIONNOTIFY record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%DSBPOSITIONNOTIFY_DEFINED)
%DSBPOSITIONNOTIFY_DEFINED = 1

TYPE DSBPOSITIONNOTIFY
   lOffset AS LONG                                      ' long
   hEventNotify AS LONG                                 ' long
END TYPE

#ENDIF

' ========================================================================================
' DSEFFECTDESC record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DSEFFECTDESC_DEFINED)
%DSEFFECTDESC_DEFINED = 1

TYPE DSEFFECTDESC
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' long
   guidDSFXClass AS DWORD                               ' VT_BSTR
   lReserved AS LONG                                    ' long
   lReserved2 AS LONG                                   ' long
END TYPE

#ENDIF

' ========================================================================================
' DSCAPS record
' Number of members = 24
' ========================================================================================

#IF NOT %DEF(%DSCAPS_DEFINED)
%DSCAPS_DEFINED = 1

TYPE DSCAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DSCAPSFLAGS <enum>
   lMinSecondarySampleRate AS LONG                      ' long
   lMaxSecondarySampleRate AS LONG                      ' long
   lPrimaryBuffers AS LONG                              ' long
   lMaxHwMixingAllBuffers AS LONG                       ' long
   lMaxHwMixingStaticBuffers AS LONG                    ' long
   lMaxHwMixingStreamingBuffers AS LONG                 ' long
   lFreeHwMixingAllBuffers AS LONG                      ' long
   lFreeHwMixingStaticBuffers AS LONG                   ' long
   lFreeHwMixingStreamingBuffers AS LONG                ' long
   lMaxHw3DAllBuffers AS LONG                           ' long
   lMaxHw3DStaticBuffers AS LONG                        ' long
   lMaxHw3DStreamingBuffers AS LONG                     ' long
   lFreeHw3DAllBuffers AS LONG                          ' long
   lFreeHw3DStaticBuffers AS LONG                       ' long
   lFreeHw3DStreamingBuffers AS LONG                    ' long
   lTotalHwMemBytes AS LONG                             ' long
   lFreeHwMemBytes AS LONG                              ' long
   lMaxContigFreeHwMemBytes AS LONG                     ' long
   lUnlockTransferRateHwBuffers AS LONG                 ' long
   lPlayCpuOverheadSwBuffers AS LONG                    ' long
   lReserved1 AS LONG                                   ' long
   lReserved2 AS LONG                                   ' long
END TYPE

#ENDIF

' ========================================================================================
' DS3DLISTENER record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%DS3DLISTENER_DEFINED)
%DS3DLISTENER_DEFINED = 1

TYPE DS3DLISTENER
   lSize AS LONG                                        ' long
   vPosition AS D3DVECTOR                               ' D3DVECTOR <record>
   vVelocity AS D3DVECTOR                               ' D3DVECTOR <record>
   vOrientFront AS D3DVECTOR                            ' D3DVECTOR <record>
   vOrientTop AS D3DVECTOR                              ' D3DVECTOR <record>
   distanceFactor AS SINGLE                             ' VT_R4 <Single>
   rolloffFactor AS SINGLE                              ' VT_R4 <Single>
   dopplerFactor AS SINGLE                              ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' DSCBUFFERDESC record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DSCBUFFERDESC_DEFINED)
%DSCBUFFERDESC_DEFINED = 1

TYPE DSCBUFFERDESC
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DSCBCAPSFLAGS <enum>
   lBufferBytes AS LONG                                 ' long
   lReserved AS LONG                                    ' long
   fxFormat AS DXVB_WAVEFORMATEX                        ' WAVEFORMATEX <record>
   guid3DAlgorithm AS DWORD                             ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DSCBCAPS record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DSCBCAPS_DEFINED)
%DSCBCAPS_DEFINED = 1

TYPE DSCBCAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DSCBCAPSFLAGS <enum>
   lBufferBytes AS LONG                                 ' long
   lReserved AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DSCCAPS record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DSCCAPS_DEFINED)
%DSCCAPS_DEFINED = 1

TYPE DSCCAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DSCCAPSFLAGS <enum>
   lFormats AS LONG                                     ' CONST_WAVEFORMATFLAGS <enum>
   lChannels AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DSFXGARGLE record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%DSFXGARGLE_DEFINED)
%DSFXGARGLE_DEFINED = 1

TYPE DSFXGARGLE
   lRateHz AS LONG                                      ' CONST_DSFXGARGLE_RATEHZ <enum>
   lWaveShape AS LONG                                   ' CONST_DSFXGARGLE_WAVE <enum>
END TYPE

#ENDIF

' ========================================================================================
' DSFXCHORUS record
' Number of members = 7
' ========================================================================================

#IF NOT %DEF(%DSFXCHORUS_DEFINED)
%DSFXCHORUS_DEFINED = 1

TYPE DSFXCHORUS
   fWetDryMix AS SINGLE                                 ' VT_R4 <Single>
   fDepth AS SINGLE                                     ' VT_R4 <Single>
   fFeedback AS SINGLE                                  ' VT_R4 <Single>
   fFrequency AS SINGLE                                 ' VT_R4 <Single>
   lWaveform AS LONG                                    ' CONST_DSFX_WAVE <enum>
   fDelay AS SINGLE                                     ' VT_R4 <Single>
   lPhase AS LONG                                       ' CONST_DSFX_PHASE <enum>
END TYPE

#ENDIF

' ========================================================================================
' DSFXFLANGER record
' Number of members = 7
' ========================================================================================

#IF NOT %DEF(%DSFXFLANGER_DEFINED)
%DSFXFLANGER_DEFINED = 1

TYPE DSFXFLANGER
   fWetDryMix AS SINGLE                                 ' VT_R4 <Single>
   fDepth AS SINGLE                                     ' VT_R4 <Single>
   fFeedback AS SINGLE                                  ' VT_R4 <Single>
   fFrequency AS SINGLE                                 ' VT_R4 <Single>
   lWaveform AS LONG                                    ' CONST_DSFX_WAVE <enum>
   fDelay AS SINGLE                                     ' VT_R4 <Single>
   lPhase AS LONG                                       ' CONST_DSFX_PHASE <enum>
END TYPE

#ENDIF

' ========================================================================================
' DSFXECHO record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DSFXECHO_DEFINED)
%DSFXECHO_DEFINED = 1

TYPE DSFXECHO
   fWetDryMix AS SINGLE                                 ' VT_R4 <Single>
   fFeedback AS SINGLE                                  ' VT_R4 <Single>
   fLeftDelay AS SINGLE                                 ' VT_R4 <Single>
   fRightDelay AS SINGLE                                ' VT_R4 <Single>
   lPanDelay AS LONG                                    ' CONST_DSFX_PANDELAY <enum>
END TYPE

#ENDIF

' ========================================================================================
' DSFXDISTORTION record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DSFXDISTORTION_DEFINED)
%DSFXDISTORTION_DEFINED = 1

TYPE DSFXDISTORTION
   fGain AS SINGLE                                      ' VT_R4 <Single>
   fEdge AS SINGLE                                      ' VT_R4 <Single>
   fPostEQCenterFrequency AS SINGLE                     ' VT_R4 <Single>
   fPostEQBandwidth AS SINGLE                           ' VT_R4 <Single>
   fPreLowpassCutoff AS SINGLE                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' DSFXCOMPRESSOR record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DSFXCOMPRESSOR_DEFINED)
%DSFXCOMPRESSOR_DEFINED = 1

TYPE DSFXCOMPRESSOR
   fGain AS SINGLE                                      ' VT_R4 <Single>
   fAttack AS SINGLE                                    ' VT_R4 <Single>
   fRelease AS SINGLE                                   ' VT_R4 <Single>
   fThreshold AS SINGLE                                 ' VT_R4 <Single>
   fRatio AS SINGLE                                     ' VT_R4 <Single>
   fPredelay AS SINGLE                                  ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' DSFXI3DL2REVERB record
' Number of members = 12
' ========================================================================================

#IF NOT %DEF(%DSFXI3DL2REVERB_DEFINED)
%DSFXI3DL2REVERB_DEFINED = 1

TYPE DSFXI3DL2REVERB
   lRoom AS LONG                                        ' long
   lRoomHF AS LONG                                      ' long
   fRoomRolloffFactor AS SINGLE                         ' VT_R4 <Single>
   fDecayTime AS SINGLE                                 ' VT_R4 <Single>
   fDecayHFRatio AS SINGLE                              ' VT_R4 <Single>
   lReflections AS LONG                                 ' long
   fReflectionsDelay AS SINGLE                          ' VT_R4 <Single>
   lReverb AS LONG                                      ' long
   fReverbDelay AS SINGLE                               ' VT_R4 <Single>
   fDiffusion AS SINGLE                                 ' VT_R4 <Single>
   fDensity AS SINGLE                                   ' VT_R4 <Single>
   fHFReference AS SINGLE                               ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' DSFXPARAMEQ record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DSFXPARAMEQ_DEFINED)
%DSFXPARAMEQ_DEFINED = 1

TYPE DSFXPARAMEQ
   fCenter AS SINGLE                                    ' VT_R4 <Single>
   fBandwidth AS SINGLE                                 ' VT_R4 <Single>
   fGain AS SINGLE                                      ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' DSFXWAVESREVERB record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DSFXWAVESREVERB_DEFINED)
%DSFXWAVESREVERB_DEFINED = 1

TYPE DSFXWAVESREVERB
   fInGain AS SINGLE                                    ' VT_R4 <Single>
   fReverbMix AS SINGLE                                 ' VT_R4 <Single>
   fReverbTime AS SINGLE                                ' VT_R4 <Single>
   fHighFreqRTRatio AS SINGLE                           ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' DMUS_NOTIFICATION_PMSG record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%DMUS_NOTIFICATION_PMSG_DEFINED)
%DMUS_NOTIFICATION_PMSG_DEFINED = 1

TYPE DMUS_NOTIFICATION_PMSG
   lFlags AS LONG                                       ' long
   ctTime AS LONG                                       ' long
   mtTime AS LONG                                       ' long
   lNotificationType AS LONG                            ' long
   lNotificationOption AS LONG                          ' long
   lField1 AS LONG                                      ' long
   lField2 AS LONG                                      ' long
   User AS DWORD                                        ' VT_UNKNOWN <IUnknown>
END TYPE

#ENDIF

' ========================================================================================
' DMUS_TIMESIGNATURE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DMUS_TIMESIGNATURE_DEFINED)
%DMUS_TIMESIGNATURE_DEFINED = 1

TYPE DMUS_TIMESIGNATURE
   mtTime AS LONG                                       ' long
   beatsPerMeasure AS BYTE                              ' VT_UI1 <Byte>
   beat AS BYTE                                         ' VT_UI1 <Byte>
   gridsPerBeat AS INTEGER                              ' VT_I2 <Integer>
END TYPE

#ENDIF

' ========================================================================================
' DMUS_NOTE_PMSG record
' Number of members = 15
' ========================================================================================

#IF NOT %DEF(%DMUS_NOTE_PMSG_DEFINED)
%DMUS_NOTE_PMSG_DEFINED = 1

TYPE DMUS_NOTE_PMSG
   mtDuration AS LONG                                   ' long
   musicValue AS INTEGER                                ' VT_I2 <Integer>
   measure AS INTEGER                                   ' VT_I2 <Integer>
   Offset AS INTEGER                                    ' VT_I2 <Integer>
   beat AS BYTE                                         ' VT_UI1 <Byte>
   grid AS BYTE                                         ' VT_UI1 <Byte>
   velocity AS BYTE                                     ' VT_UI1 <Byte>
   flags AS BYTE                                        ' VT_UI1 <Byte>
   timeRange AS BYTE                                    ' VT_UI1 <Byte>
   durRange AS BYTE                                     ' VT_UI1 <Byte>
   velRange AS BYTE                                     ' VT_UI1 <Byte>
   playModeFlags AS BYTE                                ' VT_UI1 <Byte>
   subChordLevel AS BYTE                                ' VT_UI1 <Byte>
   midiValue AS BYTE                                    ' VT_UI1 <Byte>
   transpose AS INTEGER                                 ' VT_I2 <Integer>
END TYPE

#ENDIF

' ========================================================================================
' DMUS_CURVE_PMSG record
' Number of members = 16
' ========================================================================================

#IF NOT %DEF(%DMUS_CURVE_PMSG_DEFINED)
%DMUS_CURVE_PMSG_DEFINED = 1

TYPE DMUS_CURVE_PMSG
   mtDuration AS LONG                                   ' long
   mtOriginalStart AS LONG                              ' long
   mtResetDuration AS LONG                              ' long
   startValue AS INTEGER                                ' VT_I2 <Integer>
   endValue AS INTEGER                                  ' VT_I2 <Integer>
   resetValue AS INTEGER                                ' VT_I2 <Integer>
   measure AS INTEGER                                   ' VT_I2 <Integer>
   Offset AS INTEGER                                    ' VT_I2 <Integer>
   beat AS BYTE                                         ' VT_UI1 <Byte>
   grid AS BYTE                                         ' VT_UI1 <Byte>
   Type AS BYTE                                         ' VT_UI1 <Byte>
   curveShape AS BYTE                                   ' VT_UI1 <Byte>
   ccData AS BYTE                                       ' VT_UI1 <Byte>
   flags AS BYTE                                        ' VT_UI1 <Byte>
   ParamType AS INTEGER                                 ' VT_I2 <Integer>
   MergeIndex AS INTEGER                                ' VT_I2 <Integer>
END TYPE

#ENDIF

' ========================================================================================
' DMUS_AUDIOPARAMS record
' Number of members = 7
' ========================================================================================

#IF NOT %DEF(%DMUS_AUDIOPARAMS_DEFINED)
%DMUS_AUDIOPARAMS_DEFINED = 1

TYPE DMUS_AUDIOPARAMS
   dwSize AS LONG                                       ' long
   fInitNow AS INTEGER                                  ' VT_BOOL <Integer>
   lValidData AS LONG                                   ' CONST_DMUS_AUDIOPARAMS <enum>
   lFeatures AS LONG                                    ' CONST_DMUS_AUDIO <enum>
   lVoices AS LONG                                      ' long
   lSampleRate AS LONG                                  ' long
   clsidDefaultSynth AS DWORD                           ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DIDEVCAPS record
' Number of members = 11
' ========================================================================================

#IF NOT %DEF(%DIDEVCAPS_DEFINED)
%DIDEVCAPS_DEFINED = 1

TYPE DIDEVCAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DIDEVCAPSFLAGS <enum>
   lDevType AS LONG                                     ' long
   lAxes AS LONG                                        ' long
   lButtons AS LONG                                     ' long
   lPOVs AS LONG                                        ' long
   lFFSamplePeriod AS LONG                              ' long
   lFFMinTimeResolution AS LONG                         ' long
   lFirmwareRevision AS LONG                            ' long
   lHardwareRevision AS LONG                            ' long
   lDriverVersion AS LONG                               ' long
END TYPE

#ENDIF

' ========================================================================================
' DIDEVICEOBJECTDATA record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DIDEVICEOBJECTDATA_DEFINED)
%DIDEVICEOBJECTDATA_DEFINED = 1

TYPE DIDEVICEOBJECTDATA
   lOfs AS LONG                                         ' long
   lData AS LONG                                        ' long
   lTimeStamp AS LONG                                   ' long
   lSequence AS LONG                                    ' long
   lUserData AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DIKEYBOARDSTATE record
' Number of members = 1
' ========================================================================================

#IF NOT %DEF(%DIKEYBOARDSTATE_DEFINED)
%DIKEYBOARDSTATE_DEFINED = 1

TYPE DIKEYBOARDSTATE
   key (255) AS BYTE                                    ' %VT_CARRAY <VT_UI1 <Byte>>
END TYPE

#ENDIF

' ========================================================================================
' DIMOUSESTATE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DIMOUSESTATE_DEFINED)
%DIMOUSESTATE_DEFINED = 1

TYPE DIMOUSESTATE
   lX AS LONG                                           ' long
   lY AS LONG                                           ' long
   lZ AS LONG                                           ' long
   Buttons (3) AS BYTE                                  ' %VT_CARRAY <VT_UI1 <Byte>>
END TYPE

#ENDIF

' ========================================================================================
' DIMOUSESTATE2 record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DIMOUSESTATE2_DEFINED)
%DIMOUSESTATE2_DEFINED = 1

TYPE DIMOUSESTATE2
   lX AS LONG                                           ' long
   lY AS LONG                                           ' long
   lZ AS LONG                                           ' long
   Buttons (7) AS BYTE                                  ' %VT_CARRAY <VT_UI1 <Byte>>
END TYPE

#ENDIF

' ========================================================================================
' DIJOYSTATE record
' Number of members = 9
' ========================================================================================

#IF NOT %DEF(%DIJOYSTATE_DEFINED)
%DIJOYSTATE_DEFINED = 1

TYPE DIJOYSTATE
   x AS LONG                                            ' long
   y AS LONG                                            ' long
   z AS LONG                                            ' long
   rx AS LONG                                           ' long
   ry AS LONG                                           ' long
   rz AS LONG                                           ' long
   slider (1) AS LONG                                   ' %VT_CARRAY <VT_I4 <Long>>
   POV (3) AS LONG                                      ' %VT_CARRAY <VT_I4 <Long>>
   Buttons (31) AS BYTE                                 ' %VT_CARRAY <VT_UI1 <Byte>>
END TYPE

#ENDIF

' ========================================================================================
' DIJOYSTATE2 record
' Number of members = 30
' ========================================================================================

#IF NOT %DEF(%DIJOYSTATE2_DEFINED)
%DIJOYSTATE2_DEFINED = 1

TYPE DIJOYSTATE2
   x AS LONG                                            ' long
   y AS LONG                                            ' long
   z AS LONG                                            ' long
   rx AS LONG                                           ' long
   ry AS LONG                                           ' long
   rz AS LONG                                           ' long
   slider (1) AS LONG                                   ' %VT_CARRAY <VT_I4 <Long>>
   POV (3) AS LONG                                      ' %VT_CARRAY <VT_I4 <Long>>
   Buttons (127) AS BYTE                                ' %VT_CARRAY <VT_UI1 <Byte>>
   vx AS LONG                                           ' long
   vy AS LONG                                           ' long
   vz AS LONG                                           ' long
   vrx AS LONG                                          ' long
   vry AS LONG                                          ' long
   vrz AS LONG                                          ' long
   vslider (1) AS LONG                                  ' %VT_CARRAY <VT_I4 <Long>>
   ax AS LONG                                           ' long
   ay AS LONG                                           ' long
   az AS LONG                                           ' long
   arx AS LONG                                          ' long
   ary AS LONG                                          ' long
   arz AS LONG                                          ' long
   aslider (1) AS LONG                                  ' %VT_CARRAY <VT_I4 <Long>>
   fx AS LONG                                           ' long
   fy AS LONG                                           ' long
   fz AS LONG                                           ' long
   frx AS LONG                                          ' long
   fry AS LONG                                          ' long
   frz AS LONG                                          ' long
   fslider (1) AS LONG                                  ' %VT_CARRAY <VT_I4 <Long>>
END TYPE

#ENDIF

' ========================================================================================
' DIDATAFORMAT record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DIDATAFORMAT_DEFINED)
%DIDATAFORMAT_DEFINED = 1

TYPE DIDATAFORMAT
   lSize AS LONG                                        ' long
   lObjSize AS LONG                                     ' long
   lFlags AS LONG                                       ' CONST_DIDATAFORMATFLAGS <enum>
   dataSize AS LONG                                     ' long
   numObjs AS LONG                                      ' long
   pData AS LONG                                        ' long
END TYPE

#ENDIF

' ========================================================================================
' DIOBJECTDATAFORMAT record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DIOBJECTDATAFORMAT_DEFINED)
%DIOBJECTDATAFORMAT_DEFINED = 1

TYPE DIOBJECTDATAFORMAT
   strGuid AS DWORD                                     ' VT_BSTR
   lOfs AS LONG                                         ' long
   lType AS LONG                                        ' CONST_DIDFTFLAGS <enum>
   lFlags AS LONG                                       ' CONST_DIDEVICEOBJINSTANCEFLAGS <enum>
END TYPE

#ENDIF

' ========================================================================================
' DIRAMPFORCE record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%DIRAMPFORCE_DEFINED)
%DIRAMPFORCE_DEFINED = 1

TYPE DIRAMPFORCE
   lRangeStart AS LONG                                  ' long
   lRangeEnd AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DIPERIODICFORCE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DIPERIODICFORCE_DEFINED)
%DIPERIODICFORCE_DEFINED = 1

TYPE DIPERIODICFORCE
   lMagnitude AS LONG                                   ' long
   lOffset AS LONG                                      ' long
   lPhase AS LONG                                       ' long
   lPeriod AS LONG                                      ' long
END TYPE

#ENDIF

' ========================================================================================
' DICONSTANTFORCE record
' Number of members = 1
' ========================================================================================

#IF NOT %DEF(%DICONSTANTFORCE_DEFINED)
%DICONSTANTFORCE_DEFINED = 1

TYPE DICONSTANTFORCE
   lMagnitude AS LONG                                   ' long
END TYPE

#ENDIF

' ========================================================================================
' DICONDITION record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DICONDITION_DEFINED)
%DICONDITION_DEFINED = 1

TYPE DICONDITION
   lOffset AS LONG                                      ' long
   lPositiveCoefficient AS LONG                         ' long
   lNegativeCoefficient AS LONG                         ' long
   lPositiveSaturation AS LONG                          ' long
   lNegativeSaturation AS LONG                          ' long
   lDeadBand AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DIENVELOPE record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DIENVELOPE_DEFINED)
%DIENVELOPE_DEFINED = 1

TYPE DIENVELOPE
   lSize AS LONG                                        ' long
   lAttackLevel AS LONG                                 ' long
   lAttackTime AS LONG                                  ' long
   lFadeLevel AS LONG                                   ' long
   lFadeTime AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DIAXISOFFSETS_CDESC record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%DIAXISOFFSETS_CDESC_DEFINED)
%DIAXISOFFSETS_CDESC_DEFINED = 1

TYPE DIAXISOFFSETS_CDESC
   x AS LONG                                            ' long
   y AS LONG                                            ' long
END TYPE

#ENDIF

' ========================================================================================
' DIEFFECT record
' Number of members = 25
' ========================================================================================

#IF NOT %DEF(%DIEFFECT_DEFINED)
%DIEFFECT_DEFINED = 1

TYPE DIEFFECT
   dwSize AS LONG                                       ' long
   lFlags AS LONG                                       ' long
   lDuration AS LONG                                    ' long
   lSamplePeriod AS LONG                                ' long
   lGain AS LONG                                        ' long
   lTriggerButton AS LONG                               ' long
   lTriggerRepeatInterval AS LONG                       ' long
   lAxes AS LONG                                        ' long
   lprgdwAxes AS LONG                                   ' long
   lprglDirection AS LONG                               ' long
   lpEnvelope AS LONG                                   ' long
   cbTypeSpecificParams AS LONG                         ' long
   lpvTypeSpecificParams AS LONG                        ' long
   lStartDelay AS LONG                                  ' long
   x AS LONG                                            ' long
   y AS LONG                                            ' long
   rampForce AS DIRAMPFORCE                             ' DIRAMPFORCE <record>
   periodicForce AS DIPERIODICFORCE                     ' DIPERIODICFORCE <record>
   constantForce AS DICONSTANTFORCE                     ' DICONSTANTFORCE <record>
   conditionX AS DICONDITION                            ' DICONDITION <record>
   conditionY AS DICONDITION                            ' DICONDITION <record>
   conditionFlags AS LONG                               ' CONST_DICONDITIONFLAGS <enum>
   bUseEnvelope AS LONG                                 ' long
   envelope AS DIENVELOPE                               ' DIENVELOPE <record>
   axisOffsets AS DIAXISOFFSETS_CDESC                   ' DIAXISOFFSETS_CDESC <record>
END TYPE

#ENDIF

' ========================================================================================
' DIACTION record
' Number of members = 7
' ========================================================================================

#IF NOT %DEF(%DIACTION_DEFINED)
%DIACTION_DEFINED = 1

TYPE DIACTION
   lAppData AS LONG                                     ' long
   lSemantic AS LONG                                    ' long
   lFlags AS LONG                                       ' long
   ActionName AS DWORD                                  ' VT_BSTR
   guidInstance AS DXGUID                               ' DXGUID <record>
   lObjId AS LONG                                       ' long
   lHow AS LONG                                         ' long
END TYPE

#ENDIF

' ========================================================================================
' DIACTIONFORMAT record
' Number of members = 10
' ========================================================================================

#IF NOT %DEF(%DIACTIONFORMAT_DEFINED)
%DIACTIONFORMAT_DEFINED = 1

TYPE DIACTIONFORMAT
   lActionSize AS LONG                                  ' long
   lDataSize AS LONG                                    ' long
   ActionMapName AS DWORD                               ' VT_BSTR
   guidActionMap AS DWORD                               ' VT_BSTR
   lGenre AS LONG                                       ' long
   lAxisMin AS LONG                                     ' long
   lAxisMax AS LONG                                     ' long
   lBufferSize AS LONG                                  ' long
   lActionCount AS LONG                                 ' long
   ActionArray AS DIACTION PTR                          ' *DIACTION
END TYPE

#ENDIF

' ========================================================================================
' DIDEVICEIMAGEINFO record
' Number of members = 9
' ========================================================================================

#IF NOT %DEF(%DIDEVICEIMAGEINFO_DEFINED)
%DIDEVICEIMAGEINFO_DEFINED = 1

TYPE DIDEVICEIMAGEINFO
   ImagePath AS DWORD                                   ' VT_BSTR
   flags AS LONG                                        ' long
   ViewID AS LONG                                       ' long
   OverlayRect AS DXVB_RECT                             ' RECT <record>
   ObjId AS LONG                                        ' long
   ValidPts AS LONG                                     ' long
   CalloutLine (4) AS DXVB_POINT                        ' %VT_CARRAY <POINT>
   CalloutRect AS DXVB_RECT                             ' RECT <record>
   TextAlign AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DIDEVICEIMAGEINFOHEADER record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DIDEVICEIMAGEINFOHEADER_DEFINED)
%DIDEVICEIMAGEINFOHEADER_DEFINED = 1

TYPE DIDEVICEIMAGEINFOHEADER
   Views AS LONG                                        ' long
   Buttons AS LONG                                      ' long
   Axes AS LONG                                         ' long
   POVs AS LONG                                         ' long
   ImageCount AS LONG                                   ' long
   Images AS DIDEVICEIMAGEINFO PTR                      ' *DIDEVICEIMAGEINFO
END TYPE

#ENDIF

' ========================================================================================
' DICOLORSET record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%DICOLORSET_DEFINED)
%DICOLORSET_DEFINED = 1

TYPE DICOLORSET
   cTextFore AS LONG                                    ' long
   cTextHighlight AS LONG                               ' long
   cCalloutLine AS LONG                                 ' long
   cCalloutHighlight AS LONG                            ' long
   cBorder AS LONG                                      ' long
   cControlFill AS LONG                                 ' long
   cHighlightFill AS LONG                               ' long
   cAreaFill AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DICONFIGUREDEVICESPARAMS record
' Number of members = 7
' ========================================================================================

#IF NOT %DEF(%DICONFIGUREDEVICESPARAMS_DEFINED)
%DICONFIGUREDEVICESPARAMS_DEFINED = 1

TYPE DICONFIGUREDEVICESPARAMS
   UserCount AS LONG                                    ' long
   UserNames AS STRING PTR                              ' *VT_BSTR
   FormatCount AS LONG                                  ' long
   ActionFormats AS DIACTIONFORMAT PTR                  ' *DIACTIONFORMAT
   hwnd AS LONG                                         ' long
   dics AS DICOLORSET                                   ' DICOLORSET <record>
   DDSTarget AS DWORD                                   ' VT_UNKNOWN <IUnknown>
END TYPE

#ENDIF

' ========================================================================================
' DIPROPRANGE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DIPROPRANGE_DEFINED)
%DIPROPRANGE_DEFINED = 1

TYPE DIPROPRANGE
   lObj AS LONG                                         ' long
   lHow AS LONG                                         ' long
   lMin AS LONG                                         ' long
   lMax AS LONG                                         ' long
END TYPE

#ENDIF

' ========================================================================================
' DIPROPSTRING record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DIPROPSTRING_DEFINED)
%DIPROPSTRING_DEFINED = 1

TYPE DIPROPSTRING
   lObj AS LONG                                         ' long
   lHow AS LONG                                         ' long
   PropString AS DWORD                                  ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DIPROPGUIDANDPATH record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DIPROPGUIDANDPATH_DEFINED)
%DIPROPGUIDANDPATH_DEFINED = 1

TYPE DIPROPGUIDANDPATH
   lObj AS LONG                                         ' long
   lHow AS LONG                                         ' long
   guid AS DWORD                                        ' VT_BSTR
   Path AS DWORD                                        ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DIPROPLONG record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DIPROPLONG_DEFINED)
%DIPROPLONG_DEFINED = 1

TYPE DIPROPLONG
   lObj AS LONG                                         ' long
   lHow AS LONG                                         ' long
   lData AS LONG                                        ' long
END TYPE

#ENDIF

' ========================================================================================
' CPOINT record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%CPOINT_DEFINED)
%CPOINT_DEFINED = 1

TYPE CPOINT
   lp AS LONG                                           ' long
   dwLog AS LONG                                        ' long
END TYPE

#ENDIF

' ========================================================================================
' DIPROPCPOINTS record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DIPROPCPOINTS_DEFINED)
%DIPROPCPOINTS_DEFINED = 1

TYPE DIPROPCPOINTS
   lObj AS LONG                                         ' long
   lHow AS LONG                                         ' long
   dwCPointsNum AS LONG                                 ' long
   cp (7) AS CPOINT                                     ' %VT_CARRAY <CPOINT>
END TYPE

#ENDIF

' ========================================================================================
' DIPROPPOINTER record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DIPROPPOINTER_DEFINED)
%DIPROPPOINTER_DEFINED = 1

TYPE DIPROPPOINTER
   lObj AS LONG                                         ' long
   lHow AS LONG                                         ' long
   uData AS LONG                                        ' long
END TYPE

#ENDIF

' ========================================================================================
' DPN_GROUP_INFO record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DPN_GROUP_INFO_DEFINED)
%DPN_GROUP_INFO_DEFINED = 1

TYPE DPN_GROUP_INFO
   lSize AS LONG                                        ' long
   lInfoFlags AS LONG                                   ' CONST_DPNINFO <enum>
   name AS DWORD                                        ' VT_BSTR
   lDataSize AS LONG                                    ' long
   lGroupFlags AS LONG                                  ' CONST_DPNGROUPINFOFLAGS <enum>
END TYPE

#ENDIF

' ========================================================================================
' DPN_PLAYER_INFO record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DPN_PLAYER_INFO_DEFINED)
%DPN_PLAYER_INFO_DEFINED = 1

TYPE DPN_PLAYER_INFO
   lSize AS LONG                                        ' long
   lInfoFlags AS LONG                                   ' CONST_DPNINFO <enum>
   name AS DWORD                                        ' VT_BSTR
   lDataSize AS LONG                                    ' long
   lPlayerFlags AS LONG                                 ' CONST_DPNPLAYINFOFLAGS <enum>
END TYPE

#ENDIF

' ========================================================================================
' DPN_APPLICATION_DESC record
' Number of members = 10
' ========================================================================================

#IF NOT %DEF(%DPN_APPLICATION_DESC_DEFINED)
%DPN_APPLICATION_DESC_DEFINED = 1

TYPE DPN_APPLICATION_DESC
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DPNSESSIONFLAGS <enum>
   guidInstance AS DWORD                                ' VT_BSTR
   guidApplication AS DWORD                             ' VT_BSTR
   lMaxPlayers AS LONG                                  ' long
   lCurrentPlayers AS LONG                              ' long
   SessionName AS DWORD                                 ' VT_BSTR
   Password AS DWORD                                    ' VT_BSTR
   dwReservedDataSize AS LONG                           ' long
   dwApplicationReservedDataSize AS LONG                ' long
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_ASYNC_OP_COMPLETE record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DPNMSG_ASYNC_OP_COMPLETE_DEFINED)
%DPNMSG_ASYNC_OP_COMPLETE_DEFINED = 1

TYPE DPNMSG_ASYNC_OP_COMPLETE
   lSize AS LONG                                        ' long
   AsyncOpHandle AS LONG                                ' long
   hResultCode AS LONG                                  ' long
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_CONNECT_COMPLETE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DPNMSG_CONNECT_COMPLETE_DEFINED)
%DPNMSG_CONNECT_COMPLETE_DEFINED = 1

TYPE DPNMSG_CONNECT_COMPLETE
   lSize AS LONG                                        ' long
   AsyncOpHandle AS LONG                                ' long
   hResultCode AS LONG                                  ' long
   ReplyData AS DWORD                                   ' *VT_SAFEARRAY <BYTE>
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_ENUM_HOSTS_QUERY record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DPNMSG_ENUM_HOSTS_QUERY_DEFINED)
%DPNMSG_ENUM_HOSTS_QUERY_DEFINED = 1

TYPE DPNMSG_ENUM_HOSTS_QUERY
   lSize AS LONG                                        ' long
   ReceivedData AS DWORD                                ' *VT_SAFEARRAY <BYTE>
   lMaxResponseDataSize AS LONG                         ' long
   ResponseData AS DWORD                                ' *VT_SAFEARRAY <BYTE>
   AddressSenderUrl AS DWORD                            ' VT_BSTR
   AddressDeviceUrl AS DWORD                            ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_ENUM_HOSTS_RESPONSE record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DPNMSG_ENUM_HOSTS_RESPONSE_DEFINED)
%DPNMSG_ENUM_HOSTS_RESPONSE_DEFINED = 1

TYPE DPNMSG_ENUM_HOSTS_RESPONSE
   lSize AS LONG                                        ' long
   ApplicationDescription AS DPN_APPLICATION_DESC       ' DPN_APPLICATION_DESC <record>
   ResponseData AS DWORD                                ' *VT_SAFEARRAY <BYTE>
   lRoundTripLatencyMS AS LONG                          ' long
   AddressSenderUrl AS DWORD                            ' VT_BSTR
   AddressDeviceUrl AS DWORD                            ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_INDICATE_CONNECT record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DPNMSG_INDICATE_CONNECT_DEFINED)
%DPNMSG_INDICATE_CONNECT_DEFINED = 1

TYPE DPNMSG_INDICATE_CONNECT
   lSize AS LONG                                        ' long
   UserData AS DWORD                                    ' *VT_SAFEARRAY <BYTE>
   dwReplyDataSize AS LONG                              ' long
   AddressPlayerUrl AS DWORD                            ' VT_BSTR
   AddressDeviceUrl AS DWORD                            ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_RECEIVE record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DPNMSG_RECEIVE_DEFINED)
%DPNMSG_RECEIVE_DEFINED = 1

TYPE DPNMSG_RECEIVE
   lSize AS LONG                                        ' long
   idSender AS LONG                                     ' long
   ReceivedData AS DWORD                                ' *VT_SAFEARRAY <BYTE>
   lDataSize AS LONG                                    ' long
   BufferHandle AS LONG                                 ' long
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_SEND_COMPLETE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DPNMSG_SEND_COMPLETE_DEFINED)
%DPNMSG_SEND_COMPLETE_DEFINED = 1

TYPE DPNMSG_SEND_COMPLETE
   lSize AS LONG                                        ' long
   AsyncOpHandle AS LONG                                ' long
   hResultCode AS LONG                                  ' long
   lSendTime AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' DPNMSG_TERMINATE_SESSION record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DPNMSG_TERMINATE_SESSION_DEFINED)
%DPNMSG_TERMINATE_SESSION_DEFINED = 1

TYPE DPNMSG_TERMINATE_SESSION
   lSize AS LONG                                        ' long
   hResultCode AS LONG                                  ' long
   TerminateData AS DWORD                               ' *VT_SAFEARRAY <BYTE>
END TYPE

#ENDIF

' ========================================================================================
' DPN_SERVICE_PROVIDER_INFO record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DPN_SERVICE_PROVIDER_INFO_DEFINED)
%DPN_SERVICE_PROVIDER_INFO_DEFINED = 1

TYPE DPN_SERVICE_PROVIDER_INFO
   lFlags AS LONG                                       ' long
   guid AS DWORD                                        ' VT_BSTR
   name AS DWORD                                        ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DPN_CAPS record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DPN_CAPS_DEFINED)
%DPN_CAPS_DEFINED = 1

TYPE DPN_CAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' long
   lConnectTimeout AS LONG                              ' long
   lConnectRetries AS LONG                              ' long
   lTimeoutUntilKeepAlive AS LONG                       ' long
END TYPE

#ENDIF

' ========================================================================================
' DPL_MESSAGE_RECEIVE record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DPL_MESSAGE_RECEIVE_DEFINED)
%DPL_MESSAGE_RECEIVE_DEFINED = 1

TYPE DPL_MESSAGE_RECEIVE
   lSize AS LONG                                        ' long
   Sender AS LONG                                       ' long
   Buffer AS DWORD                                      ' *VT_SAFEARRAY <BYTE>
   lBufferSize AS LONG                                  ' long
END TYPE

#ENDIF

' ========================================================================================
' DPL_CONNECTION_SETTINGS record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DPL_CONNECTION_SETTINGS_DEFINED)
%DPL_CONNECTION_SETTINGS_DEFINED = 1

TYPE DPL_CONNECTION_SETTINGS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DPLCONNECTSETTINGS <enum>
   ApplicationDescription AS DPN_APPLICATION_DESC       ' DPN_APPLICATION_DESC <record>
   PlayerName AS DWORD                                  ' VT_BSTR
   AddressSenderUrl AS DWORD                            ' VT_BSTR
   AddressDeviceUrl AS DWORD                            ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DPL_MESSAGE_CONNECT record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DPL_MESSAGE_CONNECT_DEFINED)
%DPL_MESSAGE_CONNECT_DEFINED = 1

TYPE DPL_MESSAGE_CONNECT
   lSize AS LONG                                        ' long
   ConnectId AS LONG                                    ' long
   LobbyConnectData AS DWORD                            ' *VT_SAFEARRAY <BYTE>
   dplMsgCon AS DPL_CONNECTION_SETTINGS                 ' DPL_CONNECTION_SETTINGS <record>
END TYPE

#ENDIF

' ========================================================================================
' DPL_MESSAGE_CONNECTION_SETTINGS record
' Number of members = 3
' ========================================================================================

#IF NOT %DEF(%DPL_MESSAGE_CONNECTION_SETTINGS_DEFINED)
%DPL_MESSAGE_CONNECTION_SETTINGS_DEFINED = 1

TYPE DPL_MESSAGE_CONNECTION_SETTINGS
   lSize AS LONG                                        ' long
   hSender AS LONG                                      ' long
   dplConnectionSettings AS DPL_CONNECTION_SETTINGS     ' DPL_CONNECTION_SETTINGS <record>
END TYPE

#ENDIF

' ========================================================================================
' DPL_PROGRAM_DESC record
' Number of members = 11
' ========================================================================================

#IF NOT %DEF(%DPL_PROGRAM_DESC_DEFINED)
%DPL_PROGRAM_DESC_DEFINED = 1

TYPE DPL_PROGRAM_DESC
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' long
   guidApplication AS DWORD                             ' VT_BSTR
   ApplicationName AS DWORD                             ' VT_BSTR
   CommandLine AS DWORD                                 ' VT_BSTR
   CurrentDirectory AS DWORD                            ' VT_BSTR
   Description AS DWORD                                 ' VT_BSTR
   ExecutableFilename AS DWORD                          ' VT_BSTR
   ExecutablePath AS DWORD                              ' VT_BSTR
   LauncherFilename AS DWORD                            ' VT_BSTR
   LauncherPath AS DWORD                                ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' DPN_CONNECTION_INFO record
' Number of members = 23
' ========================================================================================

#IF NOT %DEF(%DPN_CONNECTION_INFO_DEFINED)
%DPN_CONNECTION_INFO_DEFINED = 1

TYPE DPN_CONNECTION_INFO
   lSize AS LONG                                        ' long
   lRoundTripLatencyMS AS LONG                          ' long
   lThroughputBPS AS LONG                               ' long
   lPeakThroughputBPS AS LONG                           ' long
   lBytesSentGuaranteed AS LONG                         ' long
   lPacketsSentGuaranteed AS LONG                       ' long
   lBytesSentNonGuaranteed AS LONG                      ' long
   lPacketsSentNonGuaranteed AS LONG                    ' long
   lBytesRetried AS LONG                                ' long
   lPacketsRetried AS LONG                              ' long
   lBytesDropped AS LONG                                ' long
   lPacketsDropped AS LONG                              ' long
   lMessagesTransmittedHighPriority AS LONG             ' long
   lMessagesTimedOutHighPriority AS LONG                ' long
   lMessagesTransmittedNormalPriority AS LONG           ' long
   lMessagesTimedOutNormalPriority AS LONG              ' long
   lMessagesTransmittedLowPriority AS LONG              ' long
   lMessagesTimedOutLowPriority AS LONG                 ' long
   lBytesReceivedGuaranteed AS LONG                     ' long
   lPacketsReceivedGuaranteed AS LONG                   ' long
   lBytesReceivedNonGuaranteed AS LONG                  ' long
   lPacketsReceivedNonGuaranteed AS LONG                ' long
   lMessagesReceived AS LONG                            ' long
END TYPE

#ENDIF

' ========================================================================================
' DPN_SP_CAPS record
' Number of members = 9
' ========================================================================================

#IF NOT %DEF(%DPN_SP_CAPS_DEFINED)
%DPN_SP_CAPS_DEFINED = 1

TYPE DPN_SP_CAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' long
   lNumThreads AS LONG                                  ' long
   lDefaultEnumCount AS LONG                            ' long
   lDefaultEnumRetryInterval AS LONG                    ' long
   lDefaultEnumTimeout AS LONG                          ' long
   lMaxEnumPayloadSize AS LONG                          ' long
   lBuffersPerThread AS LONG                            ' long
   lSystemBufferSize AS LONG                            ' long
END TYPE

#ENDIF

' ========================================================================================
' DPL_APPLICATION_INFO record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DPL_APPLICATION_INFO_DEFINED)
%DPL_APPLICATION_INFO_DEFINED = 1

TYPE DPL_APPLICATION_INFO
   guidApplication AS DWORD                             ' VT_BSTR
   ApplicationName AS DWORD                             ' VT_BSTR
   lNumRunning AS LONG                                  ' long
   lNumWaiting AS LONG                                  ' long
   lFlags AS LONG                                       ' CONST_DPLSESSION <enum>
END TYPE

#ENDIF

' ========================================================================================
' DPL_CONNECT_INFO record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%DPL_CONNECT_INFO_DEFINED)
%DPL_CONNECT_INFO_DEFINED = 1

TYPE DPL_CONNECT_INFO
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DPLCONNECT <enum>
   guidApplication AS DWORD                             ' VT_BSTR
   ConnectionSettings AS DPL_CONNECTION_SETTINGS        ' DPL_CONNECTION_SETTINGS <record>
END TYPE

#ENDIF

' ========================================================================================
' DVSOUNDDEVICECONFIG record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%DVSOUNDDEVICECONFIG_DEFINED)
%DVSOUNDDEVICECONFIG_DEFINED = 1

TYPE DVSOUNDDEVICECONFIG
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DVSOUNDEFFECT <enum>
   guidPlaybackDevice AS DWORD                          ' VT_BSTR
   guidCaptureDevice AS DWORD                           ' VT_BSTR
   hwndAppWindow AS LONG                                ' long
   MainSoundBuffer AS DWORD                             ' *DirectSoundSecondaryBuffer8 <interface>
   lMainBufferFlags AS LONG                             ' CONST_DSBPLAYFLAGS <enum>
   lMainBufferPriority AS LONG                          ' long
END TYPE

#ENDIF

' ========================================================================================
' DVCLIENTCONFIG record
' Number of members = 8
' ========================================================================================

#IF NOT %DEF(%DVCLIENTCONFIG_DEFINED)
%DVCLIENTCONFIG_DEFINED = 1

TYPE DVCLIENTCONFIG
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DVCLIENTCONFIGENUM <enum>
   lRecordVolume AS LONG                                ' long
   lPlaybackVolume AS LONG                              ' long
   lThreshold AS LONG                                   ' CONST_DVTHRESHOLD <enum>
   lBufferQuality AS LONG                               ' CONST_DVBUFFERQUALITY <enum>
   lBufferAggressiveness AS LONG                        ' CONST_DVBUFFERAGGRESSIVENESS <enum>
   lNotifyPeriod AS LONG                                ' long
END TYPE

#ENDIF

' ========================================================================================
' DVSESSIONDESC record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DVSESSIONDESC_DEFINED)
%DVSESSIONDESC_DEFINED = 1

TYPE DVSESSIONDESC
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' CONST_DVSESSION <enum>
   lSessionType AS LONG                                 ' CONST_DVSESSIONTYPE <enum>
   guidCT AS DWORD                                      ' VT_BSTR
   lBufferQuality AS LONG                               ' CONST_DVBUFFERQUALITY <enum>
   lBufferAggressiveness AS LONG                        ' CONST_DVBUFFERAGGRESSIVENESS <enum>
END TYPE

#ENDIF

' ========================================================================================
' DVCAPS record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%DVCAPS_DEFINED)
%DVCAPS_DEFINED = 1

TYPE DVCAPS
   lSize AS LONG                                        ' long
   lFlags AS LONG                                       ' long
END TYPE

#ENDIF

' ========================================================================================
' DVCOMPRESSIONINFO record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%DVCOMPRESSIONINFO_DEFINED)
%DVCOMPRESSIONINFO_DEFINED = 1

TYPE DVCOMPRESSIONINFO
   lSize AS LONG                                        ' long
   guidType AS DWORD                                    ' VT_BSTR
   strName AS DWORD                                     ' VT_BSTR
   strDescription AS DWORD                              ' VT_BSTR
   lFlags AS LONG                                       ' long
   lMaxBitsPerSecond AS LONG                            ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DQUATERNION record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DQUATERNION_DEFINED)
%D3DQUATERNION_DEFINED = 1

TYPE D3DQUATERNION
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
   z AS SINGLE                                          ' VT_R4 <Single>
   w AS SINGLE                                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' D3DXRTS_DESC record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%D3DXRTS_DESC_DEFINED)
%D3DXRTS_DESC_DEFINED = 1

TYPE D3DXRTS_DESC
   Width AS LONG                                        ' long
   Height AS LONG                                       ' long
   Format AS LONG                                       ' long
   DepthStencil AS LONG                                 ' long
   DepthStencilFormat AS LONG                           ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DXATTRIBUTERANGE record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%D3DXATTRIBUTERANGE_DEFINED)
%D3DXATTRIBUTERANGE_DEFINED = 1

TYPE D3DXATTRIBUTERANGE
   AttribId AS LONG                                     ' long
   FaceStart AS LONG                                    ' long
   FaceCount AS LONG                                    ' long
   VertexStart AS LONG                                  ' long
   VertexCount AS LONG                                  ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DXATTRIBUTEWEIGHTS record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%D3DXATTRIBUTEWEIGHTS_DEFINED)
%D3DXATTRIBUTEWEIGHTS_DEFINED = 1

TYPE D3DXATTRIBUTEWEIGHTS
   Position AS SINGLE                                   ' VT_R4 <Single>
   Boundary AS SINGLE                                   ' VT_R4 <Single>
   Normal AS SINGLE                                     ' VT_R4 <Single>
   diffuse AS SINGLE                                    ' VT_R4 <Single>
   specular AS SINGLE                                   ' VT_R4 <Single>
   Tex (7) AS SINGLE                                    ' %VT_CARRAY <VT_R4 <Single>>
END TYPE

#ENDIF

' ========================================================================================
' D3DXBONECOMBINATION record
' Number of members = 6
' ========================================================================================

#IF NOT %DEF(%D3DXBONECOMBINATION_DEFINED)
%D3DXBONECOMBINATION_DEFINED = 1

TYPE D3DXBONECOMBINATION
   AttribId AS LONG                                     ' long
   FaceStart AS LONG                                    ' long
   FaceCount AS LONG                                    ' long
   VertexStart AS LONG                                  ' long
   VertexCount AS LONG                                  ' long
   pBones AS LONG                                       ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DXIMAGE_INFO record
' Number of members = 4
' ========================================================================================

#IF NOT %DEF(%D3DXIMAGE_INFO_DEFINED)
%D3DXIMAGE_INFO_DEFINED = 1

TYPE D3DXIMAGE_INFO
   Width AS LONG                                        ' long
   Height AS LONG                                       ' long
   Depth AS LONG                                        ' long
   MipLevels AS LONG                                    ' long
END TYPE

#ENDIF

' ========================================================================================
' D3DXMATERIAL record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%D3DXMATERIAL_DEFINED)
%D3DXMATERIAL_DEFINED = 1

TYPE D3DXMATERIAL
   MatD3D AS D3DMATERIAL8                               ' D3DMATERIAL8 <record>
   TextureFilename AS DWORD                             ' VT_BSTR
END TYPE

#ENDIF

' ========================================================================================
' D3DXDECLARATOR record
' Number of members = 1
' ========================================================================================

#IF NOT %DEF(%D3DXDECLARATOR_DEFINED)
%D3DXDECLARATOR_DEFINED = 1

TYPE D3DXDECLARATOR
   value (31) AS LONG                                   ' %VT_CARRAY <VT_I4 <Long>>
END TYPE

#ENDIF

' ========================================================================================
' POINTFLOAT record
' Number of members = 2
' ========================================================================================

#IF NOT %DEF(%POINTFLOAT_DEFINED)
%POINTFLOAT_DEFINED = 1

' // Size = 8 bytes
TYPE POINTFLOAT DWORD
   x AS SINGLE                                          ' VT_R4 <Single>
   y AS SINGLE                                          ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' GLYPHMETRICSFLOAT record
' Number of members = 5
' ========================================================================================

#IF NOT %DEF(%DXVB_GLYPHMETRICSFLOAT_DEFINED)
%DXVB_GLYPHMETRICSFLOAT_DEFINED = 1

TYPE DXVB_GLYPHMETRICSFLOAT
   BlackBoxX AS SINGLE                                  ' VT_R4 <Single>
   BlackBoxY AS SINGLE                                  ' VT_R4 <Single>
   GlyphOrigin AS POINTFLOAT                            ' POINTFLOAT <record>
   CellIncX AS SINGLE                                   ' VT_R4 <Single>
   CellIncY AS SINGLE                                   ' VT_R4 <Single>
END TYPE

#ENDIF

' ========================================================================================
' LOGFONT record
' Number of members = 14
' ========================================================================================

#IF NOT %DEF(%DXVB_LOGFONT_DEFINED)
%DXVB_LOGFONT_DEFINED = 1

TYPE DXVB_LOGFONT
   Height AS LONG                                       ' long
   Width AS LONG                                        ' long
   Escapement AS LONG                                   ' long
   orientation AS LONG                                  ' long
   Weight AS LONG                                       ' long
   Italic AS BYTE                                       ' VT_UI1 <Byte>
   Underline AS BYTE                                    ' VT_UI1 <Byte>
   StrikeOut AS BYTE                                    ' VT_UI1 <Byte>
   CharSet AS BYTE                                      ' VT_UI1 <Byte>
   OutPrecision AS BYTE                                 ' VT_UI1 <Byte>
   ClipPrecision AS BYTE                                ' VT_UI1 <Byte>
   Quality AS BYTE                                      ' VT_UI1 <Byte>
   PitchAndFamily AS BYTE                               ' VT_UI1 <Byte>
   FaceName AS STRING * 32                              ' %VT_CARRAY <VT_UI1 <Byte>>
END TYPE

#ENDIF

' ########################################################################################
' Interface name = DirectXEvent8
' IID = {D1CA9B18-9ED2-43B5-8759-7A5C892D4C5C}
' I_dxj_DirectXEvent8 Interface
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXEvent8_INTERFACE_DEFINED)
    %DirectXEvent8_INTERFACE_DEFINED = 1

INTERFACE DirectXEvent8 $IID_DirectXEvent8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD DXCallback ( _                                ' VTable offset = 12
     BYVAL eventid AS LONG _                            ' __in long eventid
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXEvent8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3D8
' IID = {1DD9E8DA-1C77-4D40-B0CF-98FEFDFF9512}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3D8_INTERFACE_DEFINED)
    %Direct3D8_INTERFACE_DEFINED = 1

INTERFACE Direct3D8 $IID_Direct3D8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD RegisterSoftwareDevice ( _                    ' VTable offset = 12
     BYVAL InitializeFunction AS DWORD _                ' __in *InitializeFunction VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAdapterCount ( _                           ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAdapterIdentifier ( _                      ' VTable offset = 20
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYREF Identifier AS D3DADAPTER_IDENTIFIER8 _       ' __inout *Identifier D3DADAPTER_IDENTIFIER8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAdapterModeCount ( _                       ' VTable offset = 24
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD EnumAdapterModes ( _                          ' VTable offset = 28
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL Mode AS LONG _                               ' __in Mode VT_INT <Long>
   , BYREF DisplayMode AS D3DDISPLAYMODE _              ' __inout *DisplayMode D3DDISPLAYMODE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAdapterDisplayMode ( _                     ' VTable offset = 32
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYREF DisplayMode AS D3DDISPLAYMODE _              ' __inout *DisplayMode D3DDISPLAYMODE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD CheckDeviceType ( _                           ' VTable offset = 36
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL CheckType AS LONG _                          ' __in CheckType CONST_D3DDEVTYPE <enum>
   , BYVAL DisplayFormat AS LONG _                      ' __in DisplayFormat CONST_D3DFORMAT <enum>
   , BYVAL BackBufferFormat AS LONG _                   ' __in BackBufferFormat CONST_D3DFORMAT <enum>
   , BYVAL bWindowed AS LONG _                          ' __in bWindowed VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CheckDeviceFormat ( _                         ' VTable offset = 40
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL DeviceType AS LONG _                         ' __in DeviceType CONST_D3DDEVTYPE <enum>
   , BYVAL AdapterFormat AS LONG _                      ' __in AdapterFormat CONST_D3DFORMAT <enum>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL RType AS LONG _                              ' __in RType CONST_D3DRESOURCETYPE <enum>
   , BYVAL CheckFormat AS LONG _                        ' __in CheckFormat CONST_D3DFORMAT <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CheckDeviceMultiSampleType ( _                ' VTable offset = 44
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL DeviceType AS LONG _                         ' __in DeviceType CONST_D3DDEVTYPE <enum>
   , BYVAL RenderTargetFormat AS LONG _                 ' __in RenderTargetFormat CONST_D3DFORMAT <enum>
   , BYVAL Windowed AS LONG _                           ' __in Windowed VT_I4 <Long>
   , BYVAL MultiSampleType AS LONG _                    ' __in MultiSampleType CONST_D3DMULTISAMPLE_TYPE <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CheckDepthStencilMatch ( _                    ' VTable offset = 48
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL DeviceType AS LONG _                         ' __in DeviceType CONST_D3DDEVTYPE <enum>
   , BYVAL AdapterFormat AS LONG _                      ' __in AdapterFormat CONST_D3DFORMAT <enum>
   , BYVAL RenderTargetFormat AS LONG _                 ' __in RenderTargetFormat CONST_D3DFORMAT <enum>
   , BYVAL DepthStencilFormat AS LONG _                 ' __in DepthStencilFormat CONST_D3DFORMAT <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceCaps ( _                             ' VTable offset = 52
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL DeviceType AS LONG _                         ' __in DeviceType CONST_D3DDEVTYPE <enum>
   , BYREF Caps AS D3DCAPS8 _                           ' __inout *Caps D3DCAPS8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAdapterMonitor ( _                         ' VTable offset = 56
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateDevice ( _                              ' VTable offset = 60
     BYVAL Adapter AS LONG _                            ' __in Adapter VT_INT <Long>
   , BYVAL DeviceType AS LONG _                         ' __in DeviceType CONST_D3DDEVTYPE <enum>
   , BYVAL hFocusWindow AS LONG _                       ' __in hFocusWindow VT_I4 <Long>
   , BYVAL BehaviorFlags AS LONG _                      ' __in BehaviorFlags CONST_D3DCREATEFLAGS <enum>
   , BYREF PresentationParameters AS D3DPRESENT_PARAMETERS _ ' __in *PresentationParameters D3DPRESENT_PARAMETERS <record>
   ) AS Direct3DDevice8                                 ' __retval_out **ppReturnedDeviceInterface Direct3DDevice8 <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3D8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DDevice8
' IID = {7385E5DF-8FE8-41D5-86B6-D7B48547B6CF}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DDevice8_INTERFACE_DEFINED)
    %Direct3DDevice8_INTERFACE_DEFINED = 1

INTERFACE Direct3DDevice8 $IID_Direct3DDevice8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD TestCooperativeLevel ( _                      ' VTable offset = 12
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAvailableTextureMem ( _                    ' VTable offset = 16
     BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD ResourceManagerDiscardBytes ( _               ' VTable offset = 20
     BYVAL NumberOfBytes AS LONG _                      ' __in NumberOfBytes VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDirect3D ( _                               ' VTable offset = 24
   ) AS Direct3D8                                       ' __retval_out **pD3D8 Direct3D8 <interface>
   ' =====================================================================================
   METHOD GetDeviceCaps ( _                             ' VTable offset = 28
     BYREF Caps AS D3DCAPS8 _                           ' __out *Caps D3DCAPS8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDisplayMode ( _                            ' VTable offset = 32
     BYREF pMode AS D3DDISPLAYMODE _                    ' __out *pMode D3DDISPLAYMODE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCreationParameters ( _                     ' VTable offset = 36
     BYREF pCreationParams AS D3DDEVICE_CREATION_PARAMETERS _ ' __out *pCreationParams D3DDEVICE_CREATION_PARAMETERS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetCursorProperties ( _                       ' VTable offset = 40
     BYVAL xHotSpot AS LONG _                           ' __in xHotSpot VT_INT <Long>
   , BYVAL yHotSpot AS LONG _                           ' __in yHotSpot VT_INT <Long>
   , BYVAL CursorSurface AS Direct3DSurface8 _          ' __in *CursorSurface Direct3DSurface8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetCursorPosition ( _                         ' VTable offset = 44
     BYVAL xScreenSpace AS LONG _                       ' __in xScreenSpace VT_INT <Long>
   , BYVAL yScreenSpace AS LONG _                       ' __in yScreenSpace VT_INT <Long>
   , BYVAL flags AS LONG _                              ' __in flags CONST_D3DSCPFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD ShowCursor ( _                                ' VTable offset = 48
     BYVAL bShow AS LONG _                              ' __in bShow VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateAdditionalSwapChain ( _                 ' VTable offset = 52
     BYREF PresentationParameters AS D3DPRESENT_PARAMETERS _ ' __in *PresentationParameters D3DPRESENT_PARAMETERS <record>
   ) AS Direct3DSwapChain8                              ' __retval_out **ppSwapChain Direct3DSwapChain8 <interface>
   ' =====================================================================================
   METHOD Reset ( _                                     ' VTable offset = 56
     BYREF PresentationParameters AS D3DPRESENT_PARAMETERS _ ' __in *PresentationParameters D3DPRESENT_PARAMETERS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD Present ( _                                   ' VTable offset = 60
     BYVAL pSourceRect AS DWORD _                       ' __in *pSourceRect VT_VOID <Dword>
   , BYVAL pDestRect AS DWORD _                         ' __in *pDestRect VT_VOID <Dword>
   , BYVAL hWndDestWindowOverride AS LONG _             ' __in hWndDestWindowOverride VT_I4 <Long>
   , BYVAL pDirtyRegion AS DWORD _                      ' __in *pDirtyRegion VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetBackBuffer ( _                             ' VTable offset = 64
     BYVAL BackBuffer AS LONG _                         ' __in BackBuffer VT_I4 <Long>
   , BYVAL BufferType AS LONG _                         ' __in BufferType CONST_D3DBACKBUFFERTYPE <enum>
   ) AS Direct3DSurface8                                ' __retval_out **ppBackBuffer Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD GetRasterStatus ( _                           ' VTable offset = 68
   )                                                    ' void
   ' =====================================================================================
   METHOD SetGammaRamp ( _                              ' VTable offset = 72
     BYVAL dwFlags AS LONG _                            ' __in dwFlags VT_I4 <Long>
   , BYREF pRamp AS D3DGAMMARAMP _                      ' __in *pRamp D3DGAMMARAMP <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetGammaRamp ( _                              ' VTable offset = 76
     BYREF pRamp AS D3DGAMMARAMP _                      ' __inout *pRamp D3DGAMMARAMP <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateTexture ( _                             ' VTable offset = 80
     BYVAL Width AS LONG _                              ' __in Width VT_INT <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_INT <Long>
   , BYVAL Levels AS LONG _                             ' __in Levels VT_INT <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DTexture8                                ' __retval_out **ppMipMap Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD CreateVolumeTexture ( _                       ' VTable offset = 84
     BYVAL Width AS LONG _                              ' __in Width VT_INT <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_INT <Long>
   , BYVAL Depth AS LONG _                              ' __in Depth VT_INT <Long>
   , BYVAL Levels AS LONG _                             ' __in Levels VT_INT <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DVolumeTexture8                          ' __retval_out **ppMipMap Direct3DVolumeTexture8 <interface>
   ' =====================================================================================
   METHOD CreateCubeTexture ( _                         ' VTable offset = 88
     BYVAL EdgeLength AS LONG _                         ' __in EdgeLength VT_INT <Long>
   , BYVAL Levels AS LONG _                             ' __in Levels VT_INT <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DCubeTexture8                            ' __retval_out **ppCubeMap Direct3DCubeTexture8 <interface>
   ' =====================================================================================
   METHOD CreateVertexBuffer ( _                        ' VTable offset = 92
     BYVAL LengthInBytes AS LONG _                      ' __in LengthInBytes VT_INT <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DVertexBuffer8                           ' __retval_out **ppVertexBuffer Direct3DVertexBuffer8 <interface>
   ' =====================================================================================
   METHOD CreateIndexBuffer ( _                         ' VTable offset = 96
     BYVAL LengthInBytes AS LONG _                      ' __in LengthInBytes VT_INT <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DIndexBuffer8                            ' __retval_out **ppIndexBuffer Direct3DIndexBuffer8 <interface>
   ' =====================================================================================
   METHOD CreateRenderTarget ( _                        ' VTable offset = 100
     BYVAL Width AS LONG _                              ' __in Width VT_INT <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_INT <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   , BYVAL MultiSample AS LONG _                        ' __in MultiSample CONST_D3DMULTISAMPLE_TYPE <enum>
   , BYVAL Lockable AS LONG _                           ' __in Lockable VT_I4 <Long>
   ) AS Direct3DSurface8                                ' __retval_out **ppSurface Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD CreateDepthStencilSurface ( _                 ' VTable offset = 104
     BYVAL Width AS LONG _                              ' __in Width VT_INT <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_INT <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   , BYVAL MultiSample AS LONG _                        ' __in MultiSample CONST_D3DMULTISAMPLE_TYPE <enum>
   ) AS Direct3DSurface8                                ' __retval_out **ppSurface Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD CreateImageSurface ( _                        ' VTable offset = 108
     BYVAL Width AS LONG _                              ' __in Width VT_INT <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_INT <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   ) AS Direct3DSurface8                                ' __retval_out **ppSurface Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD CopyRects ( _                                 ' VTable offset = 112
     BYVAL SourceSurface AS Direct3DSurface8 _          ' __in *SourceSurface Direct3DSurface8 <interface>
   , BYVAL FirstElementOfSourceRectsArray AS DWORD _    ' __in *FirstElementOfSourceRectsArray VT_VOID <Dword>
   , BYVAL NumberOfRects AS LONG _                      ' __in NumberOfRects VT_INT <Long>
   , BYVAL DestinationSurface AS Direct3DSurface8 _     ' __in *DestinationSurface Direct3DSurface8 <interface>
   , BYVAL FirstElementofDestPointArray AS DWORD _      ' __in *FirstElementofDestPointArray VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD UpdateTexture ( _                             ' VTable offset = 116
     BYVAL SourceTexture AS Direct3DBaseTexture8 _      ' __in *SourceTexture Direct3DBaseTexture8 <interface>
   , BYVAL pDestinationTexture AS Direct3DBaseTexture8 _ ' *pDestinationTexture Direct3DBaseTexture8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFrontBuffer ( _                            ' VTable offset = 120
     BYVAL pDestSurface AS Direct3DSurface8 _           ' __in *pDestSurface Direct3DSurface8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetRenderTarget ( _                           ' VTable offset = 124
     BYVAL RenderTarget AS Direct3DSurface8 _           ' __in *RenderTarget Direct3DSurface8 <interface>
   , BYVAL NewZStencil AS Direct3DSurface8 _            ' __in *NewZStencil Direct3DSurface8 <interface>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetRenderTarget ( _                           ' VTable offset = 128
   ) AS Direct3DSurface8                                ' __retval_out **ppRenderTarget Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD GetDepthStencilSurface ( _                    ' VTable offset = 132
   ) AS Direct3DSurface8                                ' __retval_out **ZStencilSurface Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD BeginScene ( _                                ' VTable offset = 136
   )                                                    ' void
   ' =====================================================================================
   METHOD EndScene ( _                                  ' VTable offset = 140
   )                                                    ' void
   ' =====================================================================================
   METHOD Clear ( _                                     ' VTable offset = 144
     BYVAL ClearRectCount AS LONG _                     ' __in ClearRectCount VT_I4 <Long>
   , BYVAL clearD3DRect AS DWORD _                      ' __in *clearD3DRect VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags CONST_D3DCLEARFLAGS <enum>
   , BYVAL color AS LONG _                              ' __in color VT_I4 <Long>
   , BYVAL z AS SINGLE _                                ' __in z VT_R4 <Single>
   , BYVAL stencil AS LONG _                            ' __in stencil VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetTransform ( _                              ' VTable offset = 148
     BYVAL transformType AS LONG _                      ' __in transformType CONST_D3DTRANSFORMSTATETYPE <enum>
   , BYREF matrix AS D3DMATRIX _                        ' __in *matrix D3DMATRIX <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetTransform ( _                              ' VTable offset = 152
     BYVAL transformType AS LONG _                      ' __in transformType CONST_D3DTRANSFORMSTATETYPE <enum>
   , BYREF matrix AS D3DMATRIX _                        ' __out *matrix D3DMATRIX <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD MultiplyTransform ( _                         ' VTable offset = 156
     BYVAL transformType AS LONG _                      ' __in transformType CONST_D3DTRANSFORMSTATETYPE <enum>
   , BYREF matrix AS D3DMATRIX _                        ' __in *matrix D3DMATRIX <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetViewport ( _                               ' VTable offset = 160
     BYREF viewport AS D3DVIEWPORT8 _                   ' __in *viewport D3DVIEWPORT8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetViewport ( _                               ' VTable offset = 164
     BYREF viewport AS D3DVIEWPORT8 _                   ' __out *viewport D3DVIEWPORT8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetMaterial ( _                               ' VTable offset = 168
     BYREF material AS D3DMATERIAL8 _                   ' __in *material D3DMATERIAL8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMaterial ( _                               ' VTable offset = 172
     BYREF material AS D3DMATERIAL8 _                   ' __out *material D3DMATERIAL8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetLight ( _                                  ' VTable offset = 176
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYREF light AS D3DLIGHT8 _                         ' __in *light D3DLIGHT8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLight ( _                                  ' VTable offset = 180
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYREF light AS D3DLIGHT8 _                         ' __out *light D3DLIGHT8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD LightEnable ( _                               ' VTable offset = 184
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYVAL enabled AS LONG _                            ' __in enabled VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLightEnable ( _                            ' VTable offset = 188
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *enabled VT_I4 <Long>
   ' =====================================================================================
   METHOD SetClipPlane ( _                              ' VTable offset = 192
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYREF plane AS D3DPLANE _                          ' __in *plane D3DPLANE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetClipPlane ( _                              ' VTable offset = 196
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYREF plane AS D3DPLANE _                          ' __out *plane D3DPLANE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetRenderState ( _                            ' VTable offset = 200
     BYVAL stateType AS LONG _                          ' __in stateType CONST_D3DRENDERSTATETYPE <enum>
   , BYVAL value AS LONG _                              ' __in value VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetRenderState ( _                            ' VTable offset = 204
     BYVAL stateType AS LONG _                          ' __in stateType CONST_D3DRENDERSTATETYPE <enum>
   ) AS LONG                                            ' __retval_out *value VT_I4 <Long>
   ' =====================================================================================
   METHOD BeginStateBlock ( _                           ' VTable offset = 208
   )                                                    ' void
   ' =====================================================================================
   METHOD EndStateBlock ( _                             ' VTable offset = 212
   ) AS LONG                                            ' __retval_out *blockid VT_I4 <Long>
   ' =====================================================================================
   METHOD ApplyStateBlock ( _                           ' VTable offset = 216
     BYVAL blockid AS LONG _                            ' __in blockid VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CaptureStateBlock ( _                         ' VTable offset = 220
     BYVAL blockid AS LONG _                            ' __in blockid VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DeleteStateBlock ( _                          ' VTable offset = 224
     BYVAL blockid AS LONG _                            ' __in blockid VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateStateBlock ( _                          ' VTable offset = 228
     BYVAL blocktype AS LONG _                          ' __in blocktype CONST_D3DSTATEBLOCKTYPE <enum>
   ) AS LONG                                            ' __retval_out *blockid VT_I4 <Long>
   ' =====================================================================================
   METHOD SetClipStatus ( _                             ' VTable offset = 232
     BYREF clipstatus AS D3DCLIPSTATUS8 _               ' __in *clipstatus D3DCLIPSTATUS8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetClipStatus ( _                             ' VTable offset = 236
     BYREF clipstatus AS D3DCLIPSTATUS8 _               ' __out *clipstatus D3DCLIPSTATUS8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetTexture ( _                                ' VTable offset = 240
     BYVAL stage AS LONG _                              ' __in stage VT_I4 <Long>
   ) AS Direct3DBaseTexture8                            ' __retval_out **texture Direct3DBaseTexture8 <interface>
   ' =====================================================================================
   METHOD SetTexture ( _                                ' VTable offset = 244
     BYVAL stage AS LONG _                              ' __in stage VT_I4 <Long>
   , BYVAL texture AS Direct3DBaseTexture8 _            ' __in *texture Direct3DBaseTexture8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetTextureStageState ( _                      ' VTable offset = 248
     BYVAL stage AS LONG _                              ' __in stage VT_I4 <Long>
   , BYVAL stateType AS LONG _                          ' __in stateType CONST_D3DTEXTURESTAGESTATETYPE <enum>
   ) AS LONG                                            ' __retval_out *state VT_I4 <Long>
   ' =====================================================================================
   METHOD SetTextureStageState ( _                      ' VTable offset = 252
     BYVAL stage AS LONG _                              ' __in stage VT_I4 <Long>
   , BYVAL stateType AS LONG _                          ' __in stateType CONST_D3DTEXTURESTAGESTATETYPE <enum>
   , BYVAL state AS LONG _                              ' __in state VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ValidateDevice ( _                            ' VTable offset = 256
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetInfo ( _                                   ' VTable offset = 260
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL info AS DWORD _                              ' __inout *info VT_VOID <Dword>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPaletteEntries ( _                         ' VTable offset = 264
     BYVAL PaletteNumber AS LONG _                      ' __in PaletteNumber VT_INT <Long>
   , BYVAL ArrayOfEntries AS DWORD _                    ' __in *ArrayOfEntries VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPaletteEntries ( _                         ' VTable offset = 268
     BYVAL PaletteNumber AS LONG _                      ' __in PaletteNumber VT_INT <Long>
   , BYVAL ArrayOfEntries AS DWORD _                    ' __inout *ArrayOfEntries VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetCurrentTexturePalette ( _                  ' VTable offset = 272
     BYVAL PaletteNumber AS LONG _                      ' __in PaletteNumber VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCurrentTexturePalette ( _                  ' VTable offset = 276
   ) AS LONG                                            ' __retval_out *PaletteNumber VT_INT <Long>
   ' =====================================================================================
   METHOD DrawPrimitive ( _                             ' VTable offset = 280
     BYVAL PrimitiveType AS LONG _                      ' __in PrimitiveType CONST_D3DPRIMITIVETYPE <enum>
   , BYVAL StartVertex AS LONG _                        ' __in StartVertex VT_INT <Long>
   , BYVAL PrimitiveCount AS LONG _                     ' __in PrimitiveCount VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawIndexedPrimitive ( _                      ' VTable offset = 284
     BYVAL PrimitiveType AS LONG _                      ' __in PrimitiveType CONST_D3DPRIMITIVETYPE <enum>
   , BYVAL minIndex AS LONG _                           ' __in minIndex VT_INT <Long>
   , BYVAL NumIndices AS LONG _                         ' __in NumIndices VT_INT <Long>
   , BYVAL startIndex AS LONG _                         ' __in startIndex VT_INT <Long>
   , BYVAL PrimitiveCount AS LONG _                     ' __in PrimitiveCount VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawPrimitiveUP ( _                           ' VTable offset = 288
     BYVAL PrimitiveType AS LONG _                      ' __in PrimitiveType CONST_D3DPRIMITIVETYPE <enum>
   , BYVAL PrimitiveCount AS LONG _                     ' __in PrimitiveCount VT_INT <Long>
   , BYVAL VertexStreamZeroDataArray AS DWORD _         ' __in *VertexStreamZeroDataArray VT_VOID <Dword>
   , BYVAL VertexStreamZeroStride AS LONG _             ' __in VertexStreamZeroStride VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawIndexedPrimitiveUP ( _                    ' VTable offset = 292
     BYVAL PrimitiveType AS LONG _                      ' __in PrimitiveType CONST_D3DPRIMITIVETYPE <enum>
   , BYVAL minVertexIndex AS LONG _                     ' __in minVertexIndex VT_INT <Long>
   , BYVAL NumVertexIndices AS LONG _                   ' __in NumVertexIndices VT_INT <Long>
   , BYVAL PrimitiveCount AS LONG _                     ' __in PrimitiveCount VT_INT <Long>
   , BYVAL IndexDataArray AS DWORD _                    ' __in *IndexDataArray VT_VOID <Dword>
   , BYVAL IndexDataFormat AS LONG _                    ' __in IndexDataFormat CONST_D3DFORMAT <enum>
   , BYVAL VertexStreamZeroDataArray AS DWORD _         ' __in *VertexStreamZeroDataArray VT_VOID <Dword>
   , BYVAL VertexStreamZeroStride AS LONG _             ' __in VertexStreamZeroStride VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ProcessVertices ( _                           ' VTable offset = 296
     BYVAL SrcStartIndex AS LONG _                      ' __in SrcStartIndex VT_INT <Long>
   , BYVAL DestIndex AS LONG _                          ' __in DestIndex VT_INT <Long>
   , BYVAL VertexCount AS LONG _                        ' __in VertexCount VT_INT <Long>
   , BYVAL DestBuffer AS Direct3DVertexBuffer8 _        ' __in *DestBuffer Direct3DVertexBuffer8 <interface>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateVertexShader ( _                        ' VTable offset = 300
     BYREF DeclarationTokenArray AS LONG _              ' __in *DeclarationTokenArray VT_I4 <Long>
   , BYVAL FunctionTokenArray AS DWORD _                ' __inout *FunctionTokenArray VT_VOID <Dword>
   , BYREF retHandle AS LONG _                          ' __inout *retHandle VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetVertexShader ( _                           ' VTable offset = 304
     BYVAL VertexShaderHandle AS LONG _                 ' __in VertexShaderHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVertexShader ( _                           ' VTable offset = 308
   ) AS LONG                                            ' __retval_out *pdwHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD DeleteVertexShader ( _                        ' VTable offset = 312
     BYVAL VertexShaderHandle AS LONG _                 ' __in VertexShaderHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetVertexShaderConstant ( _                   ' VTable offset = 316
     BYVAL Register AS LONG _                           ' __in Register VT_I4 <Long>
   , BYVAL pConstantData AS DWORD _                     ' __in *pConstantData VT_VOID <Dword>
   , BYVAL ConstantCount AS LONG _                      ' __in ConstantCount VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVertexShaderConstant ( _                   ' VTable offset = 320
     BYVAL Register AS LONG _                           ' __in Register VT_I4 <Long>
   , BYVAL pConstantData AS DWORD _                     ' __inout *pConstantData VT_VOID <Dword>
   , BYVAL ConstantCount AS LONG _                      ' __in ConstantCount VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVertexShaderDeclaration ( _                ' VTable offset = 324
     BYVAL Handle AS LONG _                             ' __in Handle VT_I4 <Long>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVertexShaderFunction ( _                   ' VTable offset = 328
     BYVAL Handle AS LONG _                             ' __in Handle VT_I4 <Long>
   , BYVAL pData AS DWORD _                             ' __in *pData VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetStreamSource ( _                           ' VTable offset = 332
     BYVAL StreamNumber AS LONG _                       ' __in StreamNumber VT_INT <Long>
   , BYVAL StreamData AS Direct3DVertexBuffer8 _        ' __in *StreamData Direct3DVertexBuffer8 <interface>
   , BYVAL Stride AS LONG _                             ' __in Stride VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetStreamSource ( _                           ' VTable offset = 336
     BYVAL StreamNumber AS LONG _                       ' __in StreamNumber VT_INT <Long>
   , BYREF RetStreamData AS Direct3DVertexBuffer8 _     ' __inout **RetStreamData Direct3DVertexBuffer8 <interface>
   , BYREF RetStride AS LONG _                          ' __inout *RetStride VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetIndices ( _                                ' VTable offset = 340
     BYVAL IndexData AS Direct3DIndexBuffer8 _          ' __in *IndexData Direct3DIndexBuffer8 <interface>
   , BYVAL BaseVertexIndex AS LONG _                    ' __in BaseVertexIndex VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetIndices ( _                                ' VTable offset = 344
     BYREF RetIndexData AS Direct3DIndexBuffer8 _       ' __out **RetIndexData Direct3DIndexBuffer8 <interface>
   , BYREF RetBaseVertexIndex AS LONG _                 ' __out *RetBaseVertexIndex VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreatePixelShader ( _                         ' VTable offset = 348
     BYREF FunctionTokenArray AS LONG _                 ' __in *FunctionTokenArray VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *pdwHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD SetPixelShader ( _                            ' VTable offset = 352
     BYVAL PixelShaderHandle AS LONG _                  ' __in PixelShaderHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPixelShader ( _                            ' VTable offset = 356
   ) AS LONG                                            ' __retval_out *pdwHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD DeletePixelShader ( _                         ' VTable offset = 360
     BYVAL PixelShaderHandle AS LONG _                  ' __in PixelShaderHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPixelShaderConstant ( _                    ' VTable offset = 364
     BYVAL Register AS LONG _                           ' __in Register VT_I4 <Long>
   , BYVAL pConstantData AS DWORD _                     ' __in *pConstantData VT_VOID <Dword>
   , BYVAL ConstantCount AS LONG _                      ' __in ConstantCount VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPixelShaderConstant ( _                    ' VTable offset = 368
     BYVAL Register AS LONG _                           ' __in Register VT_I4 <Long>
   , BYVAL pConstantData AS DWORD _                     ' __inout *pConstantData VT_VOID <Dword>
   , BYVAL ConstantCount AS LONG _                      ' __in ConstantCount VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPixelShaderFunction ( _                    ' VTable offset = 372
     BYVAL Handle AS LONG _                             ' __in Handle VT_I4 <Long>
   , BYVAL pData AS DWORD _                             ' __in *pData VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawRectPatch ( _                             ' VTable offset = 376
     BYVAL Handle AS LONG _                             ' __in Handle VT_I4 <Long>
   , BYREF NumSegments AS SINGLE _                      ' __inout *NumSegments VT_R4 <Single>
   , BYVAL surf AS DWORD _                              ' *surf VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawTriPatch ( _                              ' VTable offset = 380
     BYVAL Handle AS LONG _                             ' __in Handle VT_I4 <Long>
   , BYREF NumSegments AS SINGLE _                      ' __inout *NumSegments VT_R4 <Single>
   , BYVAL surf AS DWORD _                              ' *surf VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD DeletePatch ( _                               ' VTable offset = 384
     BYVAL Handle AS LONG _                             ' __in Handle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DDevice8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DSurface8
' IID = {B96EEBCA-B326-4EA5-882F-2FF5BAE021DD}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DSurface8_INTERFACE_DEFINED)
    %Direct3DSurface8_INTERFACE_DEFINED = 1

INTERFACE Direct3DSurface8 $IID_Direct3DSurface8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __inout *Data VT_VOID <Dword>
   , BYREF SizeOfDataa AS LONG _                        ' __inout *SizeOfDataa VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetContainer ( _                              ' VTable offset = 28
     BYREF riid AS DXGUID _                             ' *riid DXGUID <record>
   ) AS IUnknown                                        ' __retval_out **ppContainer VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetDesc ( _                                   ' VTable offset = 32
     BYREF pDesc AS D3DSURFACE_DESC _                   ' __out *pDesc D3DSURFACE_DESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD LockRect ( _                                  ' VTable offset = 36
     BYREF LockedRect AS D3DLOCKED_RECT _               ' __in *LockedRect D3DLOCKED_RECT <record>
   , BYVAL RECT AS DWORD _                              ' __in *RECT VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnlockRect ( _                                ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DSurface8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DSwapChain8
' IID = {928C088B-76B9-4C6B-A536-A590853876CD}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DSwapChain8_INTERFACE_DEFINED)
    %Direct3DSwapChain8_INTERFACE_DEFINED = 1

INTERFACE Direct3DSwapChain8 $IID_Direct3DSwapChain8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD Present ( _                                   ' VTable offset = 12
     BYVAL SourceRect AS DWORD _                        ' __in *SourceRect VT_VOID <Dword>
   , BYVAL DestRect AS DWORD _                          ' __in *DestRect VT_VOID <Dword>
   , BYVAL hDestWindowOverride AS LONG _                ' __in hDestWindowOverride VT_I4 <Long>
   , BYVAL DirtyRegion AS DWORD _                       ' __in *DirtyRegion VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetBackBuffer ( _                             ' VTable offset = 16
     BYVAL BackBuffer AS LONG _                         ' __in BackBuffer VT_INT <Long>
   , BYVAL BufferType AS LONG _                         ' __in BufferType CONST_D3DBACKBUFFERTYPE <enum>
   ) AS Direct3DSurface8                                ' __retval_out **ppBackBuffer Direct3DSurface8 <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DSwapChain8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DTexture8
' IID = {E4CDD575-2866-4F01-B12E-7EECE1EC9358}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DTexture8_INTERFACE_DEFINED)
    %Direct3DTexture8_INTERFACE_DEFINED = 1

INTERFACE Direct3DTexture8 $IID_Direct3DTexture8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPriority ( _                               ' VTable offset = 28
     BYVAL PriorityNew AS LONG _                        ' __in PriorityNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPriority ( _                               ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD PreLoad ( _                                   ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================
   METHOD SetLOD ( _                                    ' VTable offset = 44
     BYVAL dwLODNew AS LONG _                           ' __in dwLODNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLOD ( _                                    ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLevelCount ( _                             ' VTable offset = 52
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLevelDesc ( _                              ' VTable offset = 56
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   , BYREF pDesc AS D3DSURFACE_DESC _                   ' __out *pDesc D3DSURFACE_DESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSurfaceLevel ( _                           ' VTable offset = 60
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   ) AS Direct3DSurface8                                ' __retval_out **ppSurfaceLevel Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD LockRect ( _                                  ' VTable offset = 64
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   , BYREF LockedRect AS D3DLOCKED_RECT _               ' __in *LockedRect D3DLOCKED_RECT <record>
   , BYVAL RECT AS DWORD _                              ' __in *RECT VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnlockRect ( _                                ' VTable offset = 68
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD AddDirtyRect ( _                              ' VTable offset = 72
     BYVAL DirtyRect AS DWORD _                         ' __in *DirtyRect VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DTexture8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DVolumeTexture8
' IID = {4B8AAAFA-140F-42BA-9131-597EAFAA2EAD}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DVolumeTexture8_INTERFACE_DEFINED)
    %Direct3DVolumeTexture8_INTERFACE_DEFINED = 1

INTERFACE Direct3DVolumeTexture8 $IID_Direct3DVolumeTexture8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPriority ( _                               ' VTable offset = 28
     BYVAL PriorityNew AS LONG _                        ' __in PriorityNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPriority ( _                               ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD PreLoad ( _                                   ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================
   METHOD SetLOD ( _                                    ' VTable offset = 44
     BYVAL dwLODNew AS LONG _                           ' __in dwLODNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLOD ( _                                    ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLevelCount ( _                             ' VTable offset = 52
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLevelDesc ( _                              ' VTable offset = 56
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   , BYREF pDesc AS D3DVOLUME_DESC _                    ' __out *pDesc D3DVOLUME_DESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVolumeLevel ( _                            ' VTable offset = 60
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   ) AS Direct3DVolume8                                 ' __retval_out **ppVolumeLevel Direct3DVolume8 <interface>
   ' =====================================================================================
   METHOD LockBox ( _                                   ' VTable offset = 64
     BYVAL iLevel AS LONG _                             ' __in iLevel VT_INT <Long>
   , BYREF pLockedVolume AS D3DLOCKED_BOX _             ' __in *pLockedVolume D3DLOCKED_BOX <record>
   , BYVAL box AS DWORD _                               ' __inout *box VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnlockBox ( _                                 ' VTable offset = 68
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD AddDirtyBox ( _                               ' VTable offset = 72
     BYREF DirtyBox AS D3DBOX _                         ' __in *DirtyBox D3DBOX <record>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DVolumeTexture8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DVolume8
' IID = {BD7349F5-14F1-42E4-9C79-972380DB40C0}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DVolume8_INTERFACE_DEFINED)
    %Direct3DVolume8_INTERFACE_DEFINED = 1

INTERFACE Direct3DVolume8 $IID_Direct3DVolume8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __inout *Data VT_VOID <Dword>
   , BYREF SizeOfDataa AS LONG _                        ' __inout *SizeOfDataa VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetContainer ( _                              ' VTable offset = 28
     BYREF riid AS DXGUID _                             ' *riid DXGUID <record>
   ) AS IUnknown                                        ' __retval_out **ppContainer VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetDesc ( _                                   ' VTable offset = 32
     BYREF pDesc AS D3DVOLUME_DESC _                    ' __out *pDesc D3DVOLUME_DESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD LockBox ( _                                   ' VTable offset = 36
     BYREF LockedVolume AS D3DLOCKED_BOX _              ' __in *LockedVolume D3DLOCKED_BOX <record>
   , BYVAL box AS DWORD _                               ' __in *box VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnlockBox ( _                                 ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DVolume8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DCubeTexture8
' IID = {3EE5B968-2ACA-4C34-8BB5-7E0C3D19B750}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DCubeTexture8_INTERFACE_DEFINED)
    %Direct3DCubeTexture8_INTERFACE_DEFINED = 1

INTERFACE Direct3DCubeTexture8 $IID_Direct3DCubeTexture8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPriority ( _                               ' VTable offset = 28
     BYVAL PriorityNew AS LONG _                        ' __in PriorityNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPriority ( _                               ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD PreLoad ( _                                   ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================
   METHOD SetLOD ( _                                    ' VTable offset = 44
     BYVAL dwLODNew AS LONG _                           ' __in dwLODNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLOD ( _                                    ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLevelCount ( _                             ' VTable offset = 52
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLevelDesc ( _                              ' VTable offset = 56
     BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   , BYREF pDesc AS D3DSURFACE_DESC _                   ' __out *pDesc D3DSURFACE_DESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCubeMapSurface ( _                         ' VTable offset = 60
     BYVAL FaceType AS LONG _                           ' __in FaceType CONST_D3DCUBEMAP_FACES <enum>
   , BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   ) AS Direct3DSurface8                                ' __retval_out **ppCubeMapSurface Direct3DSurface8 <interface>
   ' =====================================================================================
   METHOD LockRect ( _                                  ' VTable offset = 64
     BYVAL FaceType AS LONG _                           ' __in FaceType CONST_D3DCUBEMAP_FACES <enum>
   , BYVAL Level AS LONG _                              ' __in Level VT_INT <Long>
   , BYREF LockedRect AS D3DLOCKED_RECT _               ' __in *LockedRect D3DLOCKED_RECT <record>
   , BYVAL RECT AS DWORD _                              ' __in *RECT VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnlockRect ( _                                ' VTable offset = 68
     BYVAL FaceType AS LONG _                           ' __in FaceType CONST_D3DCUBEMAP_FACES <enum>
   , BYVAL iLevel AS LONG _                             ' __in iLevel VT_INT <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD AddDirtyRect ( _                              ' VTable offset = 72
     BYVAL FaceType AS LONG _                           ' __in FaceType CONST_D3DCUBEMAP_FACES <enum>
   , BYVAL DirtyRect AS DWORD _                         ' __in *DirtyRect VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DCubeTexture8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DVertexBuffer8
' IID = {8AEEEAC7-05F9-44D4-B591-000B0DF1CB95}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DVertexBuffer8_INTERFACE_DEFINED)
    %Direct3DVertexBuffer8_INTERFACE_DEFINED = 1

INTERFACE Direct3DVertexBuffer8 $IID_Direct3DVertexBuffer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPriority ( _                               ' VTable offset = 28
     BYVAL PriorityNew AS LONG _                        ' __in PriorityNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPriority ( _                               ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD PreLoad ( _                                   ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================
   METHOD Lock ( _                                      ' VTable offset = 44
     BYVAL ByteOffsetToLock AS LONG _                   ' __in ByteOffsetToLock VT_INT <Long>
   , BYVAL ByteSizeToLock AS LONG _                     ' __in ByteSizeToLock VT_INT <Long>
   , BYREF pData AS LONG _                              ' __out *pData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Unlock ( _                                    ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDesc ( _                                   ' VTable offset = 52
     BYREF pDesc AS D3DVERTEXBUFFER_DESC _              ' __out *pDesc D3DVERTEXBUFFER_DESC <record>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DVertexBuffer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DIndexBuffer8
' IID = {0E689C9A-053D-44A0-9D92-DB0E3D750F86}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DIndexBuffer8_INTERFACE_DEFINED)
    %Direct3DIndexBuffer8_INTERFACE_DEFINED = 1

INTERFACE Direct3DIndexBuffer8 $IID_Direct3DIndexBuffer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __inout *Data VT_VOID <Dword>
   , BYREF SizeOfDataa AS LONG _                        ' __inout *SizeOfDataa VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPriority ( _                               ' VTable offset = 28
     BYVAL PriorityNew AS LONG _                        ' __in PriorityNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPriority ( _                               ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD PreLoad ( _                                   ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================
   METHOD Lock ( _                                      ' VTable offset = 44
     BYVAL cbOffsetToLock AS LONG _                     ' __in cbOffsetToLock VT_INT <Long>
   , BYVAL cbSizeToLock AS LONG _                       ' __in cbSizeToLock VT_INT <Long>
   , BYREF pData AS LONG _                              ' __out *pData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Unlock ( _                                    ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDesc ( _                                   ' VTable offset = 52
     BYREF pDesc AS D3DINDEXBUFFER_DESC _               ' __out *pDesc D3DINDEXBUFFER_DESC <record>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DIndexBuffer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DBaseTexture8
' IID = {B4211CFA-51B9-4A9F-AB78-DB99B2BB678E}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DBaseTexture8_INTERFACE_DEFINED)
    %Direct3DBaseTexture8_INTERFACE_DEFINED = 1

INTERFACE Direct3DBaseTexture8 $IID_Direct3DBaseTexture8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPriority ( _                               ' VTable offset = 28
     BYVAL PriorityNew AS LONG _                        ' __in PriorityNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPriority ( _                               ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD PreLoad ( _                                   ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================
   METHOD SetLOD ( _                                    ' VTable offset = 44
     BYVAL LODNew AS LONG _                             ' __in LODNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLOD ( _                                    ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLevelCount ( _                             ' VTable offset = 52
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DBaseTexture8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = Direct3DResource8
' IID = {1B36BB7B-09B7-410A-B445-7D1430D7B33F}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%Direct3DResource8_INTERFACE_DEFINED)
    %Direct3DResource8_INTERFACE_DEFINED = 1

INTERFACE Direct3DResource8 $IID_Direct3DResource8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD SetPrivateData ( _                            ' VTable offset = 16
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL SizeOfData AS LONG _                         ' __in SizeOfData VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPrivateData ( _                            ' VTable offset = 20
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYREF SizeOfData AS LONG _                         ' __inout *SizeOfData VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD FreePrivateData ( _                           ' VTable offset = 24
     BYREF refguid AS DXGUID _                          ' __in *refguid DXGUID <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPriority ( _                               ' VTable offset = 28
     BYVAL PriorityNew AS LONG _                        ' __in PriorityNew VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPriority ( _                               ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD PreLoad ( _                                   ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __Direct3DResource8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSound8
' IID = {9F76FB00-8E92-11D1-8808-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSound8_INTERFACE_DEFINED)
    %DirectSound8_INTERFACE_DEFINED = 1

INTERFACE DirectSound8 $IID_DirectSound8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD CreateSoundBuffer ( _                         ' VTable offset = 20
     BYREF bufferDesc AS DSBUFFERDESC _                 ' __in *bufferDesc DSBUFFERDESC <record>
   ) AS DirectSoundSecondaryBuffer8                     ' __retval_out **soundBuffer DirectSoundSecondaryBuffer8 <interface>
   ' =====================================================================================
   METHOD CreateSoundBufferFromFile ( _                 ' VTable offset = 24
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYREF bufferDesc AS DSBUFFERDESC _                 ' __inout *bufferDesc DSBUFFERDESC <record>
   ) AS DirectSoundSecondaryBuffer8                     ' __retval_out **soundBuffer DirectSoundSecondaryBuffer8 <interface>
   ' =====================================================================================
   METHOD CreateSoundBufferFromResource ( _             ' VTable offset = 28
     BYVAL dll AS WSTRING _                             ' __in dll VT_BSTR
   , BYVAL resourceName AS WSTRING _                    ' __in resourceName VT_BSTR
   , BYREF bufferDesc AS DSBUFFERDESC _                 ' __inout *bufferDesc DSBUFFERDESC <record>
   ) AS DirectSoundSecondaryBuffer8                     ' __retval_out **soundBuffer DirectSoundSecondaryBuffer8 <interface>
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 32
     BYREF Caps AS DSCAPS _                             ' __inout *Caps DSCAPS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD DuplicateSoundBuffer ( _                      ' VTable offset = 36
     BYVAL original AS DirectSoundSecondaryBuffer8 _    ' __in *original DirectSoundSecondaryBuffer8 <interface>
   ) AS DirectSoundSecondaryBuffer8                     ' __retval_out **Duplicate DirectSoundSecondaryBuffer8 <interface>
   ' =====================================================================================
   METHOD SetCooperativeLevel ( _                       ' VTable offset = 40
     BYVAL hwnd AS LONG _                               ' __in hwnd VT_I4 <Long>
   , BYVAL Level AS LONG _                              ' __in Level CONST_DSSCLFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSpeakerConfig ( _                          ' VTable offset = 44
   ) AS LONG                                            ' __retval_out *speakerConfig CONST_DSSPEAKERFLAGS <enum>
   ' =====================================================================================
   METHOD SetSpeakerConfig ( _                          ' VTable offset = 48
     BYVAL speakerConfig AS LONG _                      ' __in speakerConfig CONST_DSSPEAKERFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreatePrimarySoundBuffer ( _                  ' VTable offset = 52
     BYREF bufferDesc AS DSBUFFERDESC _                 ' __in *bufferDesc DSBUFFERDESC <record>
   ) AS DirectSoundPrimaryBuffer8                       ' __retval_out **soundBuffer DirectSoundPrimaryBuffer8 <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSound8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundSecondaryBuffer8
' IID = {9F76FB01-8E92-11D1-8808-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundSecondaryBuffer8_INTERFACE_DEFINED)
    %DirectSoundSecondaryBuffer8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundSecondaryBuffer8 $IID_DirectSoundSecondaryBuffer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetDirectSound3DBuffer ( _                    ' VTable offset = 20
   ) AS DirectSound3DBuffer8                            ' __retval_out **lpdsb DirectSound3DBuffer8 <interface>
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 24
     BYREF Caps AS DSBCAPS _                            ' __inout *Caps DSBCAPS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCurrentPosition ( _                        ' VTable offset = 28
     BYREF cursors AS DSCURSORS _                       ' __out *cursors DSCURSORS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFormat ( _                                 ' VTable offset = 32
     BYREF Format AS DXVB_WAVEFORMATEX _                ' __inout *Format WAVEFORMATEX <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVolume ( _                                 ' VTable offset = 36
   ) AS LONG                                            ' __retval_out *volume VT_I4 <Long>
   ' =====================================================================================
   METHOD GetPan ( _                                    ' VTable offset = 40
   ) AS LONG                                            ' __retval_out *pan VT_I4 <Long>
   ' =====================================================================================
   METHOD GetFrequency ( _                              ' VTable offset = 44
   ) AS LONG                                            ' __retval_out *frequency VT_I4 <Long>
   ' =====================================================================================
   METHOD GetStatus ( _                                 ' VTable offset = 48
   ) AS LONG                                            ' __retval_out *status CONST_DSBSTATUSFLAGS <enum>
   ' =====================================================================================
   METHOD Initialize ( _                                ' VTable offset = 52
     BYVAL directSound AS DirectSound8 _                ' __in *directSound DirectSound8 <interface>
   , BYREF bufferDesc AS DSBUFFERDESC _                 ' __inout *bufferDesc DSBUFFERDESC <record>
   , BYREF wbuf AS BYTE _                               ' __inout *wbuf VT_UI1 <Byte>
   )                                                    ' void
   ' =====================================================================================
   METHOD WriteBuffer ( _                               ' VTable offset = 56
     BYVAL Start AS LONG _                              ' __in Start VT_I4 <Long>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   , BYVAL Buffer AS DWORD _                            ' __in *Buffer VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DSBLOCKFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD ReadBuffer ( _                                ' VTable offset = 60
     BYVAL Start AS LONG _                              ' __in Start VT_I4 <Long>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   , BYVAL Buffer AS DWORD _                            ' __in *Buffer VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DSBLOCKFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD Play ( _                                      ' VTable offset = 64
     BYVAL flags AS LONG _                              ' __in flags CONST_DSBPLAYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetCurrentPosition ( _                        ' VTable offset = 68
     BYVAL newPosition AS LONG _                        ' __in newPosition VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetVolume ( _                                 ' VTable offset = 72
     BYVAL volume AS LONG _                             ' __in volume VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPan ( _                                    ' VTable offset = 76
     BYVAL pan AS LONG _                                ' __in pan VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetFrequency ( _                              ' VTable offset = 80
     BYVAL frequency AS LONG _                          ' __in frequency VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Stop ( _                                      ' VTable offset = 84
   )                                                    ' void
   ' =====================================================================================
   METHOD Restore ( _                                   ' VTable offset = 88
   )                                                    ' void
   ' =====================================================================================
   METHOD SetNotificationPositions ( _                  ' VTable offset = 92
     BYVAL nElements AS LONG _                          ' nElements VT_I4 <Long>
   , BYREF psa AS DWORD _                               ' **psa VT_SAFEARRAY
   )                                                    ' void
   ' =====================================================================================
   METHOD SaveToFile ( _                                ' VTable offset = 96
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   )                                                    ' void
   ' =====================================================================================
   METHOD SetFX ( _                                     ' VTable offset = 100
     BYVAL lEffectsCount AS LONG _                      ' __in lEffectsCount VT_I4 <Long>
   , BYREF Buffers AS DWORD _                           ' **Buffers VT_SAFEARRAY
   , BYREF lResultIDs AS DWORD _                        ' **lResultIDs VT_SAFEARRAY
   )                                                    ' void
   ' =====================================================================================
   METHOD AcquireResources ( _                          ' VTable offset = 104
     BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYREF lEffectsResults AS DWORD _                   ' __inout **lEffectsResults VT_SAFEARRAY
   )                                                    ' void
   ' =====================================================================================
   METHOD GetObjectinPath ( _                           ' VTable offset = 108
     BYVAL guidFX AS WSTRING _                          ' __in guidFX VT_BSTR
   , BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   , BYVAL iidInterface AS WSTRING _                    ' __in iidInterface VT_BSTR
   ) AS IUnknown                                        ' __retval_out **ret VT_UNKNOWN <IUnknown>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundSecondaryBuffer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSound3DBuffer8
' IID = {9F76FB03-8E92-11D1-8808-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSound3DBuffer8_INTERFACE_DEFINED)
    %DirectSound3DBuffer8_INTERFACE_DEFINED = 1

INTERFACE DirectSound3DBuffer8 $IID_DirectSound3DBuffer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetDirectSoundBuffer ( _                      ' VTable offset = 20
   ) AS DirectSoundSecondaryBuffer8                     ' __retval_out **retVal DirectSoundSecondaryBuffer8 <interface>
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
     BYREF Buffer AS DS3DBUFFER _                       ' __inout *Buffer DS3DBUFFER <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConeAngles ( _                             ' VTable offset = 28
     BYREF inCone AS LONG _                             ' __inout *inCone VT_I4 <Long>
   , BYREF outCone AS LONG _                            ' __inout *outCone VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConeOrientation ( _                        ' VTable offset = 32
     BYREF orientation AS D3DVECTOR _                   ' __inout *orientation D3DVECTOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConeOutsideVolume ( _                      ' VTable offset = 36
   ) AS LONG                                            ' __retval_out *coneOutsideVolume VT_I4 <Long>
   ' =====================================================================================
   METHOD GetMaxDistance ( _                            ' VTable offset = 40
   ) AS SINGLE                                          ' __retval_out *maxDistance VT_R4 <Single>
   ' =====================================================================================
   METHOD GetMinDistance ( _                            ' VTable offset = 44
   ) AS SINGLE                                          ' __retval_out *minDistance VT_R4 <Single>
   ' =====================================================================================
   METHOD GetMode ( _                                   ' VTable offset = 48
   ) AS LONG                                            ' __retval_out *Mode CONST_DS3DMODEFLAGS <enum>
   ' =====================================================================================
   METHOD GetPosition ( _                               ' VTable offset = 52
     BYREF Position AS D3DVECTOR _                      ' __inout *Position D3DVECTOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVelocity ( _                               ' VTable offset = 56
     BYREF velocity AS D3DVECTOR _                      ' __inout *velocity D3DVECTOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 60
     BYREF Buffer AS DS3DBUFFER _                       ' __in *Buffer DS3DBUFFER <record>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetConeAngles ( _                             ' VTable offset = 64
     BYVAL inCone AS LONG _                             ' __in inCone VT_I4 <Long>
   , BYVAL outCone AS LONG _                            ' __in outCone VT_I4 <Long>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetConeOrientation ( _                        ' VTable offset = 68
     BYVAL x AS SINGLE _                                ' __in x VT_R4 <Single>
   , BYVAL y AS SINGLE _                                ' __in y VT_R4 <Single>
   , BYVAL z AS SINGLE _                                ' __in z VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetConeOutsideVolume ( _                      ' VTable offset = 72
     BYVAL coneOutsideVolume AS LONG _                  ' __in coneOutsideVolume VT_I4 <Long>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetMaxDistance ( _                            ' VTable offset = 76
     BYVAL maxDistance AS SINGLE _                      ' __in maxDistance VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetMinDistance ( _                            ' VTable offset = 80
     BYVAL minDistance AS SINGLE _                      ' __in minDistance VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetMode ( _                                   ' VTable offset = 84
     BYVAL Mode AS LONG _                               ' __in Mode CONST_DS3DMODEFLAGS <enum>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPosition ( _                               ' VTable offset = 88
     BYVAL x AS SINGLE _                                ' __in x VT_R4 <Single>
   , BYVAL y AS SINGLE _                                ' __in y VT_R4 <Single>
   , BYVAL z AS SINGLE _                                ' __in z VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetVelocity ( _                               ' VTable offset = 92
     BYVAL x AS SINGLE _                                ' __in x VT_R4 <Single>
   , BYVAL y AS SINGLE _                                ' __in y VT_R4 <Single>
   , BYVAL z AS SINGLE _                                ' __in z VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSound3DBuffer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundPrimaryBuffer8
' IID = {4E6F040E-03FB-4BA1-897C-2265700D5368}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundPrimaryBuffer8_INTERFACE_DEFINED)
    %DirectSoundPrimaryBuffer8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundPrimaryBuffer8 $IID_DirectSoundPrimaryBuffer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetDirectSound3DListener ( _                  ' VTable offset = 20
   ) AS DirectSound3DListener8                          ' __retval_out **lpdsl DirectSound3DListener8 <interface>
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 24
     BYREF Caps AS DSBCAPS _                            ' __inout *Caps DSBCAPS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCurrentPosition ( _                        ' VTable offset = 28
     BYREF cursors AS DSCURSORS _                       ' __out *cursors DSCURSORS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFormat ( _                                 ' VTable offset = 32
     BYREF Format AS DXVB_WAVEFORMATEX _                ' __inout *Format WAVEFORMATEX <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetVolume ( _                                 ' VTable offset = 36
   ) AS LONG                                            ' __retval_out *volume VT_I4 <Long>
   ' =====================================================================================
   METHOD GetPan ( _                                    ' VTable offset = 40
   ) AS LONG                                            ' __retval_out *pan VT_I4 <Long>
   ' =====================================================================================
   METHOD GetStatus ( _                                 ' VTable offset = 44
   ) AS LONG                                            ' __retval_out *status CONST_DSBSTATUSFLAGS <enum>
   ' =====================================================================================
   METHOD Initialize ( _                                ' VTable offset = 48
     BYVAL directSound AS DirectSound8 _                ' __in *directSound DirectSound8 <interface>
   , BYREF bufferDesc AS DSBUFFERDESC _                 ' __inout *bufferDesc DSBUFFERDESC <record>
   , BYREF wbuf AS BYTE _                               ' __inout *wbuf VT_UI1 <Byte>
   )                                                    ' void
   ' =====================================================================================
   METHOD WriteBuffer ( _                               ' VTable offset = 52
     BYVAL Start AS LONG _                              ' __in Start VT_I4 <Long>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   , BYVAL Buffer AS DWORD _                            ' __in *Buffer VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DSBLOCKFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD ReadBuffer ( _                                ' VTable offset = 56
     BYVAL Start AS LONG _                              ' __in Start VT_I4 <Long>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   , BYVAL Buffer AS DWORD _                            ' __in *Buffer VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DSBLOCKFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD Play ( _                                      ' VTable offset = 60
     BYVAL flags AS LONG _                              ' __in flags CONST_DSBPLAYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetFormat ( _                                 ' VTable offset = 64
     BYREF Format AS DXVB_WAVEFORMATEX _                ' __in *Format WAVEFORMATEX <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetVolume ( _                                 ' VTable offset = 68
     BYVAL volume AS LONG _                             ' __in volume VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPan ( _                                    ' VTable offset = 72
     BYVAL pan AS LONG _                                ' __in pan VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Stop ( _                                      ' VTable offset = 76
   )                                                    ' void
   ' =====================================================================================
   METHOD Restore ( _                                   ' VTable offset = 80
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundPrimaryBuffer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSound3DListener8
' IID = {9F76FB02-8E92-11D1-8808-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSound3DListener8_INTERFACE_DEFINED)
    %DirectSound3DListener8_INTERFACE_DEFINED = 1

INTERFACE DirectSound3DListener8 $IID_DirectSound3DListener8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 20
     BYREF listener AS DS3DLISTENER _                   ' __inout *listener DS3DLISTENER <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDistanceFactor ( _                         ' VTable offset = 24
   ) AS SINGLE                                          ' __retval_out *distanceFactor VT_R4 <Single>
   ' =====================================================================================
   METHOD GetDopplerFactor ( _                          ' VTable offset = 28
   ) AS SINGLE                                          ' __retval_out *dopplerFactor VT_R4 <Single>
   ' =====================================================================================
   METHOD GetOrientation ( _                            ' VTable offset = 32
     BYREF orientFront AS D3DVECTOR _                   ' __inout *orientFront D3DVECTOR <record>
   , BYREF orientTop AS D3DVECTOR _                     ' __inout *orientTop D3DVECTOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPosition ( _                               ' VTable offset = 36
     BYREF Position AS D3DVECTOR _                      ' __out *Position D3DVECTOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetRolloffFactor ( _                          ' VTable offset = 40
   ) AS SINGLE                                          ' __retval_out *rolloffFactor VT_R4 <Single>
   ' =====================================================================================
   METHOD GetVelocity ( _                               ' VTable offset = 44
   ) AS D3DVECTOR                                       ' __retval_out *velocity D3DVECTOR <record>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 48
     BYREF listener AS DS3DLISTENER _                   ' __in *listener DS3DLISTENER <record>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetDistanceFactor ( _                         ' VTable offset = 52
     BYVAL distanceFactor AS SINGLE _                   ' __in distanceFactor VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetDopplerFactor ( _                          ' VTable offset = 56
     BYVAL dopplerFactor AS SINGLE _                    ' __in dopplerFactor VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetOrientation ( _                            ' VTable offset = 60
     BYVAL xFront AS SINGLE _                           ' __in xFront VT_R4 <Single>
   , BYVAL yFront AS SINGLE _                           ' __in yFront VT_R4 <Single>
   , BYVAL zFront AS SINGLE _                           ' __in zFront VT_R4 <Single>
   , BYVAL xTop AS SINGLE _                             ' __in xTop VT_R4 <Single>
   , BYVAL yTop AS SINGLE _                             ' __in yTop VT_R4 <Single>
   , BYVAL zTop AS SINGLE _                             ' __in zTop VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetPosition ( _                               ' VTable offset = 64
     BYVAL x AS SINGLE _                                ' __in x VT_R4 <Single>
   , BYVAL y AS SINGLE _                                ' __in y VT_R4 <Single>
   , BYVAL z AS SINGLE _                                ' __in z VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetRolloffFactor ( _                          ' VTable offset = 68
     BYVAL rolloffFactor AS SINGLE _                    ' __in rolloffFactor VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetVelocity ( _                               ' VTable offset = 72
     BYVAL x AS SINGLE _                                ' __in x VT_R4 <Single>
   , BYVAL y AS SINGLE _                                ' __in y VT_R4 <Single>
   , BYVAL z AS SINGLE _                                ' __in z VT_R4 <Single>
   , BYVAL applyFlag AS LONG _                          ' __in applyFlag CONST_DS3DAPPLYFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CommitDeferredSettings ( _                    ' VTable offset = 76
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDirectSoundBuffer ( _                      ' VTable offset = 80
   ) AS DirectSoundPrimaryBuffer8                       ' __retval_out **retVal DirectSoundPrimaryBuffer8 <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSound3DListener8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundCapture8
' IID = {9F76FB04-8E92-11D1-8808-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundCapture8_INTERFACE_DEFINED)
    %DirectSoundCapture8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundCapture8 $IID_DirectSoundCapture8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD CreateCaptureBuffer ( _                       ' VTable offset = 20
     BYREF bufferDesc AS DSCBUFFERDESC _                ' __in *bufferDesc DSCBUFFERDESC <record>
   ) AS DirectSoundCaptureBuffer8                       ' __retval_out **ret DirectSoundCaptureBuffer8 <interface>
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 24
     BYREF Caps AS DSCCAPS _                            ' __inout *Caps DSCCAPS <record>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundCapture8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundCaptureBuffer8
' IID = {9F76FB05-8E92-11D1-8808-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundCaptureBuffer8_INTERFACE_DEFINED)
    %DirectSoundCaptureBuffer8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundCaptureBuffer8 $IID_DirectSoundCaptureBuffer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 20
     BYREF Caps AS DSCBCAPS _                           ' __inout *Caps DSCBCAPS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCurrentPosition ( _                        ' VTable offset = 24
     BYREF cursors AS DSCURSORS _                       ' __inout *cursors DSCURSORS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFormat ( _                                 ' VTable offset = 28
     BYREF waveformat AS DXVB_WAVEFORMATEX _            ' __inout *waveformat WAVEFORMATEX <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetStatus ( _                                 ' VTable offset = 32
   ) AS LONG                                            ' __retval_out *status CONST_DSCBSTATUSFLAGS <enum>
   ' =====================================================================================
   METHOD Initialize ( _                                ' VTable offset = 36
     BYVAL captureBuffer AS DirectSoundCaptureBuffer8 _ ' __in *captureBuffer DirectSoundCaptureBuffer8 <interface>
   , BYREF bufferDesc AS DSCBUFFERDESC _                ' __in *bufferDesc DSCBUFFERDESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD Start ( _                                     ' VTable offset = 40
     BYVAL flags AS LONG _                              ' __in flags CONST_DSCBSTARTFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD Stop ( _                                      ' VTable offset = 44
   )                                                    ' void
   ' =====================================================================================
   METHOD WriteBuffer ( _                               ' VTable offset = 48
     BYVAL Start AS LONG _                              ' __in Start VT_I4 <Long>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   , BYVAL Buffer AS DWORD _                            ' __in *Buffer VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DSCBLOCKFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD ReadBuffer ( _                                ' VTable offset = 52
     BYVAL Start AS LONG _                              ' __in Start VT_I4 <Long>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   , BYVAL Buffer AS DWORD _                            ' __in *Buffer VT_VOID <Dword>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DSCBLOCKFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetNotificationPositions ( _                  ' VTable offset = 56
     BYVAL nElements AS LONG _                          ' nElements VT_I4 <Long>
   , BYREF psa AS DWORD _                               ' **psa VT_SAFEARRAY
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundCaptureBuffer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundEnum8
' IID = {9F76FB07-8E92-11D1-8808-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundEnum8_INTERFACE_DEFINED)
    %DirectSoundEnum8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundEnum8 $IID_DirectSoundEnum8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetGuid ( _                                   ' VTable offset = 12
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *guid VT_BSTR
   ' =====================================================================================
   METHOD GetDescription ( _                            ' VTable offset = 16
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *guid VT_BSTR
   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 20
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *guid VT_BSTR
   ' =====================================================================================
   METHOD GetCount ( _                                  ' VTable offset = 24
   ) AS LONG                                            ' __retval_out *count VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundEnum8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXGargle8
' IID = {B9B28963-4ADC-44F0-873F-9955244C9BD0}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXGargle8_INTERFACE_DEFINED)
    %DirectSoundFXGargle8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXGargle8 $IID_DirectSoundFXGargle8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXGARGLE _                       ' __inout *params DSFXGARGLE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXGARGLE                                      ' __retval_out *params DSFXGARGLE <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXGargle8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXChorus8
' IID = {E53AC43D-651F-400D-B01F-E8A14512C6D6}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXChorus8_INTERFACE_DEFINED)
    %DirectSoundFXChorus8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXChorus8 $IID_DirectSoundFXChorus8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXCHORUS _                       ' __inout *params DSFXCHORUS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXCHORUS                                      ' __retval_out *params DSFXCHORUS <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXChorus8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXFlanger8
' IID = {9F9C7BB0-F4EA-472B-89A8-36FAADBCE26E}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXFlanger8_INTERFACE_DEFINED)
    %DirectSoundFXFlanger8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXFlanger8 $IID_DirectSoundFXFlanger8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXFLANGER _                      ' __inout *params DSFXFLANGER <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXFLANGER                                     ' __retval_out *params DSFXFLANGER <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXFlanger8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXEcho8
' IID = {E852583A-526F-4875-842B-8DB091A20FBC}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXEcho8_INTERFACE_DEFINED)
    %DirectSoundFXEcho8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXEcho8 $IID_DirectSoundFXEcho8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXECHO _                         ' __inout *params DSFXECHO <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXECHO                                        ' __retval_out *params DSFXECHO <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXEcho8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXDistortion8
' IID = {3CE4D8D6-B301-49B4-9C63-9A989CA40388}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXDistortion8_INTERFACE_DEFINED)
    %DirectSoundFXDistortion8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXDistortion8 $IID_DirectSoundFXDistortion8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXDISTORTION _                   ' __inout *params DSFXDISTORTION <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXDISTORTION                                  ' __retval_out *params DSFXDISTORTION <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXDistortion8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXCompressor8
' IID = {F902315C-D34A-4133-BD65-4069230811DD}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXCompressor8_INTERFACE_DEFINED)
    %DirectSoundFXCompressor8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXCompressor8 $IID_DirectSoundFXCompressor8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXCOMPRESSOR _                   ' __inout *params DSFXCOMPRESSOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXCOMPRESSOR                                  ' __retval_out *params DSFXCOMPRESSOR <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXCompressor8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXI3DL2Reverb8
' IID = {542C5D87-47FC-457B-859A-1A45BBF71A63}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXI3DL2Reverb8_INTERFACE_DEFINED)
    %DirectSoundFXI3DL2Reverb8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXI3DL2Reverb8 $IID_DirectSoundFXI3DL2Reverb8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXI3DL2REVERB _                  ' __inout *params DSFXI3DL2REVERB <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXI3DL2REVERB                                 ' __retval_out *params DSFXI3DL2REVERB <record>
   ' =====================================================================================
   METHOD SetPreset ( _                                 ' VTable offset = 28
     BYVAL lPreset AS LONG _                            ' __in lPreset CONST_DSFX_I3DL2_ENVIRONMENT_PRESETS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetPreset ( _                                 ' VTable offset = 32
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD SetQuality ( _                                ' VTable offset = 36
     BYVAL lQuality AS LONG _                           ' __in lQuality CONST_DSFX_I3DL2REVERB_QUALITY <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetQuality ( _                                ' VTable offset = 40
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXI3DL2Reverb8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXParamEq8
' IID = {CD83B9C1-B4E9-416B-97F5-0642DC952301}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXParamEq8_INTERFACE_DEFINED)
    %DirectSoundFXParamEq8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXParamEq8 $IID_DirectSoundFXParamEq8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXPARAMEQ _                      ' __inout *params DSFXPARAMEQ <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXPARAMEQ                                     ' __retval_out *params DSFXPARAMEQ <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXParamEq8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectSoundFXWavesReverb8
' IID = {A4D4D800-94BE-4C33-9A0E-EBA0696A63A9}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectSoundFXWavesReverb8_INTERFACE_DEFINED)
    %DirectSoundFXWavesReverb8_INTERFACE_DEFINED = 1

INTERFACE DirectSoundFXWavesReverb8 $IID_DirectSoundFXWavesReverb8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SetAllParameters ( _                          ' VTable offset = 20
     BYREF params AS DSFXWAVESREVERB _                  ' __inout *params DSFXWAVESREVERB <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAllParameters ( _                          ' VTable offset = 24
   ) AS DSFXWAVESREVERB                                 ' __retval_out *params DSFXWAVESREVERB <record>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectSoundFXWavesReverb8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicLoader8
' IID = {FAFA35A0-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicLoader8_INTERFACE_DEFINED)
    %DirectMusicLoader8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicLoader8 $IID_DirectMusicLoader8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD LoadSegment ( _                               ' VTable offset = 20
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   ) AS DirectMusicSegment8                             ' __retval_out **ret DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD LoadStyle ( _                                 ' VTable offset = 24
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   ) AS DirectMusicStyle8                               ' __retval_out **ret DirectMusicStyle8 <interface>
   ' =====================================================================================
   METHOD LoadBand ( _                                  ' VTable offset = 28
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   ) AS DirectMusicBand8                                ' __retval_out **ret DirectMusicBand8 <interface>
   ' =====================================================================================
   METHOD LoadCollection ( _                            ' VTable offset = 32
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   ) AS DirectMusicCollection8                          ' __retval_out **ret DirectMusicCollection8 <interface>
   ' =====================================================================================
   METHOD LoadSegmentFromResource ( _                   ' VTable offset = 36
     BYVAL moduleName AS WSTRING _                      ' __in moduleName VT_BSTR
   , BYVAL resourceName AS WSTRING _                    ' __in resourceName VT_BSTR
   ) AS DirectMusicSegment8                             ' __retval_out **ret DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD LoadStyleFromResource ( _                     ' VTable offset = 40
     BYVAL moduleName AS WSTRING _                      ' __in moduleName VT_BSTR
   , BYVAL resourceName AS WSTRING _                    ' __in resourceName VT_BSTR
   ) AS DirectMusicStyle8                               ' __retval_out **ret DirectMusicStyle8 <interface>
   ' =====================================================================================
   METHOD LoadBandFromResource ( _                      ' VTable offset = 44
     BYVAL moduleName AS WSTRING _                      ' __in moduleName VT_BSTR
   , BYVAL resourceName AS WSTRING _                    ' __in resourceName VT_BSTR
   ) AS DirectMusicBand8                                ' __retval_out **ret DirectMusicBand8 <interface>
   ' =====================================================================================
   METHOD LoadCollectionFromResource ( _                ' VTable offset = 48
     BYVAL moduleName AS WSTRING _                      ' __in moduleName VT_BSTR
   , BYVAL resourceName AS WSTRING _                    ' __in resourceName VT_BSTR
   ) AS DirectMusicCollection8                          ' __retval_out **ret DirectMusicCollection8 <interface>
   ' =====================================================================================
   METHOD SetSearchDirectory ( _                        ' VTable offset = 52
     BYVAL dir AS WSTRING _                             ' __in dir VT_BSTR
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadChordMap ( _                              ' VTable offset = 56
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   ) AS DirectMusicChordMap8                            ' __retval_out **ret DirectMusicChordMap8 <interface>
   ' =====================================================================================
   METHOD LoadChordMapFromResource ( _                  ' VTable offset = 60
     BYVAL moduleName AS WSTRING _                      ' __in moduleName VT_BSTR
   , BYVAL resourceName AS WSTRING _                    ' __in resourceName VT_BSTR
   ) AS DirectMusicChordMap8                            ' __retval_out **ret DirectMusicChordMap8 <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicLoader8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicSegment8
' IID = {FAFA35A1-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicSegment8_INTERFACE_DEFINED)
    %DirectMusicSegment8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicSegment8 $IID_DirectMusicSegment8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD Clone ( _                                     ' VTable offset = 20
     BYVAL mtStart AS LONG _                            ' __in mtStart VT_I4 <Long>
   , BYVAL mtEnd AS LONG _                              ' __in mtEnd VT_I4 <Long>
   ) AS DirectMusicSegment8                             ' __retval_out **ppSegment DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD SetStartPoint ( _                             ' VTable offset = 24
     BYVAL mtStart AS LONG _                            ' __in mtStart VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetStartPoint ( _                             ' VTable offset = 28
   ) AS LONG                                            ' __retval_out *pmtStart VT_I4 <Long>
   ' =====================================================================================
   METHOD SetLoopPoints ( _                             ' VTable offset = 32
     BYVAL mtStart AS LONG _                            ' __in mtStart VT_I4 <Long>
   , BYVAL mtEnd AS LONG _                              ' __in mtEnd VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetLoopPointStart ( _                         ' VTable offset = 36
   ) AS LONG                                            ' __retval_out *pmtStart VT_I4 <Long>
   ' =====================================================================================
   METHOD GetLoopPointEnd ( _                           ' VTable offset = 40
   ) AS LONG                                            ' __retval_out *pmtEnd VT_I4 <Long>
   ' =====================================================================================
   METHOD GetLength ( _                                 ' VTable offset = 44
   ) AS LONG                                            ' __retval_out *pmtLength VT_I4 <Long>
   ' =====================================================================================
   METHOD SetLength ( _                                 ' VTable offset = 48
     BYVAL mtLength AS LONG _                           ' __in mtLength VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetRepeats ( _                                ' VTable offset = 52
   ) AS LONG                                            ' __retval_out *lRepeats VT_I4 <Long>
   ' =====================================================================================
   METHOD SetRepeats ( _                                ' VTable offset = 56
     BYVAL lRepeats AS LONG _                           ' __in lRepeats VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Download ( _                                  ' VTable offset = 60
     BYVAL downloadpath AS IUnknown _                   ' __in *downloadpath VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD Unload ( _                                    ' VTable offset = 64
     BYVAL downloadpath AS IUnknown _                   ' __in *downloadpath VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetAutoDownloadEnable ( _                     ' VTable offset = 68
     BYVAL b AS INTEGER _                               ' __in b VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetTempoEnable ( _                            ' VTable offset = 72
     BYVAL b AS INTEGER _                               ' __in b VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetTimeSigEnable ( _                          ' VTable offset = 76
     BYVAL b AS INTEGER _                               ' __in b VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetStandardMidiFile ( _                       ' VTable offset = 80
   )                                                    ' void
   ' =====================================================================================
   METHOD ConnectToCollection ( _                       ' VTable offset = 84
     BYVAL c AS DirectMusicCollection8 _                ' __in *c DirectMusicCollection8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAudioPathConfig ( _                        ' VTable offset = 88
   ) AS IUnknown                                        ' __retval_out **ret VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetStyle ( _                                  ' VTable offset = 92
     BYVAL lTrack AS LONG _                             ' __in lTrack VT_I4 <Long>
   ) AS DirectMusicStyle8                               ' __retval_out **ret DirectMusicStyle8 <interface>
   ' =====================================================================================
   METHOD GetChordMap ( _                               ' VTable offset = 96
     BYVAL lTrack AS LONG _                             ' __in lTrack VT_I4 <Long>
   , BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYREF mtUntil AS LONG _                            ' __inout *mtUntil VT_I4 <Long>
   ) AS DirectMusicChordMap8                            ' __retval_out **ret DirectMusicChordMap8 <interface>
   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 100
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicSegment8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicCollection8
' IID = {FAFA35A8-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicCollection8_INTERFACE_DEFINED)
    %DirectMusicCollection8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicCollection8 $IID_DirectMusicCollection8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicCollection8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicStyle8
' IID = {FAFA35A4-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicStyle8_INTERFACE_DEFINED)
    %DirectMusicStyle8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicStyle8 $IID_DirectMusicStyle8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetBandName ( _                               ' VTable offset = 20
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetBandCount ( _                              ' VTable offset = 24
   ) AS LONG                                            ' __retval_out *count VT_I4 <Long>
   ' =====================================================================================
   METHOD GetBand ( _                                   ' VTable offset = 28
     BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   ) AS DirectMusicBand8                                ' __retval_out **ret DirectMusicBand8 <interface>
   ' =====================================================================================
   METHOD GetDefaultBand ( _                            ' VTable offset = 32
   ) AS DirectMusicBand8                                ' __retval_out **ret DirectMusicBand8 <interface>
   ' =====================================================================================
   METHOD GetMotifName ( _                              ' VTable offset = 36
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetMotifCount ( _                             ' VTable offset = 40
   ) AS LONG                                            ' __retval_out *count VT_I4 <Long>
   ' =====================================================================================
   METHOD GetMotif ( _                                  ' VTable offset = 44
     BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   ) AS DirectMusicSegment8                             ' __retval_out **ret DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD GetTimeSignature ( _                          ' VTable offset = 48
     BYREF pTimeSig AS DMUS_TIMESIGNATURE _             ' __inout *pTimeSig DMUS_TIMESIGNATURE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetTempo ( _                                  ' VTable offset = 52
   ) AS DOUBLE                                          ' __retval_out *pTempo VT_R8 <Double>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicStyle8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicBand8
' IID = {FAFA35A3-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicBand8_INTERFACE_DEFINED)
    %DirectMusicBand8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicBand8 $IID_DirectMusicBand8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD CreateSegment ( _                             ' VTable offset = 20
   ) AS DirectMusicSegment8                             ' __retval_out **ret DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD Download ( _                                  ' VTable offset = 24
     BYVAL downloadpath AS DirectMusicPerformance8 _    ' __in *downloadpath DirectMusicPerformance8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD Unload ( _                                    ' VTable offset = 28
     BYVAL downloadpath AS DirectMusicPerformance8 _    ' __in *downloadpath DirectMusicPerformance8 <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicBand8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicPerformance8
' IID = {FAFA35A7-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicPerformance8_INTERFACE_DEFINED)
    %DirectMusicPerformance8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicPerformance8 $IID_DirectMusicPerformance8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD CloseDown ( _                                 ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSegmentState ( _                           ' VTable offset = 24
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   ) AS DirectMusicSegmentState8                        ' __retval_out **ret DirectMusicSegmentState8 <interface>
   ' =====================================================================================
   METHOD Invalidate ( _                                ' VTable offset = 28
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD IsPlaying ( _                                 ' VTable offset = 32
     BYVAL segment AS DirectMusicSegment8 _             ' __in *segment DirectMusicSegment8 <interface>
   , BYVAL segmentState AS DirectMusicSegmentState8 _   ' __in *segmentState DirectMusicSegmentState8 <interface>
   ) AS INTEGER                                         ' __retval_out *b VT_BOOL <Integer>
   ' =====================================================================================
   METHOD AddNotificationType ( _                       ' VTable offset = 36
     BYVAL Type AS LONG _                               ' __in Type CONST_DMUS_NOTIFICATION_TYPE <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD RemoveNotificationType ( _                    ' VTable offset = 40
     BYVAL Type AS LONG _                               ' __in Type CONST_DMUS_NOTIFICATION_TYPE <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetNotificationHandle ( _                     ' VTable offset = 44
     BYVAL hnd AS LONG _                                ' __in hnd VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNotificationPMSG ( _                       ' VTable offset = 48
     BYREF message AS DMUS_NOTIFICATION_PMSG _          ' __inout *message DMUS_NOTIFICATION_PMSG <record>
   ) AS INTEGER                                         ' __retval_out *success VT_BOOL <Integer>
   ' =====================================================================================
   METHOD MusicToClockTime ( _                          ' VTable offset = 52
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ctTime VT_I4 <Long>
   ' =====================================================================================
   METHOD ClockToMusicTime ( _                          ' VTable offset = 56
     BYVAL ctTime AS LONG _                             ' __in ctTime VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *mtTime VT_I4 <Long>
   ' =====================================================================================
   METHOD GetMusicTime ( _                              ' VTable offset = 60
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetClockTime ( _                              ' VTable offset = 64
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetPrepareTime ( _                            ' VTable offset = 68
   ) AS LONG                                            ' __retval_out *lMilliSeconds VT_I4 <Long>
   ' =====================================================================================
   METHOD GetBumperLength ( _                           ' VTable offset = 72
   ) AS LONG                                            ' __retval_out *lMilliSeconds VT_I4 <Long>
   ' =====================================================================================
   METHOD GetLatencyTime ( _                            ' VTable offset = 76
   ) AS LONG                                            ' __retval_out *ctTime VT_I4 <Long>
   ' =====================================================================================
   METHOD GetQueueTime ( _                              ' VTable offset = 80
   ) AS LONG                                            ' __retval_out *ctTime VT_I4 <Long>
   ' =====================================================================================
   METHOD GetResolvedTime ( _                           ' VTable offset = 84
     BYVAL ctTime AS LONG _                             ' __in ctTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD SetPrepareTime ( _                            ' VTable offset = 88
     BYVAL lMilliSeconds AS LONG _                      ' __in lMilliSeconds VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetBumperLength ( _                           ' VTable offset = 92
     BYVAL lMilliSeconds AS LONG _                      ' __in lMilliSeconds VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD AdjustTime ( _                                ' VTable offset = 96
     BYVAL tAmount AS LONG _                            ' __in tAmount VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetMasterAutoDownload ( _                     ' VTable offset = 100
     BYVAL b AS INTEGER _                               ' __in b VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMasterAutoDownload ( _                     ' VTable offset = 104
   ) AS INTEGER                                         ' __retval_out *b VT_BOOL <Integer>
   ' =====================================================================================
   METHOD SetMasterTempo ( _                            ' VTable offset = 108
     BYVAL tempo AS SINGLE _                            ' __in tempo VT_R4 <Single>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMasterTempo ( _                            ' VTable offset = 112
   ) AS SINGLE                                          ' __retval_out *tempo VT_R4 <Single>
   ' =====================================================================================
   METHOD SetMasterVolume ( _                           ' VTable offset = 116
     BYVAL vol AS LONG _                                ' __in vol VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMasterVolume ( _                           ' VTable offset = 120
   ) AS LONG                                            ' __retval_out *v VT_I4 <Long>
   ' =====================================================================================
   METHOD SetMasterGrooveLevel ( _                      ' VTable offset = 124
     BYVAL Level AS INTEGER _                           ' __in Level VT_I2 <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMasterGrooveLevel ( _                      ' VTable offset = 128
   ) AS INTEGER                                         ' __retval_out *Level VT_I2 <Integer>
   ' =====================================================================================
   METHOD Reset ( _                                     ' VTable offset = 132
     BYVAL resetflags AS LONG _                         ' __in resetflags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetStyle ( _                                  ' VTable offset = 136
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYREF mtUntil AS LONG _                            ' __inout *mtUntil VT_I4 <Long>
   ) AS DirectMusicStyle8                               ' __retval_out **ret DirectMusicStyle8 <interface>
   ' =====================================================================================
   METHOD GetChordMap ( _                               ' VTable offset = 140
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYREF mtUntil AS LONG _                            ' __inout *mtUntil VT_I4 <Long>
   ) AS DirectMusicChordMap8                            ' __retval_out **ret DirectMusicChordMap8 <interface>
   ' =====================================================================================
   METHOD GetCommand ( _                                ' VTable offset = 144
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYREF mtUntil AS LONG _                            ' __inout *mtUntil VT_I4 <Long>
   ) AS BYTE                                            ' __retval_out *command VT_UI1 <Byte>
   ' =====================================================================================
   METHOD GetGrooveLevel ( _                            ' VTable offset = 148
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYREF mtUntil AS LONG _                            ' __inout *mtUntil VT_I4 <Long>
   ) AS BYTE                                            ' __retval_out *Level VT_UI1 <Byte>
   ' =====================================================================================
   METHOD GetTempo ( _                                  ' VTable offset = 152
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYREF mtUntil AS LONG _                            ' __inout *mtUntil VT_I4 <Long>
   ) AS DOUBLE                                          ' __retval_out *tempo VT_R8 <Double>
   ' =====================================================================================
   METHOD GetTimeSig ( _                                ' VTable offset = 156
     BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYREF mtUntil AS LONG _                            ' __inout *mtUntil VT_I4 <Long>
   , BYREF timeSig AS DMUS_TIMESIGNATURE _              ' __inout *timeSig DMUS_TIMESIGNATURE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendNotePMSG ( _                              ' VTable offset = 160
     BYVAL lTime AS LONG _                              ' __in lTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL channel AS LONG _                            ' __in channel VT_I4 <Long>
   , BYREF msg AS DMUS_NOTE_PMSG _                      ' __in *msg DMUS_NOTE_PMSG <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendCurvePMSG ( _                             ' VTable offset = 164
     BYVAL lTime AS LONG _                              ' __in lTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL channel AS LONG _                            ' __in channel VT_I4 <Long>
   , BYREF msg AS DMUS_CURVE_PMSG _                     ' __in *msg DMUS_CURVE_PMSG <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendMIDIPMSG ( _                              ' VTable offset = 168
     BYVAL lTime AS LONG _                              ' __in lTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL channel AS LONG _                            ' __in channel VT_I4 <Long>
   , BYVAL status AS BYTE _                             ' __in status VT_UI1 <Byte>
   , BYVAL byte1 AS BYTE _                              ' __in byte1 VT_UI1 <Byte>
   , BYVAL byte2 AS BYTE _                              ' __in byte2 VT_UI1 <Byte>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendPatchPMSG ( _                             ' VTable offset = 172
     BYVAL lTime AS LONG _                              ' __in lTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL channel AS LONG _                            ' __in channel VT_I4 <Long>
   , BYVAL instrument AS BYTE _                         ' __in instrument VT_UI1 <Byte>
   , BYVAL byte1 AS BYTE _                              ' __in byte1 VT_UI1 <Byte>
   , BYVAL byte2 AS BYTE _                              ' __in byte2 VT_UI1 <Byte>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendTempoPMSG ( _                             ' VTable offset = 176
     BYVAL lTime AS LONG _                              ' __in lTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL tempo AS DOUBLE _                            ' __in tempo VT_R8 <Double>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendTransposePMSG ( _                         ' VTable offset = 180
     BYVAL lTime AS LONG _                              ' __in lTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL channel AS LONG _                            ' __in channel VT_I4 <Long>
   , BYVAL transpose AS INTEGER _                       ' __in transpose VT_I2 <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendTimeSigPMSG ( _                           ' VTable offset = 184
     BYVAL lTime AS LONG _                              ' __in lTime VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYREF timeSig AS DMUS_TIMESIGNATURE _              ' __in *timeSig DMUS_TIMESIGNATURE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD InitAudio ( _                                 ' VTable offset = 188
     BYVAL hwnd AS LONG _                               ' __in hwnd VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DMUS_AUDIO <enum>
   , BYREF AudioParams AS DMUS_AUDIOPARAMS _            ' __inout *AudioParams DMUS_AUDIOPARAMS <record>
   , OPTIONAL BYREF directSound AS DirectSound8 _       ' __opt_inout **directSound DirectSound8 <interface>
   , OPTIONAL BYVAL lDefaultPathType AS LONG _          ' __opt_in lDefaultPathType CONST_DMUSIC_STANDARD_AUDIO_PATH <enum>
   , OPTIONAL BYVAL lPChannelCount AS LONG _            ' __opt_in lPChannelCount VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD PlaySegmentEx ( _                             ' VTable offset = 192
     BYVAL Source AS IUnknown _                         ' __in *Source VT_UNKNOWN <IUnknown>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DMUS_SEGF_FLAGS <enum>
   , BYVAL StartTime AS LONG _                          ' __in StartTime VT_I4 <Long>
   , OPTIONAL BYVAL From AS IUnknown _                  ' __opt_in *From VT_UNKNOWN <IUnknown>
   , OPTIONAL BYVAL AudioPath AS IUnknown _             ' __opt_in *AudioPath VT_UNKNOWN <IUnknown>
   ) AS DirectMusicSegmentState8                        ' __retval_out **ppSegmentState DirectMusicSegmentState8 <interface>
   ' =====================================================================================
   METHOD StopEx ( _                                    ' VTable offset = 196
     BYVAL ObjectToStop AS IUnknown _                   ' __in *ObjectToStop VT_UNKNOWN <IUnknown>
   , BYVAL lStopTime AS LONG _                          ' __in lStopTime VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DMUS_SEGF_FLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateAudioPath ( _                           ' VTable offset = 200
     BYVAL SourceConfig AS IUnknown _                   ' __in *SourceConfig VT_UNKNOWN <IUnknown>
   , BYVAL fActive AS INTEGER _                         ' __in fActive VT_BOOL <Integer>
   ) AS DirectMusicAudioPath8                           ' __retval_out **ppNewPath DirectMusicAudioPath8 <interface>
   ' =====================================================================================
   METHOD CreateStandardAudioPath ( _                   ' VTable offset = 204
     BYVAL lType AS LONG _                              ' __in lType CONST_DMUSIC_STANDARD_AUDIO_PATH <enum>
   , BYVAL lPChannelCount AS LONG _                     ' __in lPChannelCount VT_I4 <Long>
   , BYVAL fActive AS INTEGER _                         ' __in fActive VT_BOOL <Integer>
   ) AS DirectMusicAudioPath8                           ' __retval_out **ppNewPath DirectMusicAudioPath8 <interface>
   ' =====================================================================================
   METHOD SetDefaultAudioPath ( _                       ' VTable offset = 208
     BYVAL AudioPath AS DirectMusicAudioPath8 _         ' __inout *AudioPath DirectMusicAudioPath8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDefaultAudioPath ( _                       ' VTable offset = 212
   ) AS DirectMusicAudioPath8                           ' __retval_out **ppAudioPath DirectMusicAudioPath8 <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicPerformance8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicSegmentState8
' IID = {FAFA35A6-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicSegmentState8_INTERFACE_DEFINED)
    %DirectMusicSegmentState8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicSegmentState8 $IID_DirectMusicSegmentState8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetRepeats ( _                                ' VTable offset = 20
   ) AS LONG                                            ' __retval_out *repeats VT_I4 <Long>
   ' =====================================================================================
   METHOD GetSeek ( _                                   ' VTable offset = 24
   ) AS LONG                                            ' __retval_out *seek VT_I4 <Long>
   ' =====================================================================================
   METHOD GetStartPoint ( _                             ' VTable offset = 28
   ) AS LONG                                            ' __retval_out *seek VT_I4 <Long>
   ' =====================================================================================
   METHOD GetStartTime ( _                              ' VTable offset = 32
   ) AS LONG                                            ' __retval_out *seek VT_I4 <Long>
   ' =====================================================================================
   METHOD GetSegment ( _                                ' VTable offset = 36
   ) AS DirectMusicSegment8                             ' __retval_out **segment DirectMusicSegment8 <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicSegmentState8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicChordMap8
' IID = {FAFA35A5-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicChordMap8_INTERFACE_DEFINED)
    %DirectMusicChordMap8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicChordMap8 $IID_DirectMusicChordMap8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetScale ( _                                  ' VTable offset = 20
   ) AS LONG                                            ' __retval_out *scale VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicChordMap8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicAudioPath8
' IID = {A4A8597A-BA7A-4648-B321-1701598844D8}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicAudioPath8_INTERFACE_DEFINED)
    %DirectMusicAudioPath8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicAudioPath8 $IID_DirectMusicAudioPath8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD GetObjectinPath ( _                           ' VTable offset = 20
     BYVAL lPChannel AS LONG _                          ' __in lPChannel VT_I4 <Long>
   , BYVAL lStage AS LONG _                             ' __in lStage CONST_DMUSIC_PATH <enum>
   , BYVAL lBuffer AS LONG _                            ' __in lBuffer VT_I4 <Long>
   , BYVAL guidObject AS WSTRING _                      ' __in guidObject VT_BSTR
   , BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   , BYVAL iidInterface AS WSTRING _                    ' __in iidInterface VT_BSTR
   ) AS IUnknown                                        ' __retval_out **ppObject VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD Activate ( _                                  ' VTable offset = 24
     BYVAL fActive AS INTEGER _                         ' __in fActive VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetVolume ( _                                 ' VTable offset = 28
     BYVAL lVolume AS LONG _                            ' __in lVolume VT_I4 <Long>
   , BYVAL lDuration AS LONG _                          ' __in lDuration VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicAudioPath8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectMusicComposer8
' IID = {FAFA35A2-8B72-11D2-90B2-00C04FC2C603}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectMusicComposer8_INTERFACE_DEFINED)
    %DirectMusicComposer8_INTERFACE_DEFINED = 1

INTERFACE DirectMusicComposer8 $IID_DirectMusicComposer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD AutoTransition ( _                            ' VTable offset = 20
     BYVAL performance AS DirectMusicPerformance8 _     ' __in *performance DirectMusicPerformance8 <interface>
   , BYVAL toSeg AS DirectMusicSegment8 _               ' __in *toSeg DirectMusicSegment8 <interface>
   , BYVAL lCommand AS LONG _                           ' __in lCommand VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYVAL chordmap AS DirectMusicChordMap8 _           ' __in *chordmap DirectMusicChordMap8 <interface>
   ) AS DirectMusicSegment8                             ' __retval_out **ppTransSeg DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD ComposeSegmentFromTemplate ( _                ' VTable offset = 24
     BYVAL style AS DirectMusicStyle8 _                 ' __in *style DirectMusicStyle8 <interface>
   , BYVAL templateSeg AS DirectMusicSegment8 _         ' __in *templateSeg DirectMusicSegment8 <interface>
   , BYVAL activity AS INTEGER _                        ' __in activity VT_I2 <Integer>
   , BYVAL chordmap AS DirectMusicChordMap8 _           ' __in *chordmap DirectMusicChordMap8 <interface>
   ) AS DirectMusicSegment8                             ' __retval_out **SectionSeg DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD ComposeSegmentFromShape ( _                   ' VTable offset = 28
     BYVAL style AS DirectMusicStyle8 _                 ' __in *style DirectMusicStyle8 <interface>
   , BYVAL numberOfMeasures AS INTEGER _                ' __in numberOfMeasures VT_I2 <Integer>
   , BYVAL shape AS INTEGER _                           ' __in shape VT_I2 <Integer>
   , BYVAL activity AS INTEGER _                        ' __in activity VT_I2 <Integer>
   , BYVAL bIntro AS INTEGER _                          ' __in bIntro VT_BOOL <Integer>
   , BYVAL bEnd AS INTEGER _                            ' __in bEnd VT_BOOL <Integer>
   , BYVAL chordmap AS DirectMusicChordMap8 _           ' __in *chordmap DirectMusicChordMap8 <interface>
   ) AS DirectMusicSegment8                             ' __retval_out **SectionSeg DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD ComposeTransition ( _                         ' VTable offset = 32
     BYVAL fromSeg AS DirectMusicSegment8 _             ' __in *fromSeg DirectMusicSegment8 <interface>
   , BYVAL toSeg AS DirectMusicSegment8 _               ' __in *toSeg DirectMusicSegment8 <interface>
   , BYVAL mtTime AS LONG _                             ' __in mtTime VT_I4 <Long>
   , BYVAL lCommand AS LONG _                           ' __in lCommand VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYVAL chordmap AS DirectMusicChordMap8 _           ' __in *chordmap DirectMusicChordMap8 <interface>
   ) AS DirectMusicSegment8                             ' __retval_out **SectionSeg DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD ComposeTemplateFromShape ( _                  ' VTable offset = 36
     BYVAL numMeasures AS INTEGER _                     ' __in numMeasures VT_I2 <Integer>
   , BYVAL shape AS INTEGER _                           ' __in shape VT_I2 <Integer>
   , BYVAL bIntro AS INTEGER _                          ' __in bIntro VT_BOOL <Integer>
   , BYVAL bEnd AS INTEGER _                            ' __in bEnd VT_BOOL <Integer>
   , BYVAL endLength AS INTEGER _                       ' __in endLength VT_I2 <Integer>
   ) AS DirectMusicSegment8                             ' __retval_out **TempSeg DirectMusicSegment8 <interface>
   ' =====================================================================================
   METHOD ChangeChordMap ( _                            ' VTable offset = 40
     BYVAL segment AS DirectMusicSegment8 _             ' __in *segment DirectMusicSegment8 <interface>
   , BYVAL trackScale AS INTEGER _                      ' __in trackScale VT_BOOL <Integer>
   , BYVAL chordmap AS DirectMusicChordMap8 _           ' __in *chordmap DirectMusicChordMap8 <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectMusicComposer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInput8
' IID = {819D20C1-8AD2-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInput8_INTERFACE_DEFINED)
    %DirectInput8_INTERFACE_DEFINED = 1

INTERFACE DirectInput8 $IID_DirectInput8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD CreateDevice ( _                              ' VTable offset = 20
     BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   ) AS DirectInputDevice8                              ' __retval_out **dev DirectInputDevice8 <interface>
   ' =====================================================================================
   METHOD GetDIDevices ( _                              ' VTable offset = 24
     BYVAL DeviceType AS LONG _                         ' __in DeviceType CONST_DI8DEVICETYPE <enum>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DIENUMDEVICESFLAGS <enum>
   ) AS DirectInputEnumDevices8                         ' __retval_out **retVal DirectInputEnumDevices8 <interface>
   ' =====================================================================================
   METHOD GetDeviceStatus ( _                           ' VTable offset = 28
     BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   ) AS INTEGER                                         ' __retval_out *status VT_BOOL <Integer>
   ' =====================================================================================
   METHOD RunControlPanel ( _                           ' VTable offset = 32
     BYVAL hwndOwner AS LONG _                          ' __in hwndOwner VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDevicesBySemantics ( _                     ' VTable offset = 36
     BYVAL str1 AS WSTRING _                            ' __in str1 VT_BSTR
   , BYREF Format AS DIACTIONFORMAT _                   ' __in *Format DIACTIONFORMAT <record>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS DirectInputEnumDevices8                         ' __retval_out **ret DirectInputEnumDevices8 <interface>
   ' =====================================================================================
   METHOD ConfigureDevices ( _                          ' VTable offset = 40
     BYVAL hEvent AS LONG _                             ' __in hEvent VT_I4 <Long>
   , BYREF CDParams AS DICONFIGUREDEVICESPARAMS _       ' __in *CDParams DICONFIGUREDEVICESPARAMS <record>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInput8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInputDevice8
' IID = {819D20C3-8AD2-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInputDevice8_INTERFACE_DEFINED)
    %DirectInputDevice8_INTERFACE_DEFINED = 1

INTERFACE DirectInputDevice8 $IID_DirectInputDevice8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD Acquire ( _                                   ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceObjectsEnum ( _                      ' VTable offset = 24
     BYVAL flags AS LONG _                              ' __in flags CONST_DIDFTFLAGS <enum>
   ) AS DirectInputEnumDeviceObjects                    ' __retval_out **ppret DirectInputEnumDeviceObjects <interface>
   ' =====================================================================================
   METHOD GetCapabilities ( _                           ' VTable offset = 28
     BYREF Caps AS DIDEVCAPS _                          ' __inout *Caps DIDEVCAPS <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceData ( _                             ' VTable offset = 32
     BYREF deviceObjectDataArray AS DWORD _             ' __inout **deviceObjectDataArray VT_SAFEARRAY
   , BYVAL flags AS LONG _                              ' __in flags CONST_DIDGDDFLAGS <enum>
   ) AS LONG                                            ' __retval_out *c VT_I4 <Long>
   ' =====================================================================================
   METHOD GetDeviceInfo ( _                             ' VTable offset = 36
   ) AS DirectInputDeviceInstance8                      ' __retval_out **deviceInstance DirectInputDeviceInstance8 <interface>
   ' =====================================================================================
   METHOD GetDeviceStateKeyboard ( _                    ' VTable offset = 40
     BYREF state AS DIKEYBOARDSTATE _                   ' __inout *state DIKEYBOARDSTATE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceStateMouse ( _                       ' VTable offset = 44
     BYREF state AS DIMOUSESTATE _                      ' __inout *state DIMOUSESTATE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceStateMouse2 ( _                      ' VTable offset = 48
     BYREF state AS DIMOUSESTATE2 _                     ' __inout *state DIMOUSESTATE2 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceStateJoystick ( _                    ' VTable offset = 52
     BYREF state AS DIJOYSTATE _                        ' __inout *state DIJOYSTATE <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceStateJoystick2 ( _                   ' VTable offset = 56
     BYREF state AS DIJOYSTATE2 _                       ' __inout *state DIJOYSTATE2 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeviceState ( _                            ' VTable offset = 60
     BYVAL cb AS LONG _                                 ' __in cb VT_I4 <Long>
   , BYVAL state AS DWORD _                             ' __in *state VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetObjectInfo ( _                             ' VTable offset = 64
     BYVAL obj AS LONG _                                ' __in obj VT_I4 <Long>
   , BYVAL how AS LONG _                                ' __in how CONST_DIPHFLAGS <enum>
   ) AS DirectInputDeviceObjectInstance                 ' __retval_out **ret DirectInputDeviceObjectInstance <interface>
   ' =====================================================================================
   METHOD GetProperty ( _                               ' VTable offset = 68
     BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   , BYVAL propertyInfo AS DWORD _                      ' __out *propertyInfo VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD RunControlPanel ( _                           ' VTable offset = 72
     BYVAL hwnd AS LONG _                               ' __in hwnd VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetCooperativeLevel ( _                       ' VTable offset = 76
     BYVAL hwnd AS LONG _                               ' __in hwnd VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DISCLFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetCommonDataFormat ( _                       ' VTable offset = 80
     BYVAL Format AS LONG _                             ' __in Format CONST_DICOMMONDATAFORMATS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetDataFormat ( _                             ' VTable offset = 84
     BYREF Format AS DIDATAFORMAT _                     ' __in *Format DIDATAFORMAT <record>
   , BYREF formatArray AS DWORD _                       ' **formatArray VT_SAFEARRAY
   )                                                    ' void
   ' =====================================================================================
   METHOD SetEventNotification ( _                      ' VTable offset = 88
     BYVAL hEvent AS LONG _                             ' __in hEvent VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetProperty ( _                               ' VTable offset = 92
     BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   , BYVAL propertyInfo AS DWORD _                      ' __in *propertyInfo VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD Unacquire ( _                                 ' VTable offset = 96
   )                                                    ' void
   ' =====================================================================================
   METHOD Poll ( _                                      ' VTable offset = 100
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateEffect ( _                              ' VTable offset = 104
     BYVAL effectGuid AS WSTRING _                      ' __in effectGuid VT_BSTR
   , BYREF effectinfo AS DIEFFECT _                     ' __in *effectinfo DIEFFECT <record>
   ) AS DirectInputEffect                               ' __retval_out **ret DirectInputEffect <interface>
   ' =====================================================================================
   METHOD CreateCustomEffect ( _                        ' VTable offset = 108
     BYREF effectinfo AS DIEFFECT _                     ' __in *effectinfo DIEFFECT <record>
   , BYVAL channels AS LONG _                           ' __in channels VT_I4 <Long>
   , BYVAL samplePeriod AS LONG _                       ' __in samplePeriod VT_I4 <Long>
   , BYVAL nSamples AS LONG _                           ' __in nSamples VT_I4 <Long>
   , BYREF sampledata AS DWORD _                        ' __in **sampledata VT_SAFEARRAY
   ) AS DirectInputEffect                               ' __retval_out **ret DirectInputEffect <interface>
   ' =====================================================================================
   METHOD SendDeviceData ( _                            ' VTable offset = 112
     BYVAL count AS LONG _                              ' __in count VT_I4 <Long>
   , BYREF Data AS DWORD _                              ' __in **Data VT_SAFEARRAY
   , BYVAL flags AS LONG _                              ' __in flags CONST_DISDDFLAGS <enum>
   ) AS LONG                                            ' __retval_out *retcount VT_I4 <Long>
   ' =====================================================================================
   METHOD SendForceFeedbackCommand ( _                  ' VTable offset = 116
     BYVAL flags AS LONG _                              ' __in flags CONST_DISFFCFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetForceFeedbackState ( _                     ' VTable offset = 120
   ) AS LONG                                            ' __retval_out *state CONST_DIGFFSFLAGS <enum>
   ' =====================================================================================
   METHOD GetEffectsEnum ( _                            ' VTable offset = 124
     BYVAL effType AS LONG _                            ' __in effType CONST_DIEFTFLAGS <enum>
   ) AS DirectInputEnumEffects                          ' __retval_out **ret DirectInputEnumEffects <interface>
   ' =====================================================================================
   METHOD BuildActionMap ( _                            ' VTable offset = 128
     BYREF Format AS DIACTIONFORMAT _                   ' __inout *Format DIACTIONFORMAT <record>
   , BYVAL username AS WSTRING _                        ' __in username VT_BSTR
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetActionMap ( _                              ' VTable offset = 132
     BYREF Format AS DIACTIONFORMAT _                   ' __inout *Format DIACTIONFORMAT <record>
   , BYVAL username AS WSTRING _                        ' __in username VT_BSTR
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetImageInfo ( _                              ' VTable offset = 136
     BYREF info AS DIDEVICEIMAGEINFOHEADER _            ' __out *info DIDEVICEIMAGEINFOHEADER <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetImageInfoCount ( _                         ' VTable offset = 140
   ) AS LONG                                            ' __retval_out *c VT_I4 <Long>
   ' =====================================================================================
   METHOD WriteEffectToFile ( _                         ' VTable offset = 144
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   , BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   , BYREF CoverEffect AS DIEFFECT _                    ' __in *CoverEffect DIEFFECT <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateEffectFromFile ( _                      ' VTable offset = 148
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL effectName AS WSTRING _                      ' __in effectName VT_BSTR
   ) AS DirectInputEffect                               ' __retval_out **ret DirectInputEffect <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInputDevice8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInputEnumDeviceObjects
' IID = {9F76FA08-8E92-11D1-8808-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInputEnumDeviceObjects_INTERFACE_DEFINED)
    %DirectInputEnumDeviceObjects_INTERFACE_DEFINED = 1

INTERFACE DirectInputEnumDeviceObjects $IID_DirectInputEnumDeviceObjects

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetItem ( _                                   ' VTable offset = 12
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS DirectInputDeviceObjectInstance                 ' __retval_out **info DirectInputDeviceObjectInstance <interface>
   ' =====================================================================================
   METHOD GetCount ( _                                  ' VTable offset = 16
   ) AS LONG                                            ' __retval_out *count VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInputEnumDeviceObjects_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInputDeviceObjectInstance
' IID = {9F76FA05-8E92-11D1-8808-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInputDeviceObjectInstance_INTERFACE_DEFINED)
    %DirectInputDeviceObjectInstance_INTERFACE_DEFINED = 1

INTERFACE DirectInputDeviceObjectInstance $IID_DirectInputDeviceObjectInstance

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetGuidType ( _                               ' VTable offset = 12
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetOfs ( _                                    ' VTable offset = 16
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 20
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetFlags ( _                                  ' VTable offset = 24
   ) AS LONG                                            ' __retval_out *ret CONST_DIDEVICEOBJINSTANCEFLAGS <enum>
   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 28
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetCollectionNumber ( _                       ' VTable offset = 32
   ) AS INTEGER                                         ' __retval_out *ret VT_I2 <Integer>
   ' =====================================================================================
   METHOD GetDesignatorIndex ( _                        ' VTable offset = 36
   ) AS INTEGER                                         ' __retval_out *ret VT_I2 <Integer>
   ' =====================================================================================
   METHOD GetUsagePage ( _                              ' VTable offset = 40
   ) AS INTEGER                                         ' __retval_out *ret VT_I2 <Integer>
   ' =====================================================================================
   METHOD GetUsage ( _                                  ' VTable offset = 44
   ) AS INTEGER                                         ' __retval_out *ret VT_I2 <Integer>
   ' =====================================================================================
   METHOD GetDimension ( _                              ' VTable offset = 48
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetExponent ( _                               ' VTable offset = 52
   ) AS INTEGER                                         ' __retval_out *ret VT_I2 <Integer>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInputDeviceObjectInstance_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInputDeviceInstance8
' IID = {819D20C2-8AD2-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInputDeviceInstance8_INTERFACE_DEFINED)
    %DirectInputDeviceInstance8_INTERFACE_DEFINED = 1

INTERFACE DirectInputDeviceInstance8 $IID_DirectInputDeviceInstance8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetGuidInstance ( _                           ' VTable offset = 12
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetGuidProduct ( _                            ' VTable offset = 16
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetProductName ( _                            ' VTable offset = 20
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetInstanceName ( _                           ' VTable offset = 24
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetGuidFFDriver ( _                           ' VTable offset = 28
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetUsagePage ( _                              ' VTable offset = 32
   ) AS INTEGER                                         ' __retval_out *ret VT_I2 <Integer>
   ' =====================================================================================
   METHOD GetUsage ( _                                  ' VTable offset = 36
   ) AS INTEGER                                         ' __retval_out *ret VT_I2 <Integer>
   ' =====================================================================================
   METHOD GetDevType ( _                                ' VTable offset = 40
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInputDeviceInstance8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInputEffect
' IID = {BCAA7DA9-F7EF-11D2-93FD-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInputEffect_INTERFACE_DEFINED)
    %DirectInputEffect_INTERFACE_DEFINED = 1

INTERFACE DirectInputEffect $IID_DirectInputEffect

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD Download ( _                                  ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetEffectGuid ( _                             ' VTable offset = 24
   ) AS WSTRING                                         ' __retval_out *guid VT_BSTR
   ' =====================================================================================
   METHOD GetEffectStatus ( _                           ' VTable offset = 28
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD Start ( _                                     ' VTable offset = 32
     BYVAL iterations AS LONG _                         ' __in iterations VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Stop ( _                                      ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD Unload ( _                                    ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================
   METHOD SetParameters ( _                             ' VTable offset = 44
     BYREF effectinfo AS DIEFFECT _                     ' __in *effectinfo DIEFFECT <record>
   , BYVAL flags AS LONG _                              ' __in flags CONST_DIEPFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetParameters ( _                             ' VTable offset = 48
     BYREF effectinfo AS DIEFFECT _                     ' __inout *effectinfo DIEFFECT <record>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInputEffect_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInputEnumEffects
' IID = {BCAA7DAA-F7EF-11D2-93FD-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInputEnumEffects_INTERFACE_DEFINED)
    %DirectInputEnumEffects_INTERFACE_DEFINED = 1

INTERFACE DirectInputEnumEffects $IID_DirectInputEnumEffects

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetCount ( _                                  ' VTable offset = 12
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetEffectGuid ( _                             ' VTable offset = 16
     BYVAL i AS LONG _                                  ' __in i VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 20
     BYVAL i AS LONG _                                  ' __in i VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret CONST_DIEFTFLAGS <enum>
   ' =====================================================================================
   METHOD GetStaticParams ( _                           ' VTable offset = 24
     BYVAL i AS LONG _                                  ' __in i VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret CONST_DIEPFLAGS <enum>
   ' =====================================================================================
   METHOD GetDynamicParams ( _                          ' VTable offset = 28
     BYVAL i AS LONG _                                  ' __in i VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret CONST_DIEPFLAGS <enum>
   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 32
     BYVAL i AS LONG _                                  ' __in i VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *ret VT_BSTR
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInputEnumEffects_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectInputEnumDevices8
' IID = {819D20C4-8AD2-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectInputEnumDevices8_INTERFACE_DEFINED)
    %DirectInputEnumDevices8_INTERFACE_DEFINED = 1

INTERFACE DirectInputEnumDevices8 $IID_DirectInputEnumDevices8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetItem ( _                                   ' VTable offset = 12
     BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS DirectInputDeviceInstance8                      ' __retval_out **info DirectInputDeviceInstance8 <interface>
   ' =====================================================================================
   METHOD GetCount ( _                                  ' VTable offset = 16
   ) AS LONG                                            ' __retval_out *count VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectInputEnumDevices8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8Peer
' IID = {7C34602A-7B81-4C6D-9533-658F2D471EFC}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8Peer_INTERFACE_DEFINED)
    %DirectPlay8Peer_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8Peer $IID_DirectPlay8Peer

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD SendTo ( _                                    ' VTable offset = 20
     BYVAL idSend AS LONG _                             ' __in idSend VT_I4 <Long>
   , BYREF BufferData AS DWORD _                        ' __in **BufferData VT_SAFEARRAY
   , BYVAL lTimeOut AS LONG _                           ' __in lTimeOut VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNSENDFLAGS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD CreateGroup ( _                               ' VTable offset = 24
     BYREF GroupInfo AS DPN_GROUP_INFO _                ' __inout *GroupInfo DPN_GROUP_INFO <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD AddPlayerToGroup ( _                          ' VTable offset = 28
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , BYVAL idClient AS LONG _                           ' __in idClient VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetSendQueueInfo ( _                          ' VTable offset = 32
     BYVAL idPlayer AS LONG _                           ' __in idPlayer VT_I4 <Long>
   , BYREF lNumMsgs AS LONG _                           ' __inout *lNumMsgs VT_I4 <Long>
   , BYREF lNumBytes AS LONG _                          ' __inout *lNumBytes VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNGETSENDQUEUEINFO <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetGroupInfo ( _                              ' VTable offset = 36
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , BYREF PlayerInfo AS DPN_GROUP_INFO _               ' __inout *PlayerInfo DPN_GROUP_INFO <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetGroupInfo ( _                              ' VTable offset = 40
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS DPN_GROUP_INFO                                  ' __retval_out *layerInfo DPN_GROUP_INFO <record>
   ' =====================================================================================
   METHOD SetPeerInfo ( _                               ' VTable offset = 44
     BYREF PlayerInfo AS DPN_PLAYER_INFO _              ' __in *PlayerInfo DPN_PLAYER_INFO <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetPeerInfo ( _                               ' VTable offset = 48
     BYVAL idPeer AS LONG _                             ' __in idPeer VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS DPN_PLAYER_INFO                                 ' __retval_out *layerInfo DPN_PLAYER_INFO <record>
   ' =====================================================================================
   METHOD DestroyGroup ( _                              ' VTable offset = 52
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD RemovePlayerFromGroup ( _                     ' VTable offset = 56
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , BYVAL idClient AS LONG _                           ' __in idClient VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD DestroyPeer ( _                               ' VTable offset = 60
     BYVAL idClient AS LONG _                           ' __in idClient VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL UserDataSize AS LONG _                       ' __in UserDataSize VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Connect ( _                                   ' VTable offset = 64
     BYREF AppDesc AS DPN_APPLICATION_DESC _            ' __in *AppDesc DPN_APPLICATION_DESC <record>
   , BYVAL Address AS DirectPlay8Address _              ' __in *Address DirectPlay8Address <interface>
   , BYVAL DeviceInfo AS DirectPlay8Address _           ' __in *DeviceInfo DirectPlay8Address <interface>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DPNOPERATIONS <enum>
   , BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL UserDataSize AS LONG _                       ' __in UserDataSize VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD RegisterMessageHandler ( _                    ' VTable offset = 68
     BYVAL event AS DirectPlay8Event _                  ' __in *event DirectPlay8Event <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD EnumHosts ( _                                 ' VTable offset = 72
     BYREF ApplicationDesc AS DPN_APPLICATION_DESC _    ' __in *ApplicationDesc DPN_APPLICATION_DESC <record>
   , BYVAL AddrHost AS DirectPlay8Address _             ' __in *AddrHost DirectPlay8Address <interface>
   , BYVAL DeviceInfo AS DirectPlay8Address _           ' __in *DeviceInfo DirectPlay8Address <interface>
   , BYVAL lEnumCount AS LONG _                         ' __in lEnumCount VT_I4 <Long>
   , BYVAL lRetryInterval AS LONG _                     ' __in lRetryInterval VT_I4 <Long>
   , BYVAL lTimeOut AS LONG _                           ' __in lTimeOut VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DPNOPERATIONS <enum>
   , BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL UserDataSize AS LONG _                       ' __in UserDataSize VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *lAsync VT_I4 <Long>
   ' =====================================================================================
   METHOD GetCountServiceProviders ( _                  ' VTable offset = 76
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetServiceProvider ( _                        ' VTable offset = 80
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   ) AS DPN_SERVICE_PROVIDER_INFO                       ' __retval_out *ret DPN_SERVICE_PROVIDER_INFO <record>
   ' =====================================================================================
   METHOD GetCountPlayersAndGroups ( _                  ' VTable offset = 84
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNENUMCLIENTGROUPFLAGS <enum>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetPlayerOrGroup ( _                          ' VTable offset = 88
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetCountGroupMembers ( _                      ' VTable offset = 92
     BYVAL dpid AS LONG _                               ' __in dpid VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetGroupMember ( _                            ' VTable offset = 96
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   , BYVAL dpid AS LONG _                               ' __in dpid VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD ReturnBuffer ( _                              ' VTable offset = 100
     BYVAL lBufferHandle AS LONG _                      ' __in lBufferHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Host ( _                                      ' VTable offset = 104
     BYREF AppDesc AS DPN_APPLICATION_DESC _            ' __in *AppDesc DPN_APPLICATION_DESC <record>
   , BYVAL Addres AS DirectPlay8Address _               ' __in *Addres DirectPlay8Address <interface>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CancelAsyncOperation ( _                      ' VTable offset = 108
     BYVAL lAsyncHandle AS LONG _                       ' __in lAsyncHandle VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNCANCELFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetApplicationDesc ( _                        ' VTable offset = 112
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_APPLICATION_DESC                            ' __retval_out *ret DPN_APPLICATION_DESC <record>
   ' =====================================================================================
   METHOD SetApplicationDesc ( _                        ' VTable offset = 116
     BYREF AppDesc AS DPN_APPLICATION_DESC _            ' __inout *AppDesc DPN_APPLICATION_DESC <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Close ( _                                     ' VTable offset = 120
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 124
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_CAPS                                        ' __retval_out *ret DPN_CAPS <record>
   ' =====================================================================================
   METHOD SetCaps ( _                                   ' VTable offset = 128
     BYREF Caps AS DPN_CAPS _                           ' __inout *Caps DPN_CAPS <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD RegisterLobby ( _                             ' VTable offset = 132
     BYVAL dpnHandle AS LONG _                          ' __in dpnHandle VT_I4 <Long>
   , BYVAL LobbyApp AS DirectPlay8LobbiedApplication _  ' __in *LobbyApp DirectPlay8LobbiedApplication <interface>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConnectionInfo ( _                         ' VTable offset = 136
     BYVAL idPlayer AS LONG _                           ' __in idPlayer VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_CONNECTION_INFO                             ' __retval_out *pdpConnectionInfo DPN_CONNECTION_INFO <record>
   ' =====================================================================================
   METHOD GetPeerAddress ( _                            ' VTable offset = 140
     BYVAL idPlayer AS LONG _                           ' __in idPlayer VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DirectPlay8Address                              ' __retval_out **pAddress DirectPlay8Address <interface>
   ' =====================================================================================
   METHOD GetLocalHostAddress ( _                       ' VTable offset = 144
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DirectPlay8Address                              ' __retval_out **pAddress DirectPlay8Address <interface>
   ' =====================================================================================
   METHOD SetSPCaps ( _                                 ' VTable offset = 148
     BYVAL guidSP AS WSTRING _                          ' __in guidSP VT_BSTR
   , BYREF spCaps AS DPN_SP_CAPS _                      ' __in *spCaps DPN_SP_CAPS <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSPCaps ( _                                 ' VTable offset = 152
     BYVAL guidSP AS WSTRING _                          ' __in guidSP VT_BSTR
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_SP_CAPS                                     ' __retval_out *spCaps DPN_SP_CAPS <record>
   ' =====================================================================================
   METHOD TerminateSession ( _                          ' VTable offset = 156
     BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL UserDataSize AS LONG _                       ' __in UserDataSize VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnRegisterMessageHandler ( _                  ' VTable offset = 160
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8Peer_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8Address
' IID = {ECA8BD2A-7154-4B23-904B-61FF852A906B}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8Address_INTERFACE_DEFINED)
    %DirectPlay8Address_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8Address $IID_DirectPlay8Address

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD BuildFromURL ( _                              ' VTable offset = 20
     BYVAL SourceURL AS WSTRING _                       ' __in SourceURL VT_BSTR
   )                                                    ' void
   ' =====================================================================================
   METHOD Duplicate ( _                                 ' VTable offset = 24
   ) AS DirectPlay8Address                              ' __retval_out **NewAddress DirectPlay8Address <interface>
   ' =====================================================================================
   METHOD Clear ( _                                     ' VTable offset = 28
   )                                                    ' void
   ' =====================================================================================
   METHOD GetURL ( _                                    ' VTable offset = 32
   ) AS WSTRING                                         ' __retval_out *URL VT_BSTR
   ' =====================================================================================
   METHOD GetSP ( _                                     ' VTable offset = 36
   ) AS WSTRING                                         ' __retval_out *guidSP VT_BSTR
   ' =====================================================================================
   METHOD GetUserData ( _                               ' VTable offset = 40
     BYVAL UserData AS DWORD _                          ' __inout *UserData VT_VOID <Dword>
   ) AS LONG                                            ' __retval_out *lBufferSize VT_I4 <Long>
   ' =====================================================================================
   METHOD SetSP ( _                                     ' VTable offset = 44
     BYVAL guidSP AS WSTRING _                          ' __in guidSP VT_BSTR
   )                                                    ' void
   ' =====================================================================================
   METHOD SetUserData ( _                               ' VTable offset = 48
     BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL lDataSize AS LONG _                          ' __in lDataSize VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumComponents ( _                          ' VTable offset = 52
   ) AS LONG                                            ' __retval_out *lNumComponents VT_I4 <Long>
   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 56
   ) AS WSTRING                                         ' __retval_out *guidDevice VT_BSTR
   ' =====================================================================================
   METHOD SetDevice ( _                                 ' VTable offset = 60
     BYVAL guidDevice AS WSTRING _                      ' __in guidDevice VT_BSTR
   )                                                    ' void
   ' =====================================================================================
   METHOD SetEqual ( _                                  ' VTable offset = 64
     BYVAL Address AS DirectPlay8Address _              ' __in *Address DirectPlay8Address <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD AddComponentLong ( _                          ' VTable offset = 68
     BYVAL sComponent AS WSTRING _                      ' __in sComponent VT_BSTR
   , BYVAL lValue AS LONG _                             ' __in lValue VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD AddComponentString ( _                        ' VTable offset = 72
     BYVAL sComponent AS WSTRING _                      ' __in sComponent VT_BSTR
   , BYVAL sValue AS WSTRING _                          ' __in sValue VT_BSTR
   )                                                    ' void
   ' =====================================================================================
   METHOD GetComponentLong ( _                          ' VTable offset = 76
     BYVAL sComponent AS WSTRING _                      ' __in sComponent VT_BSTR
   ) AS LONG                                            ' __retval_out *lValue VT_I4 <Long>
   ' =====================================================================================
   METHOD GetComponentString ( _                        ' VTable offset = 80
     BYVAL sComponent AS WSTRING _                      ' __in sComponent VT_BSTR
   ) AS WSTRING                                         ' __retval_out *sValue VT_BSTR
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8Address_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8Event
' IID = {F9DCCD1D-E6B9-45ED-B3E2-C32414C71FA4}
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8Event_INTERFACE_DEFINED)
    %DirectPlay8Event_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8Event $IID_DirectPlay8Event

   INHERIT IAutomation

   ' =====================================================================================
   METHOD AddRemovePlayerGroup ( _                      ' VTable offset = 12
     BYVAL lMsgID AS LONG _                             ' __in lMsgID VT_I4 <Long>
   , BYVAL lPlayerID AS LONG _                          ' __in lPlayerID VT_I4 <Long>
   , BYVAL lGroupID AS LONG _                           ' __in lGroupID VT_I4 <Long>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD AppDesc ( _                                   ' VTable offset = 16
     BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD AsyncOpComplete ( _                           ' VTable offset = 20
     BYREF dpnotify AS DPNMSG_ASYNC_OP_COMPLETE _       ' __inout *dpnotify DPNMSG_ASYNC_OP_COMPLETE <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateGroup ( _                               ' VTable offset = 24
     BYVAL lGroupID AS LONG _                           ' __in lGroupID VT_I4 <Long>
   , BYVAL lOwnerID AS LONG _                           ' __in lOwnerID VT_I4 <Long>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreatePlayer ( _                              ' VTable offset = 28
     BYVAL lPlayerID AS LONG _                          ' __in lPlayerID VT_I4 <Long>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConnectComplete ( _                           ' VTable offset = 32
     BYREF dpnotify AS DPNMSG_CONNECT_COMPLETE _        ' __inout *dpnotify DPNMSG_CONNECT_COMPLETE <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD DestroyGroup ( _                              ' VTable offset = 36
     BYVAL lGroupID AS LONG _                           ' __in lGroupID VT_I4 <Long>
   , BYVAL lReason AS LONG _                            ' __in lReason VT_I4 <Long>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD DestroyPlayer ( _                             ' VTable offset = 40
     BYVAL lPlayerID AS LONG _                          ' __in lPlayerID VT_I4 <Long>
   , BYVAL lReason AS LONG _                            ' __in lReason VT_I4 <Long>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD EnumHostsQuery ( _                            ' VTable offset = 44
     BYREF dpnotify AS DPNMSG_ENUM_HOSTS_QUERY _        ' __inout *dpnotify DPNMSG_ENUM_HOSTS_QUERY <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD EnumHostsResponse ( _                         ' VTable offset = 48
     BYREF dpnotify AS DPNMSG_ENUM_HOSTS_RESPONSE _     ' __inout *dpnotify DPNMSG_ENUM_HOSTS_RESPONSE <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD HostMigrate ( _                               ' VTable offset = 52
     BYVAL lNewHostID AS LONG _                         ' __in lNewHostID VT_I4 <Long>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD IndicateConnect ( _                           ' VTable offset = 56
     BYREF dpnotify AS DPNMSG_INDICATE_CONNECT _        ' __inout *dpnotify DPNMSG_INDICATE_CONNECT <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD IndicatedConnectAborted ( _                   ' VTable offset = 60
     BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD InfoNotify ( _                                ' VTable offset = 64
     BYVAL lMsgID AS LONG _                             ' __in lMsgID VT_I4 <Long>
   , BYVAL lNotifyID AS LONG _                          ' __in lNotifyID VT_I4 <Long>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD Receive ( _                                   ' VTable offset = 68
     BYREF dpnotify AS DPNMSG_RECEIVE _                 ' __inout *dpnotify DPNMSG_RECEIVE <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendComplete ( _                              ' VTable offset = 72
     BYREF dpnotify AS DPNMSG_SEND_COMPLETE _           ' __inout *dpnotify DPNMSG_SEND_COMPLETE <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD TerminateSession ( _                          ' VTable offset = 76
     BYREF dpnotify AS DPNMSG_TERMINATE_SESSION _       ' __inout *dpnotify DPNMSG_TERMINATE_SESSION <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8Event_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8LobbiedApplication
' IID = {EF390476-6EA0-4AD3-9EA3-768DCB68038D}
' DirectPlayLobbiedApplication Interface
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8LobbiedApplication_INTERFACE_DEFINED)
    %DirectPlay8LobbiedApplication_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8LobbiedApplication $IID_DirectPlay8LobbiedApplication

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD RegisterMessageHandler ( _                    ' VTable offset = 20
     BYVAL lobbyEvent AS DirectPlay8LobbyEvent _        ' __in *lobbyEvent DirectPlay8LobbyEvent <interface>
   ) AS LONG                                            ' __retval_out *lDPNHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD RegisterProgram ( _                           ' VTable offset = 24
     BYREF ProgramDesc AS DPL_PROGRAM_DESC _            ' __in *ProgramDesc DPL_PROGRAM_DESC <record>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnRegisterProgram ( _                         ' VTable offset = 28
     BYVAL guidApplication AS WSTRING _                 ' __in guidApplication VT_BSTR
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Send ( _                                      ' VTable offset = 32
     BYVAL Target AS LONG _                             ' __in Target VT_I4 <Long>
   , BYREF Buffer AS DWORD _                            ' __in **Buffer VT_SAFEARRAY
   , BYVAL lBufferSize AS LONG _                        ' __in lBufferSize VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetAppAvailable ( _                           ' VTable offset = 36
     BYVAL fAvailable AS INTEGER _                      ' __in fAvailable VT_BOOL <Integer>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DPLAVAILABLE <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD UpdateStatus ( _                              ' VTable offset = 40
     BYVAL LobbyClient AS LONG _                        ' __in LobbyClient VT_I4 <Long>
   , BYVAL lStatus AS LONG _                            ' __in lStatus CONST_DPLSESSION <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD Close ( _                                     ' VTable offset = 44
   )                                                    ' void
   ' =====================================================================================
   METHOD UnRegisterMessageHandler ( _                  ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConnectionSettings ( _                     ' VTable offset = 52
     BYVAL LobbyClient AS LONG _                        ' __in LobbyClient VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   ) AS DPL_CONNECTION_SETTINGS                         ' __retval_out *ConnectionSettings DPL_CONNECTION_SETTINGS <record>
   ' =====================================================================================
   METHOD SetConnectionSettings ( _                     ' VTable offset = 56
     BYVAL hTarget AS LONG _                            ' __in hTarget VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYREF ConnectionSettings AS DPL_CONNECTION_SETTINGS _ ' __inout *ConnectionSettings DPL_CONNECTION_SETTINGS <record>
   , BYVAL HostAddress AS DirectPlay8Address _          ' __in *HostAddress DirectPlay8Address <interface>
   , BYVAL Device AS DirectPlay8Address _               ' __in *Device DirectPlay8Address <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8LobbiedApplication_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8LobbyEvent
' IID = {F794A01F-2A0D-46A8-9CEF-D5678A413BEF}
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8LobbyEvent_INTERFACE_DEFINED)
    %DirectPlay8LobbyEvent_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8LobbyEvent $IID_DirectPlay8LobbyEvent

   INHERIT IAutomation

   ' =====================================================================================
   METHOD Receive ( _                                   ' VTable offset = 12
     BYREF dlNotify AS DPL_MESSAGE_RECEIVE _            ' __inout *dlNotify DPL_MESSAGE_RECEIVE <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD Connect ( _                                   ' VTable offset = 16
     BYREF dlNotify AS DPL_MESSAGE_CONNECT _            ' __inout *dlNotify DPL_MESSAGE_CONNECT <record>
   , BYREF fRejectMsg AS INTEGER _                      ' __inout *fRejectMsg VT_BOOL <Integer>
   )                                                    ' void
   ' =====================================================================================
   METHOD Disconnect ( _                                ' VTable offset = 20
     BYVAL DisconnectID AS LONG _                       ' __in DisconnectID VT_I4 <Long>
   , BYVAL lReason AS LONG _                            ' __in lReason VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SessionStatus ( _                             ' VTable offset = 24
     BYVAL status AS LONG _                             ' __in status VT_I4 <Long>
   , BYVAL lHandle AS LONG _                            ' __in lHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConnectionSettings ( _                        ' VTable offset = 28
     BYREF ConnectionSettings AS DPL_MESSAGE_CONNECTION_SETTINGS _ ' __inout *ConnectionSettings DPL_MESSAGE_CONNECTION_SETTINGS <record>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8LobbyEvent_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8Client
' IID = {3F6521E5-94BC-4A7A-A049-3D199EB59E72}
' DirectPlay Client Interface
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8Client_INTERFACE_DEFINED)
    %DirectPlay8Client_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8Client $IID_DirectPlay8Client

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD RegisterMessageHandler ( _                    ' VTable offset = 20
     BYVAL event AS DirectPlay8Event _                  ' __in *event DirectPlay8Event <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD EnumHosts ( _                                 ' VTable offset = 24
     BYREF ApplicationDesc AS DPN_APPLICATION_DESC _    ' __in *ApplicationDesc DPN_APPLICATION_DESC <record>
   , BYVAL AddrHost AS DirectPlay8Address _             ' __in *AddrHost DirectPlay8Address <interface>
   , BYVAL DeviceInfo AS DirectPlay8Address _           ' __in *DeviceInfo DirectPlay8Address <interface>
   , BYVAL lRetryCount AS LONG _                        ' __in lRetryCount VT_I4 <Long>
   , BYVAL lRetryInterval AS LONG _                     ' __in lRetryInterval VT_I4 <Long>
   , BYVAL lTimeOut AS LONG _                           ' __in lTimeOut VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DPNOPERATIONS <enum>
   , BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL UserDataSize AS LONG _                       ' __in UserDataSize VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *lAsync VT_I4 <Long>
   ' =====================================================================================
   METHOD GetCountServiceProviders ( _                  ' VTable offset = 28
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetServiceProvider ( _                        ' VTable offset = 32
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   ) AS DPN_SERVICE_PROVIDER_INFO                       ' __retval_out *ret DPN_SERVICE_PROVIDER_INFO <record>
   ' =====================================================================================
   METHOD CancelAsyncOperation ( _                      ' VTable offset = 36
     BYVAL lAsyncHandle AS LONG _                       ' __in lAsyncHandle VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNCANCELFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD Connect ( _                                   ' VTable offset = 40
     BYREF AppDesc AS DPN_APPLICATION_DESC _            ' __in *AppDesc DPN_APPLICATION_DESC <record>
   , BYVAL Address AS DirectPlay8Address _              ' __in *Address DirectPlay8Address <interface>
   , BYVAL DeviceInfo AS DirectPlay8Address _           ' __in *DeviceInfo DirectPlay8Address <interface>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DPNOPERATIONS <enum>
   , BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL UserDataSize AS LONG _                       ' __in UserDataSize VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD Send ( _                                      ' VTable offset = 44
     BYREF BufferData AS DWORD _                        ' __in **BufferData VT_SAFEARRAY
   , BYVAL lTimeOut AS LONG _                           ' __in lTimeOut VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNSENDFLAGS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetSendQueueInfo ( _                          ' VTable offset = 48
     BYREF lNumMsgs AS LONG _                           ' __inout *lNumMsgs VT_I4 <Long>
   , BYREF lNumBytes AS LONG _                          ' __inout *lNumBytes VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNGETSENDQUEUEINFO <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetApplicationDesc ( _                        ' VTable offset = 52
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_APPLICATION_DESC                            ' __retval_out *ret DPN_APPLICATION_DESC <record>
   ' =====================================================================================
   METHOD SetClientInfo ( _                             ' VTable offset = 56
     BYREF PlayerInfo AS DPN_PLAYER_INFO _              ' __in *PlayerInfo DPN_PLAYER_INFO <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetServerInfo ( _                             ' VTable offset = 60
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_PLAYER_INFO                                 ' __retval_out *layerInfo DPN_PLAYER_INFO <record>
   ' =====================================================================================
   METHOD Close ( _                                     ' VTable offset = 64
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ReturnBuffer ( _                              ' VTable offset = 68
     BYVAL lBufferHandle AS LONG _                      ' __in lBufferHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 72
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_CAPS                                        ' __retval_out *ret DPN_CAPS <record>
   ' =====================================================================================
   METHOD SetCaps ( _                                   ' VTable offset = 76
     BYREF Caps AS DPN_CAPS _                           ' __inout *Caps DPN_CAPS <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD RegisterLobby ( _                             ' VTable offset = 80
     BYVAL dpnHandle AS LONG _                          ' __in dpnHandle VT_I4 <Long>
   , BYVAL LobbyApp AS DirectPlay8LobbiedApplication _  ' __in *LobbyApp DirectPlay8LobbiedApplication <interface>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConnectionInfo ( _                         ' VTable offset = 84
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_CONNECTION_INFO                             ' __retval_out *pdpConnectionInfo DPN_CONNECTION_INFO <record>
   ' =====================================================================================
   METHOD GetServerAddress ( _                          ' VTable offset = 88
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DirectPlay8Address                              ' __retval_out **pAddress DirectPlay8Address <interface>
   ' =====================================================================================
   METHOD SetSPCaps ( _                                 ' VTable offset = 92
     BYVAL guidSP AS WSTRING _                          ' __in guidSP VT_BSTR
   , BYREF spCaps AS DPN_SP_CAPS _                      ' __in *spCaps DPN_SP_CAPS <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSPCaps ( _                                 ' VTable offset = 96
     BYVAL guidSP AS WSTRING _                          ' __in guidSP VT_BSTR
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_SP_CAPS                                     ' __retval_out *spCaps DPN_SP_CAPS <record>
   ' =====================================================================================
   METHOD UnRegisterMessageHandler ( _                  ' VTable offset = 100
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8Client_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8Server
' IID = {7584BBA4-1B39-4DCD-A334-D168CBB5A915}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8Server_INTERFACE_DEFINED)
    %DirectPlay8Server_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8Server $IID_DirectPlay8Server

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD RegisterMessageHandler ( _                    ' VTable offset = 20
     BYVAL event AS DirectPlay8Event _                  ' __in *event DirectPlay8Event <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCountPlayersAndGroups ( _                  ' VTable offset = 24
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNENUMCLIENTGROUPFLAGS <enum>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetPlayerOrGroup ( _                          ' VTable offset = 28
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetCountGroupMembers ( _                      ' VTable offset = 32
     BYVAL dpid AS LONG _                               ' __in dpid VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetGroupMember ( _                            ' VTable offset = 36
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   , BYVAL dpid AS LONG _                               ' __in dpid VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetCountServiceProviders ( _                  ' VTable offset = 40
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *ret VT_I4 <Long>
   ' =====================================================================================
   METHOD GetServiceProvider ( _                        ' VTable offset = 44
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   ) AS DPN_SERVICE_PROVIDER_INFO                       ' __retval_out *ret DPN_SERVICE_PROVIDER_INFO <record>
   ' =====================================================================================
   METHOD CancelAsyncOperation ( _                      ' VTable offset = 48
     BYVAL lAsyncHandle AS LONG _                       ' __in lAsyncHandle VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNCANCELFLAGS <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SendTo ( _                                    ' VTable offset = 52
     BYVAL idSend AS LONG _                             ' __in idSend VT_I4 <Long>
   , BYREF BufferData AS DWORD _                        ' __in **BufferData VT_SAFEARRAY
   , BYVAL lTimeOut AS LONG _                           ' __in lTimeOut VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNSENDFLAGS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD CreateGroup ( _                               ' VTable offset = 56
     BYREF GroupInfo AS DPN_GROUP_INFO _                ' __in *GroupInfo DPN_GROUP_INFO <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD AddPlayerToGroup ( _                          ' VTable offset = 60
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , BYVAL idClient AS LONG _                           ' __in idClient VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetSendQueueInfo ( _                          ' VTable offset = 64
     BYVAL idPlayer AS LONG _                           ' __in idPlayer VT_I4 <Long>
   , BYREF lNumMsgs AS LONG _                           ' __inout *lNumMsgs VT_I4 <Long>
   , BYREF lNumBytes AS LONG _                          ' __inout *lNumBytes VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNGETSENDQUEUEINFO <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetGroupInfo ( _                              ' VTable offset = 68
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , BYREF PlayerInfo AS DPN_GROUP_INFO _               ' __in *PlayerInfo DPN_GROUP_INFO <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetGroupInfo ( _                              ' VTable offset = 72
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_GROUP_INFO                                  ' __retval_out *layerInfo DPN_GROUP_INFO <record>
   ' =====================================================================================
   METHOD SetServerInfo ( _                             ' VTable offset = 76
     BYREF PlayerInfo AS DPN_PLAYER_INFO _              ' __in *PlayerInfo DPN_PLAYER_INFO <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD GetClientInfo ( _                             ' VTable offset = 80
     BYVAL idPeer AS LONG _                             ' __in idPeer VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_PLAYER_INFO                                 ' __retval_out *layerInfo DPN_PLAYER_INFO <record>
   ' =====================================================================================
   METHOD GetApplicationDesc ( _                        ' VTable offset = 84
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_APPLICATION_DESC                            ' __retval_out *ret DPN_APPLICATION_DESC <record>
   ' =====================================================================================
   METHOD SetApplicationDesc ( _                        ' VTable offset = 88
     BYREF AppDesc AS DPN_APPLICATION_DESC _            ' __inout *AppDesc DPN_APPLICATION_DESC <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Host ( _                                      ' VTable offset = 92
     BYREF AppDesc AS DPN_APPLICATION_DESC _            ' __in *AppDesc DPN_APPLICATION_DESC <record>
   , BYVAL Address AS DirectPlay8Address _              ' __in *Address DirectPlay8Address <interface>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Close ( _                                     ' VTable offset = 96
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 100
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_CAPS                                        ' __retval_out *ret DPN_CAPS <record>
   ' =====================================================================================
   METHOD SetCaps ( _                                   ' VTable offset = 104
     BYREF Caps AS DPN_CAPS _                           ' __inout *Caps DPN_CAPS <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD RemovePlayerFromGroup ( _                     ' VTable offset = 108
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , BYVAL idClient AS LONG _                           ' __in idClient VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD ReturnBuffer ( _                              ' VTable offset = 112
     BYVAL lBufferHandle AS LONG _                      ' __in lBufferHandle VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DestroyClient ( _                             ' VTable offset = 116
     BYVAL idClient AS LONG _                           ' __in idClient VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYVAL UserData AS DWORD _                          ' __in *UserData VT_VOID <Dword>
   , BYVAL UserDataSize AS LONG _                       ' __in UserDataSize VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DestroyGroup ( _                              ' VTable offset = 120
     BYVAL idGroup AS LONG _                            ' __in idGroup VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DPNOPERATIONS <enum>
   ) AS LONG                                            ' __retval_out *hAsyncHandle VT_I4 <Long>
   ' =====================================================================================
   METHOD RegisterLobby ( _                             ' VTable offset = 124
     BYVAL dpnHandle AS LONG _                          ' __in dpnHandle VT_I4 <Long>
   , BYVAL LobbyApp AS DirectPlay8LobbiedApplication _  ' __in *LobbyApp DirectPlay8LobbiedApplication <interface>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConnectionInfo ( _                         ' VTable offset = 128
     BYVAL idPlayer AS LONG _                           ' __in idPlayer VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_CONNECTION_INFO                             ' __retval_out *pdpConnectionInfo DPN_CONNECTION_INFO <record>
   ' =====================================================================================
   METHOD GetClientAddress ( _                          ' VTable offset = 132
     BYVAL idPlayer AS LONG _                           ' __in idPlayer VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DirectPlay8Address                              ' __retval_out **pAddress DirectPlay8Address <interface>
   ' =====================================================================================
   METHOD GetLocalHostAddress ( _                       ' VTable offset = 136
     OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DirectPlay8Address                              ' __retval_out **pAddress DirectPlay8Address <interface>
   ' =====================================================================================
   METHOD SetSPCaps ( _                                 ' VTable offset = 140
     BYVAL guidSP AS WSTRING _                          ' __in guidSP VT_BSTR
   , BYREF spCaps AS DPN_SP_CAPS _                      ' __in *spCaps DPN_SP_CAPS <record>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSPCaps ( _                                 ' VTable offset = 144
     BYVAL guidSP AS WSTRING _                          ' __in guidSP VT_BSTR
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags VT_I4 <Long>
   ) AS DPN_SP_CAPS                                     ' __retval_out *spCaps DPN_SP_CAPS <record>
   ' =====================================================================================
   METHOD UnRegisterMessageHandler ( _                  ' VTable offset = 148
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8Server_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlay8LobbyClient
' IID = {14716737-3005-4758-896F-B48D001929A5}
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlay8LobbyClient_INTERFACE_DEFINED)
    %DirectPlay8LobbyClient_INTERFACE_DEFINED = 1

INTERFACE DirectPlay8LobbyClient $IID_DirectPlay8LobbyClient

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD RegisterMessageHandler ( _                    ' VTable offset = 20
     BYVAL lobbyEvent AS DirectPlay8LobbyEvent _        ' __in *lobbyEvent DirectPlay8LobbyEvent <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCountLocalPrograms ( _                     ' VTable offset = 24
     BYVAL guidApplication AS WSTRING _                 ' __in guidApplication VT_BSTR
   ) AS LONG                                            ' __retval_out *lCount VT_I4 <Long>
   ' =====================================================================================
   METHOD GetLocalProgram ( _                           ' VTable offset = 28
     BYVAL lProgID AS LONG _                            ' __in lProgID VT_I4 <Long>
   ) AS DPL_APPLICATION_INFO                            ' __retval_out *app DPL_APPLICATION_INFO <record>
   ' =====================================================================================
   METHOD ConnectApplication ( _                        ' VTable offset = 32
     BYREF ConnectionInfo AS DPL_CONNECT_INFO _         ' __in *ConnectionInfo DPL_CONNECT_INFO <record>
   , BYVAL lTimeOut AS LONG _                           ' __in lTimeOut VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags CONST_DPLCONNECT <enum>
   ) AS LONG                                            ' __retval_out *hApplication VT_I4 <Long>
   ' =====================================================================================
   METHOD Send ( _                                      ' VTable offset = 36
     BYVAL Target AS LONG _                             ' __in Target VT_I4 <Long>
   , BYREF Buffer AS DWORD _                            ' __in **Buffer VT_SAFEARRAY
   , BYVAL lBufferSize AS LONG _                        ' __in lBufferSize VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ReleaseApplication ( _                        ' VTable offset = 40
     BYVAL Application AS LONG _                        ' __in Application VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Close ( _                                     ' VTable offset = 44
   )                                                    ' void
   ' =====================================================================================
   METHOD UnRegisterMessageHandler ( _                  ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD GetConnectionSettings ( _                     ' VTable offset = 52
     BYVAL hLobbyClient AS LONG _                       ' __in hLobbyClient VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   ) AS DPL_CONNECTION_SETTINGS                         ' __retval_out *ConnectionSettings DPL_CONNECTION_SETTINGS <record>
   ' =====================================================================================
   METHOD SetConnectionSettings ( _                     ' VTable offset = 56
     BYVAL hTarget AS LONG _                            ' __in hTarget VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   , BYREF ConnectionSettings AS DPL_CONNECTION_SETTINGS _ ' __inout *ConnectionSettings DPL_CONNECTION_SETTINGS <record>
   , BYVAL HostAddress AS DirectPlay8Address _          ' __in *HostAddress DirectPlay8Address <interface>
   , BYVAL Device AS DirectPlay8Address _               ' __in *Device DirectPlay8Address <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlay8LobbyClient_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlayVoiceClient8
' IID = {9F76FF0F-8E92-11D1-1515-00C04FC2C312}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlayVoiceClient8_INTERFACE_DEFINED)
    %DirectPlayVoiceClient8_INTERFACE_DEFINED = 1

INTERFACE DirectPlayVoiceClient8 $IID_DirectPlayVoiceClient8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD Initialize ( _                                ' VTable offset = 20
     BYVAL DplayObj AS IUnknown _                       ' __in *DplayObj VT_UNKNOWN <IUnknown>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Connect ( _                                   ' VTable offset = 24
     BYREF SoundDeviceConfig AS DVSOUNDDEVICECONFIG _   ' __in *SoundDeviceConfig DVSOUNDDEVICECONFIG <record>
   , BYREF ClientConfig AS DVCLIENTCONFIG _             ' __in *ClientConfig DVCLIENTCONFIG <record>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Disconnect ( _                                ' VTable offset = 28
     BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSessionDesc ( _                            ' VTable offset = 32
   ) AS DVSESSIONDESC                                   ' __retval_out *SessionDesc DVSESSIONDESC <record>
   ' =====================================================================================
   METHOD GetClientConfig ( _                           ' VTable offset = 36
   ) AS DVCLIENTCONFIG                                  ' __retval_out *ClientConfig DVCLIENTCONFIG <record>
   ' =====================================================================================
   METHOD SetClientConfig ( _                           ' VTable offset = 40
     BYREF ClientConfig AS DVCLIENTCONFIG _             ' __in *ClientConfig DVCLIENTCONFIG <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 44
   ) AS DVCAPS                                          ' __retval_out *Caps DVCAPS <record>
   ' =====================================================================================
   METHOD GetCompressionTypeCount ( _                   ' VTable offset = 48
   ) AS LONG                                            ' __retval_out *v1 VT_I4 <Long>
   ' =====================================================================================
   METHOD GetCompressionType ( _                        ' VTable offset = 52
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   , BYREF Data AS DVCOMPRESSIONINFO _                  ' __inout *Data DVCOMPRESSIONINFO <record>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetTransmitTargets ( _                        ' VTable offset = 56
     BYREF playerIDs AS DWORD _                         ' __in **playerIDs VT_SAFEARRAY
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetTransmitTargets ( _                        ' VTable offset = 60
     BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   ) AS DWORD                                           ' __retval_out **ret VT_SAFEARRAY
   ' =====================================================================================
   METHOD SetCurrentSoundDevices ( _                    ' VTable offset = 64
     BYVAL DirectSoundObj AS DirectSound8 _             ' __in *DirectSoundObj DirectSound8 <interface>
   , BYVAL DirectCaptureObj AS DirectSoundCapture8 _    ' __in *DirectCaptureObj DirectSoundCapture8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSoundDevices ( _                           ' VTable offset = 68
     BYVAL DirectSoundObj AS DirectSound8 _             ' __inout *DirectSoundObj DirectSound8 <interface>
   , BYVAL DirectCaptureObj AS DirectSoundCapture8 _    ' __inout *DirectCaptureObj DirectSoundCapture8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD Create3DSoundBuffer ( _                       ' VTable offset = 72
     BYVAL playerID AS LONG _                           ' __in playerID VT_I4 <Long>
   , OPTIONAL BYVAL Buffer AS DirectSoundSecondaryBuffer8 _ ' __opt_in *Buffer DirectSoundSecondaryBuffer8 <interface>
   , OPTIONAL BYVAL lPriority AS LONG _                 ' __opt_in lPriority VT_I4 <Long>
   , OPTIONAL BYVAL lFlags AS LONG _                    ' __opt_in lFlags CONST_DSBPLAYFLAGS <enum>
   ) AS DirectSound3DBuffer8                            ' __retval_out **UserBuffer DirectSound3DBuffer8 <interface>
   ' =====================================================================================
   METHOD Delete3DSoundBuffer ( _                       ' VTable offset = 76
     BYVAL playerID AS LONG _                           ' __in playerID VT_I4 <Long>
   , BYVAL UserBuffer AS DirectSound3DBuffer8 _         ' __in *UserBuffer DirectSound3DBuffer8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSoundDeviceConfig ( _                      ' VTable offset = 80
   ) AS DVSOUNDDEVICECONFIG                             ' __retval_out *SoundDeviceConfig DVSOUNDDEVICECONFIG <record>
   ' =====================================================================================
   METHOD StartClientNotification ( _                   ' VTable offset = 84
     BYVAL event AS DirectPlayVoiceEvent8 _             ' __in *event DirectPlayVoiceEvent8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnRegisterMessageHandler ( _                  ' VTable offset = 88
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlayVoiceClient8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlayVoiceEvent8
' IID = {26AE5141-8010-46EA-861C-F9FC0F8B61D9}
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlayVoiceEvent8_INTERFACE_DEFINED)
    %DirectPlayVoiceEvent8_INTERFACE_DEFINED = 1

INTERFACE DirectPlayVoiceEvent8 $IID_DirectPlayVoiceEvent8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD SessionLost ( _                               ' VTable offset = 12
     BYVAL ResultCode AS LONG _                         ' __in ResultCode VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConnectResult ( _                             ' VTable offset = 16
     BYVAL ResultCode AS LONG _                         ' __in ResultCode VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DisconnectResult ( _                          ' VTable offset = 20
     BYVAL ResultCode AS LONG _                         ' __in ResultCode VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateVoicePlayer ( _                         ' VTable offset = 24
     BYVAL playerID AS LONG _                           ' __in playerID VT_I4 <Long>
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DeleteVoicePlayer ( _                         ' VTable offset = 28
     BYVAL playerID AS LONG _                           ' __in playerID VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD HostMigrated ( _                              ' VTable offset = 32
     BYVAL NewHostID AS LONG _                          ' __in NewHostID VT_I4 <Long>
   , BYVAL NewServer AS DirectPlayVoiceServer8 _        ' __inout *NewServer DirectPlayVoiceServer8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD InputLevel ( _                                ' VTable offset = 36
     BYVAL PeakLevel AS LONG _                          ' __in PeakLevel VT_I4 <Long>
   , BYVAL RecordVolume AS LONG _                       ' __in RecordVolume VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD OutputLevel ( _                               ' VTable offset = 40
     BYVAL PeakLevel AS LONG _                          ' __in PeakLevel VT_I4 <Long>
   , BYVAL OutputVolume AS LONG _                       ' __in OutputVolume VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD PlayerOutputLevel ( _                         ' VTable offset = 44
     BYVAL SourcePlayerID AS LONG _                     ' __in SourcePlayerID VT_I4 <Long>
   , BYVAL PeakLevel AS LONG _                          ' __in PeakLevel VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD PlayerVoiceStart ( _                          ' VTable offset = 48
     BYVAL SourcePlayerID AS LONG _                     ' __in SourcePlayerID VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD PlayerVoiceStop ( _                           ' VTable offset = 52
     BYVAL SourcePlayerID AS LONG _                     ' __in SourcePlayerID VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD RecordStart ( _                               ' VTable offset = 56
     BYVAL PeakVolume AS LONG _                         ' __in PeakVolume VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD RecordStop ( _                                ' VTable offset = 60
     BYVAL PeakVolume AS LONG _                         ' __in PeakVolume VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlayVoiceEvent8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlayVoiceServer8
' IID = {9F76FF0F-8E92-11D1-1515-00C04FC2C313}
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlayVoiceServer8_INTERFACE_DEFINED)
    %DirectPlayVoiceServer8_INTERFACE_DEFINED = 1

INTERFACE DirectPlayVoiceServer8 $IID_DirectPlayVoiceServer8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD Initialize ( _                                ' VTable offset = 20
     BYVAL DplayObj AS IUnknown _                       ' __in *DplayObj VT_UNKNOWN <IUnknown>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD StartSession ( _                              ' VTable offset = 24
     BYREF SessionDesc AS DVSESSIONDESC _               ' __in *SessionDesc DVSESSIONDESC <record>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD StopSession ( _                               ' VTable offset = 28
     BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetSessionDesc ( _                            ' VTable offset = 32
   ) AS DVSESSIONDESC                                   ' __retval_out *SessionDesc DVSESSIONDESC <record>
   ' =====================================================================================
   METHOD SetSessionDesc ( _                            ' VTable offset = 36
     BYREF ClientConfig AS DVSESSIONDESC _              ' __in *ClientConfig DVSESSIONDESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetCaps ( _                                   ' VTable offset = 40
   ) AS DVCAPS                                          ' __retval_out *Caps DVCAPS <record>
   ' =====================================================================================
   METHOD GetCompressionTypeCount ( _                   ' VTable offset = 44
   ) AS LONG                                            ' __retval_out *v1 VT_I4 <Long>
   ' =====================================================================================
   METHOD GetCompressionType ( _                        ' VTable offset = 48
     BYVAL lIndex AS LONG _                             ' __in lIndex VT_I4 <Long>
   , BYREF Data AS DVCOMPRESSIONINFO _                  ' __inout *Data DVCOMPRESSIONINFO <record>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetTransmitTargets ( _                        ' VTable offset = 52
     BYVAL playerSourceID AS LONG _                     ' __in playerSourceID VT_I4 <Long>
   , BYREF playerTargetIDs AS DWORD _                   ' __in **playerTargetIDs VT_SAFEARRAY
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetTransmitTargets ( _                        ' VTable offset = 56
     BYVAL playerSourceID AS LONG _                     ' __in playerSourceID VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   ) AS DWORD                                           ' __retval_out **ret VT_SAFEARRAY
   ' =====================================================================================
   METHOD StartServerNotification ( _                   ' VTable offset = 60
     BYVAL event AS DirectPlayVoiceEvent8 _             ' __in *event DirectPlayVoiceEvent8 <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD UnRegisterMessageHandler ( _                  ' VTable offset = 64
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlayVoiceServer8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectPlayVoiceTest8
' IID = {9F76FF0F-8E92-11D1-1515-00C04FC2C314}
' Attributes = 256 [&H100] [Oleautomation]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectPlayVoiceTest8_INTERFACE_DEFINED)
    %DirectPlayVoiceTest8_INTERFACE_DEFINED = 1

INTERFACE DirectPlayVoiceTest8 $IID_DirectPlayVoiceTest8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 12
     BYVAL lpdd AS IUnknown _                           ' __in *lpdd VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 16
   ) AS IUnknown                                        ' __retval_out **lpdd VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD CheckAudioSetup ( _                           ' VTable offset = 20
     BYVAL guidPlaybackDevice AS WSTRING _              ' __in guidPlaybackDevice VT_BSTR
   , BYVAL guidCaptureDevice AS WSTRING _               ' __in guidCaptureDevice VT_BSTR
   , BYVAL hwndOwner AS LONG _                          ' __in hwndOwner VT_I4 <Long>
   , BYVAL lFlags AS LONG _                             ' __in lFlags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *v1 VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectPlayVoiceTest8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXFont
' IID = {2D501DF7-D253-4414-865F-A6D54A753138}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXFont_INTERFACE_DEFINED)
    %D3DXFont_INTERFACE_DEFINED = 1

INTERFACE D3DXFont $IID_D3DXFont

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD GetLogFont ( _                                ' VTable offset = 16
     BYREF LOGFONT AS DXVB_LOGFONT _                    ' __inout *LOGFONT LOGFONT <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD Begin ( _                                     ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawTextA ( _                                 ' VTable offset = 24
     BYREF Text AS BYTE _                               ' __in *Text VT_UI1 <Byte>
   , BYVAL count AS LONG _                              ' __in count VT_INT <Long>
   , BYREF DestRect AS DXVB_RECT _                      ' __in *DestRect RECT <record>
   , BYVAL Format AS LONG _                             ' __in Format VT_I4 <Long>
   , BYVAL color AS LONG _                              ' __in color VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawTextW ( _                                 ' VTable offset = 28
     BYVAL Text AS WSTRING _                            ' __in Text VT_BSTR
   , BYVAL count AS LONG _                              ' __in count VT_INT <Long>
   , BYREF DestRect AS DXVB_RECT _                      ' __in *DestRect RECT <record>
   , BYVAL Format AS LONG _                             ' __in Format VT_I4 <Long>
   , BYVAL color AS LONG _                              ' __in color VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD End ( _                                       ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD OnLostDevice ( _                              ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================
   METHOD OnResetDevice ( _                             ' VTable offset = 40
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXFont_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXBuffer
' IID = {932E6A7E-C68E-45DD-A7BF-53D19C86DB1F}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXBuffer_INTERFACE_DEFINED)
    %D3DXBuffer_INTERFACE_DEFINED = 1

INTERFACE D3DXBuffer $IID_D3DXBuffer

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetBufferPointer ( _                          ' VTable offset = 12
   )                                                    ' void
   ' =====================================================================================
   METHOD GetBufferSize ( _                             ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXBuffer_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = ID3DX8
' IID = {3AC50043-CF82-4C44-862E-B206B4F03301}
' Attributes = 16 [&H10] [Hidden]
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%ID3DX8_INTERFACE_DEFINED)
    %ID3DX8_INTERFACE_DEFINED = 1

INTERFACE ID3DX8 $IID_ID3DX8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD CreateFont ( _                                ' VTable offset = 12
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL hFont AS LONG _                              ' __in hFont VT_I4 <Long>
   ) AS D3DXFont                                        ' __retval_out **retFont D3DXFont <interface>
   ' =====================================================================================
   METHOD DrawText ( _                                  ' VTable offset = 16
     BYVAL d3dFont AS D3DXFont _                        ' __in *d3dFont D3DXFont <interface>
   , BYVAL color AS LONG _                              ' __in color VT_I4 <Long>
   , BYVAL TextString AS WSTRING _                      ' __in TextString VT_BSTR
   , BYREF RECT AS DXVB_RECT _                          ' __in *RECT RECT <record>
   , BYVAL Format AS LONG _                             ' __in Format VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFVFVertexSize ( _                          ' VTable offset = 20
     BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *Size VT_I4 <Long>
   ' =====================================================================================
   METHOD AssembleShaderFromFile ( _                    ' VTable offset = 24
     BYVAL SrcFile AS WSTRING _                         ' __in SrcFile VT_BSTR
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYREF ErrLog AS WSTRING _                          ' __inout *ErrLog VT_BSTR
   , BYREF Constants AS D3DXBuffer _                    ' __inout **Constants D3DXBuffer <interface>
   ) AS D3DXBuffer                                      ' __retval_out **ppVertexShader D3DXBuffer <interface>
   ' =====================================================================================
   METHOD AssembleShader ( _                            ' VTable offset = 28
     BYVAL SrcData AS WSTRING _                         ' __in SrcData VT_BSTR
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYREF Constants AS D3DXBuffer _                    ' __inout **Constants D3DXBuffer <interface>
   , OPTIONAL BYREF ErrLog AS WSTRING _                 ' __opt_inout *ErrLog VT_BSTR
   ) AS D3DXBuffer                                      ' __retval_out **ppVertexShader D3DXBuffer <interface>
   ' =====================================================================================
   METHOD GetErrorString ( _                            ' VTable offset = 32
     BYVAL hr AS LONG _                                 ' __in hr VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *retStr VT_BSTR
   ' =====================================================================================
   METHOD LoadSurfaceFromFile ( _                       ' VTable offset = 36
     BYVAL DestSurface AS Direct3DSurface8 _            ' __in *DestSurface Direct3DSurface8 <interface>
   , BYVAL DestPalette AS DWORD _                       ' __in *DestPalette VT_VOID <Dword>
   , BYVAL DestRect AS DWORD _                          ' __in *DestRect VT_VOID <Dword>
   , BYVAL SrcFile AS WSTRING _                         ' __in SrcFile VT_BSTR
   , BYVAL SrcRect AS DWORD _                           ' __in *SrcRect VT_VOID <Dword>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadSurfaceFromFileInMemory ( _               ' VTable offset = 40
     BYVAL DestSurface AS Direct3DSurface8 _            ' __in *DestSurface Direct3DSurface8 <interface>
   , BYVAL DestPalette AS DWORD _                       ' __in *DestPalette VT_VOID <Dword>
   , BYVAL DestRect AS DWORD _                          ' __in *DestRect VT_VOID <Dword>
   , BYVAL SrcData AS DWORD _                           ' __in *SrcData VT_VOID <Dword>
   , BYVAL LengthInBytes AS LONG _                      ' __in LengthInBytes VT_I4 <Long>
   , BYVAL SrcRect AS DWORD _                           ' __in *SrcRect VT_VOID <Dword>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadSurfaceFromSurface ( _                    ' VTable offset = 44
     BYVAL DestSurface AS Direct3DSurface8 _            ' __in *DestSurface Direct3DSurface8 <interface>
   , BYVAL DestPalette AS DWORD _                       ' __in *DestPalette VT_VOID <Dword>
   , BYVAL DestRect AS DWORD _                          ' __in *DestRect VT_VOID <Dword>
   , BYVAL SrcSurface AS Direct3DSurface8 _             ' __in *SrcSurface Direct3DSurface8 <interface>
   , BYVAL SrcPalette AS DWORD _                        ' __in *SrcPalette VT_VOID <Dword>
   , BYVAL SrcRect AS DWORD _                           ' __in *SrcRect VT_VOID <Dword>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadSurfaceFromMemory ( _                     ' VTable offset = 48
     BYVAL DestSurface AS Direct3DSurface8 _            ' __in *DestSurface Direct3DSurface8 <interface>
   , BYVAL DestPalette AS DWORD _                       ' __in *DestPalette VT_VOID <Dword>
   , BYVAL DestRect AS DWORD _                          ' __in *DestRect VT_VOID <Dword>
   , BYVAL SrcData AS DWORD _                           ' __in *SrcData VT_VOID <Dword>
   , BYVAL formatSrc AS LONG _                          ' __in formatSrc CONST_D3DFORMAT <enum>
   , BYVAL SrcPitch AS LONG _                           ' __in SrcPitch VT_I4 <Long>
   , BYVAL SrcPalette AS DWORD _                        ' __in *SrcPalette VT_VOID <Dword>
   , BYREF SrcRect AS DXVB_RECT _                       ' __in *SrcRect RECT <record>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CheckTextureRequirements ( _                  ' VTable offset = 52
     BYVAL Device AS Direct3DDevice8 _                  ' __inout *Device Direct3DDevice8 <interface>
   , BYREF Width AS LONG _                              ' __inout *Width VT_I4 <Long>
   , BYREF Height AS LONG _                             ' __inout *Height VT_I4 <Long>
   , BYREF NumMipLevels AS LONG _                       ' __inout *NumMipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYREF PixelFormat AS LONG _                        ' __inout *PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateTexture ( _                             ' VTable offset = 56
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL Width AS LONG _                              ' __in Width VT_I4 <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DTexture8                                ' __retval_out **ppTexture Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD CreateTextureFromResource ( _                 ' VTable offset = 60
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL hModule AS LONG _                            ' __in hModule VT_I4 <Long>
   , BYVAL SrcResource AS WSTRING _                     ' __in SrcResource VT_BSTR
   ) AS Direct3DTexture8                                ' __retval_out **ppTexture Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD CreateTextureFromFile ( _                     ' VTable offset = 64
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcFile AS WSTRING _                         ' __in SrcFile VT_BSTR
   ) AS Direct3DTexture8                                ' __retval_out **ppTexture Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD CreateTextureFromFileEx ( _                   ' VTable offset = 68
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcFile AS WSTRING _                         ' __in SrcFile VT_BSTR
   , BYVAL Width AS LONG _                              ' __in Width VT_I4 <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL MipFilter AS LONG _                          ' __in MipFilter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   ) AS Direct3DTexture8                                ' __retval_out **ppTexture Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD CreateTextureFromFileInMemory ( _             ' VTable offset = 72
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcData AS DWORD _                           ' __in *SrcData VT_VOID <Dword>
   , BYVAL LengthInBytes AS LONG _                      ' __in LengthInBytes VT_I4 <Long>
   ) AS Direct3DTexture8                                ' __retval_out **ppTexture Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD CreateTextureFromFileInMemoryEx ( _           ' VTable offset = 76
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcData AS DWORD _                           ' __in *SrcData VT_VOID <Dword>
   , BYVAL LengthInBytes AS LONG _                      ' __in LengthInBytes VT_I4 <Long>
   , BYVAL Width AS LONG _                              ' __in Width VT_I4 <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL MipFilter AS LONG _                          ' __in MipFilter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   ) AS Direct3DTexture8                                ' __retval_out **ppTexture Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD FilterTexture ( _                             ' VTable offset = 80
     BYVAL texture AS Direct3DTexture8 _                ' __in *texture Direct3DTexture8 <interface>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   , BYVAL SrcLevel AS LONG _                           ' __in SrcLevel VT_I4 <Long>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CheckCubeTextureRequirements ( _              ' VTable offset = 84
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYREF Size AS LONG _                               ' __inout *Size VT_I4 <Long>
   , BYREF NumMipLevels AS LONG _                       ' __inout *NumMipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYREF PixelFormat AS LONG _                        ' __inout *PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateCubeTexture ( _                         ' VTable offset = 88
     BYVAL pDevice AS Direct3DDevice8 _                 ' __in *pDevice Direct3DDevice8 <interface>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DCubeTexture8                            ' __retval_out **ppCubeTexture Direct3DCubeTexture8 <interface>
   ' =====================================================================================
   METHOD CreateCubeTextureFromFile ( _                 ' VTable offset = 92
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcFile AS WSTRING _                         ' __in SrcFile VT_BSTR
   ) AS Direct3DCubeTexture8                            ' __retval_out **ppCubeTexture Direct3DCubeTexture8 <interface>
   ' =====================================================================================
   METHOD CreateCubeTextureFromFileEx ( _               ' VTable offset = 96
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcFile AS WSTRING _                         ' __in SrcFile VT_BSTR
   , BYVAL TextureSize AS LONG _                        ' __in TextureSize VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL MipFilter AS LONG _                          ' __in MipFilter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   ) AS Direct3DCubeTexture8                            ' __retval_out **ppTexture Direct3DCubeTexture8 <interface>
   ' =====================================================================================
   METHOD CreateCubeTextureFromFileInMemory ( _         ' VTable offset = 100
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcData AS DWORD _                           ' __in *SrcData VT_VOID <Dword>
   , BYVAL LengthInBytes AS LONG _                      ' __in LengthInBytes VT_I4 <Long>
   ) AS Direct3DCubeTexture8                            ' __retval_out **ppTexture Direct3DCubeTexture8 <interface>
   ' =====================================================================================
   METHOD CreateCubeTextureFromFileInMemoryEx ( _       ' VTable offset = 104
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL SrcData AS DWORD _                           ' __in *SrcData VT_VOID <Dword>
   , BYVAL LengthInBytes AS LONG _                      ' __in LengthInBytes VT_I4 <Long>
   , BYVAL TextureSize AS LONG _                        ' __in TextureSize VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL MipFilter AS LONG _                          ' __in MipFilter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   ) AS Direct3DCubeTexture8                            ' __retval_out **ppTexture Direct3DCubeTexture8 <interface>
   ' =====================================================================================
   METHOD FilterCubeTexture ( _                         ' VTable offset = 108
     BYVAL CubeTexture AS Direct3DCubeTexture8 _        ' __in *CubeTexture Direct3DCubeTexture8 <interface>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   , BYVAL SrcLevel AS LONG _                           ' __in SrcLevel VT_I4 <Long>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CheckVolumeTextureRequirements ( _            ' VTable offset = 112
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYREF Width AS LONG _                              ' __out *Width VT_I4 <Long>
   , BYREF Height AS LONG _                             ' __out *Height VT_I4 <Long>
   , BYREF Depth AS LONG _                              ' __out *Depth VT_I4 <Long>
   , BYREF NumMipLevels AS LONG _                       ' __out *NumMipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYREF PixelFormat AS LONG _                        ' __inout *PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateTextureFromResourceEx ( _               ' VTable offset = 116
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL hSrcModule AS LONG _                         ' __in hSrcModule VT_I4 <Long>
   , BYVAL SrcResource AS WSTRING _                     ' __in SrcResource VT_BSTR
   , BYVAL Width AS LONG _                              ' __in Width VT_I4 <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL MipFilter AS LONG _                          ' __in MipFilter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   ) AS Direct3DTexture8                                ' __retval_out **retTexture Direct3DTexture8 <interface>
   ' =====================================================================================
   METHOD CreateVolumeTexture ( _                       ' VTable offset = 120
     BYVAL Device AS Direct3DDevice8 _                  ' __in *Device Direct3DDevice8 <interface>
   , BYVAL Width AS LONG _                              ' __in Width VT_I4 <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_I4 <Long>
   , BYVAL Depth AS LONG _                              ' __in Depth VT_I4 <Long>
   , BYVAL MipLevels AS LONG _                          ' __in MipLevels VT_I4 <Long>
   , BYVAL Usage AS LONG _                              ' __in Usage VT_I4 <Long>
   , BYVAL PixelFormat AS LONG _                        ' __in PixelFormat CONST_D3DFORMAT <enum>
   , BYVAL Pool AS LONG _                               ' __in Pool CONST_D3DPOOL <enum>
   ) AS Direct3DVolume8                                 ' __retval_out **ppVolumeTexture Direct3DVolume8 <interface>
   ' =====================================================================================
   METHOD FilterVolumeTexture ( _                       ' VTable offset = 124
     BYVAL VolumeTexture AS Direct3DVolume8 _           ' __in *VolumeTexture Direct3DVolume8 <interface>
   , BYVAL Palette AS DWORD _                           ' __in *Palette VT_VOID <Dword>
   , BYVAL SrcLevel AS LONG _                           ' __in SrcLevel VT_I4 <Long>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadSurfaceFromResource ( _                   ' VTable offset = 128
     BYVAL DestSurface AS Direct3DSurface8 _            ' __in *DestSurface Direct3DSurface8 <interface>
   , BYVAL DestPalette AS DWORD _                       ' __in *DestPalette VT_VOID <Dword>
   , BYVAL DestRect AS DWORD _                          ' __in *DestRect VT_VOID <Dword>
   , BYVAL hSrcModule AS LONG _                         ' __in hSrcModule VT_I4 <Long>
   , BYVAL SrcResource AS WSTRING _                     ' __in SrcResource VT_BSTR
   , BYVAL SrcRect AS DWORD _                           ' __in *SrcRect VT_VOID <Dword>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   , BYVAL SrcInfo AS DWORD _                           ' __inout *SrcInfo VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadVolumeFromVolume ( _                      ' VTable offset = 132
     BYVAL DestVolume AS Direct3DVolume8 _              ' __in *DestVolume Direct3DVolume8 <interface>
   , BYVAL DestPalette AS DWORD _                       ' __in *DestPalette VT_VOID <Dword>
   , BYVAL DestBox AS DWORD _                           ' __in *DestBox VT_VOID <Dword>
   , BYVAL SrcVolume AS Direct3DVolume8 _               ' __in *SrcVolume Direct3DVolume8 <interface>
   , BYVAL SrcPalette AS DWORD _                        ' __in *SrcPalette VT_VOID <Dword>
   , BYVAL SrcBox AS DWORD _                            ' __in *SrcBox VT_VOID <Dword>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadVolumeFromMemory ( _                      ' VTable offset = 136
     BYVAL DestVolume AS Direct3DVolume8 _              ' __in *DestVolume Direct3DVolume8 <interface>
   , BYVAL DestPalette AS DWORD _                       ' __in *DestPalette VT_VOID <Dword>
   , BYVAL DestBox AS DWORD _                           ' __in *DestBox VT_VOID <Dword>
   , BYVAL SrcMemory AS DWORD _                         ' __in *SrcMemory VT_VOID <Dword>
   , BYVAL SrcFormat AS LONG _                          ' __in SrcFormat VT_I4 <Long>
   , BYVAL SrcRowPitch AS LONG _                        ' __in SrcRowPitch VT_I4 <Long>
   , BYVAL SrcSlicePitch AS LONG _                      ' __in SrcSlicePitch VT_I4 <Long>
   , BYVAL SrcPalette AS DWORD _                        ' __in *SrcPalette VT_VOID <Dword>
   , BYVAL SrcBox AS DWORD _                            ' __in *SrcBox VT_VOID <Dword>
   , BYVAL Filter AS LONG _                             ' __in Filter VT_I4 <Long>
   , BYVAL ColorKey AS LONG _                           ' __in ColorKey VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateMesh ( _                                ' VTable offset = 140
     BYVAL numFaces AS LONG _                           ' __in numFaces VT_I4 <Long>
   , BYVAL NumVertices AS LONG _                        ' __in NumVertices VT_I4 <Long>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL pD3D AS Direct3DDevice8 _                    ' __in *pD3D Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateMeshFVF ( _                             ' VTable offset = 144
     BYVAL numFaces AS LONG _                           ' __in numFaces VT_I4 <Long>
   , BYVAL NumVertices AS LONG _                        ' __in NumVertices VT_I4 <Long>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL pD3D AS Direct3DDevice8 _                    ' __in *pD3D Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateSPMesh ( _                              ' VTable offset = 148
     BYVAL pMesh AS D3DXMesh _                          ' __in *pMesh D3DXMesh <interface>
   , BYVAL Adjacency AS DWORD _                         ' __in *Adjacency VT_VOID <Dword>
   , BYVAL VertexAttributeWeights AS DWORD _            ' __in *VertexAttributeWeights VT_VOID <Dword>
   , BYVAL VertexWeights AS DWORD _                     ' __in *VertexWeights VT_VOID <Dword>
   ) AS D3DXSPMesh                                      ' __retval_out **ppSMesh D3DXSPMesh <interface>
   ' =====================================================================================
   METHOD GeneratePMesh ( _                             ' VTable offset = 152
     BYVAL Mesh AS D3DXMesh _                           ' __in *Mesh D3DXMesh <interface>
   , BYVAL Adjacency AS DWORD _                         ' __in *Adjacency VT_VOID <Dword>
   , BYVAL VertexAttributeWeights AS DWORD _            ' __in *VertexAttributeWeights VT_VOID <Dword>
   , BYVAL VertexWeights AS DWORD _                     ' __in *VertexWeights VT_VOID <Dword>
   , BYVAL minValue AS LONG _                           ' __in minValue VT_I4 <Long>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   ) AS D3DXPMesh                                       ' __retval_out **ppPMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD SimplifyMesh ( _                              ' VTable offset = 156
     BYVAL Mesh AS D3DXMesh _                           ' __in *Mesh D3DXMesh <interface>
   , BYVAL Adjacency AS DWORD _                         ' __in *Adjacency VT_VOID <Dword>
   , BYVAL VertexAttributeWeights AS DWORD _            ' __in *VertexAttributeWeights VT_VOID <Dword>
   , BYVAL VertexWeights AS DWORD _                     ' __in *VertexWeights VT_VOID <Dword>
   , BYVAL minValue AS LONG _                           ' __in minValue VT_I4 <Long>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   ) AS D3DXMesh                                        ' __retval_out **ppMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD ComputeBoundingSphere ( _                     ' VTable offset = 160
     BYVAL PointsFVF AS DWORD _                         ' __in *PointsFVF VT_VOID <Dword>
   , BYVAL NumVertices AS LONG _                        ' __in NumVertices VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYREF Centers AS D3DVECTOR _                       ' __in *Centers D3DVECTOR <record>
   , BYREF RadiusArray AS SINGLE _                      ' __inout *RadiusArray VT_R4 <Single>
   )                                                    ' void
   ' =====================================================================================
   METHOD ComputeBoundingBox ( _                        ' VTable offset = 164
     BYVAL PointsFVF AS DWORD _                         ' __in *PointsFVF VT_VOID <Dword>
   , BYVAL NumVertices AS LONG _                        ' __in NumVertices VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYREF MinVert AS D3DVECTOR _                       ' __inout *MinVert D3DVECTOR <record>
   , BYREF MaxVert AS D3DVECTOR _                       ' __inout *MaxVert D3DVECTOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD ComputeNormals ( _                            ' VTable offset = 168
     BYVAL pMesh AS D3DXBaseMesh _                      ' __in *pMesh D3DXBaseMesh <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD DeclaratorFromFVF ( _                         ' VTable offset = 172
     BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYREF Declarator AS D3DXDECLARATOR _               ' __out *Declarator D3DXDECLARATOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD FVFFromDeclarator ( _                         ' VTable offset = 176
     BYREF Declarator AS D3DXDECLARATOR _               ' __in *Declarator D3DXDECLARATOR <record>
   ) AS LONG                                            ' __retval_out *FVF VT_I4 <Long>
   ' =====================================================================================
   METHOD CreateBuffer ( _                              ' VTable offset = 180
     BYVAL numBytes AS LONG _                           ' __in numBytes VT_I4 <Long>
   ) AS D3DXBuffer                                      ' __retval_out **ppBuffer D3DXBuffer <interface>
   ' =====================================================================================
   METHOD LoadMeshFromX ( _                             ' VTable offset = 184
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYREF retAdjacency AS D3DXBuffer _                 ' __inout **retAdjacency D3DXBuffer <interface>
   , BYREF retMaterials AS D3DXBuffer _                 ' __inout **retMaterials D3DXBuffer <interface>
   , BYREF retMaterialCount AS LONG _                   ' __inout *retMaterialCount VT_I4 <Long>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD SaveMeshToX ( _                               ' VTable offset = 188
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYVAL Mesh AS D3DXMesh _                           ' __in *Mesh D3DXMesh <interface>
   , BYVAL AdjacencyArray AS DWORD _                    ' __in *AdjacencyArray VT_VOID <Dword>
   , BYREF MaterialArray AS D3DXMATERIAL _              ' __in *MaterialArray D3DXMATERIAL <record>
   , BYVAL MaterialCount AS LONG _                      ' __in MaterialCount VT_I4 <Long>
   , BYVAL xFormat AS LONG _                            ' __in xFormat VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadMeshFromXof ( _                           ' VTable offset = 192
     BYVAL xofobjMesh AS IUnknown _                     ' __in *xofobjMesh VT_UNKNOWN <IUnknown>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYREF retBufAdjacency AS D3DXBuffer _              ' __inout **retBufAdjacency D3DXBuffer <interface>
   , BYREF retMaterials AS D3DXBuffer _                 ' __inout **retMaterials D3DXBuffer <interface>
   , BYREF retMaterialCount AS LONG _                   ' __inout *retMaterialCount VT_I4 <Long>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD TessellateNPatches ( _                        ' VTable offset = 196
     BYVAL MeshIn AS D3DXMesh _                         ' __in *MeshIn D3DXMesh <interface>
   , BYVAL adjacencyIn AS DWORD _                       ' __in *adjacencyIn VT_VOID <Dword>
   , BYVAL NumSegs AS SINGLE _                          ' __in NumSegs VT_R4 <Single>
   , BYVAL QuadraticInterpNormals AS INTEGER _          ' __in QuadraticInterpNormals VT_BOOL <Integer>
   , OPTIONAL BYREF adjacencyOut AS D3DXBuffer _        ' __opt_inout **adjacencyOut D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **MeshOut D3DXMesh <interface>
   ' =====================================================================================
   METHOD BufferGetMaterial ( _                         ' VTable offset = 200
     BYVAL MaterialBuffer AS D3DXBuffer _               ' __in *MaterialBuffer D3DXBuffer <interface>
   , BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYREF mat AS D3DMATERIAL8 _                        ' __out *mat D3DMATERIAL8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD BufferGetTextureName ( _                      ' VTable offset = 204
     BYVAL MaterialBuffer AS D3DXBuffer _               ' __in *MaterialBuffer D3DXBuffer <interface>
   , BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *retName VT_BSTR
   ' =====================================================================================
   METHOD BufferGetData ( _                             ' VTable offset = 208
     BYVAL Buffer AS D3DXBuffer _                       ' __in *Buffer D3DXBuffer <interface>
   , BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYVAL typesize AS LONG _                           ' __in typesize VT_I4 <Long>
   , BYVAL typecount AS LONG _                          ' __in typecount VT_I4 <Long>
   , BYVAL Data AS DWORD _                              ' __inout *Data VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD BufferSetData ( _                             ' VTable offset = 212
     BYVAL Buffer AS D3DXBuffer _                       ' __in *Buffer D3DXBuffer <interface>
   , BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYVAL typesize AS LONG _                           ' __in typesize VT_I4 <Long>
   , BYVAL typecount AS LONG _                          ' __in typecount VT_I4 <Long>
   , BYVAL Data AS DWORD _                              ' __inout *Data VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD Intersect ( _                                 ' VTable offset = 216
     BYVAL MeshIn AS D3DXMesh _                         ' __in *MeshIn D3DXMesh <interface>
   , BYREF RayPos AS D3DVECTOR _                        ' __in *RayPos D3DVECTOR <record>
   , BYREF RayDir AS D3DVECTOR _                        ' __in *RayDir D3DVECTOR <record>
   , BYREF retHit AS LONG _                             ' __out *retHit VT_I4 <Long>
   , BYREF retFaceIndex AS LONG _                       ' __out *retFaceIndex VT_I4 <Long>
   , BYREF U AS SINGLE _                                ' __out *U VT_R4 <Single>
   , BYREF v AS SINGLE _                                ' __out *v VT_R4 <Single>
   , BYREF retDist AS SINGLE _                          ' __out *retDist VT_R4 <Single>
   , BYREF countHits AS LONG _                          ' __out *countHits VT_I4 <Long>
   ) AS D3DXBuffer                                      ' __retval_out **AllHits D3DXBuffer <interface>
   ' =====================================================================================
   METHOD SphereBoundProbe ( _                          ' VTable offset = 220
     BYREF Center AS D3DVECTOR _                        ' __in *Center D3DVECTOR <record>
   , BYVAL Radius AS SINGLE _                           ' __in Radius VT_R4 <Single>
   , BYREF RayPosition AS D3DVECTOR _                   ' __in *RayPosition D3DVECTOR <record>
   , BYREF Raydirection AS D3DVECTOR _                  ' __in *Raydirection D3DVECTOR <record>
   ) AS INTEGER                                         ' __retval_out *retHit VT_BOOL <Integer>
   ' =====================================================================================
   METHOD ComputeBoundingSphereFromMesh ( _             ' VTable offset = 224
     BYVAL MeshIn AS D3DXMesh _                         ' __in *MeshIn D3DXMesh <interface>
   , BYREF Centers AS D3DVECTOR _                       ' __inout *Centers D3DVECTOR <record>
   , BYREF RadiusArray AS SINGLE _                      ' __inout *RadiusArray VT_R4 <Single>
   )                                                    ' void
   ' =====================================================================================
   METHOD ComputeBoundingBoxFromMesh ( _                ' VTable offset = 228
     BYVAL MeshIn AS D3DXMesh _                         ' __in *MeshIn D3DXMesh <interface>
   , BYREF MinArray AS D3DVECTOR _                      ' __inout *MinArray D3DVECTOR <record>
   , BYREF MaxArray AS D3DVECTOR _                      ' __inout *MaxArray D3DVECTOR <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateSkinMesh ( _                            ' VTable offset = 232
     BYVAL numFaces AS LONG _                           ' __in numFaces VT_I4 <Long>
   , BYVAL NumVertices AS LONG _                        ' __in NumVertices VT_I4 <Long>
   , BYVAL numBones AS LONG _                           ' __in numBones VT_I4 <Long>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXSkinMesh                                    ' __retval_out **SkinMesh D3DXSkinMesh <interface>
   ' =====================================================================================
   METHOD CreateSkinMeshFVF ( _                         ' VTable offset = 236
     BYVAL numFaces AS LONG _                           ' __in numFaces VT_I4 <Long>
   , BYVAL NumVertices AS LONG _                        ' __in NumVertices VT_I4 <Long>
   , BYVAL numBones AS LONG _                           ' __in numBones VT_I4 <Long>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXSkinMesh                                    ' __retval_out **ppSkinMesh D3DXSkinMesh <interface>
   ' =====================================================================================
   METHOD CreateSkinMeshFromMesh ( _                    ' VTable offset = 240
     BYVAL Mesh AS D3DXMesh _                           ' __in *Mesh D3DXMesh <interface>
   , BYVAL numBones AS LONG _                           ' __in numBones VT_I4 <Long>
   ) AS D3DXSkinMesh                                    ' __retval_out **ppSkinMesh D3DXSkinMesh <interface>
   ' =====================================================================================
   METHOD LoadSkinMeshFromXof ( _                       ' VTable offset = 244
     BYVAL xofobjMesh AS IUnknown _                     ' __in *xofobjMesh VT_UNKNOWN <IUnknown>
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYREF adjacencyOut AS D3DXBuffer _                 ' __inout **adjacencyOut D3DXBuffer <interface>
   , BYREF MaterialsOut AS D3DXBuffer _                 ' __inout **MaterialsOut D3DXBuffer <interface>
   , BYREF NumMatOut AS LONG _                          ' __inout *NumMatOut VT_I4 <Long>
   , BYREF BoneNamesOut AS D3DXBuffer _                 ' __inout **BoneNamesOut D3DXBuffer <interface>
   , BYREF BoneTransformsOut AS D3DXBuffer _            ' __inout **BoneTransformsOut D3DXBuffer <interface>
   ) AS D3DXSkinMesh                                    ' __retval_out **ppMesh D3DXSkinMesh <interface>
   ' =====================================================================================
   METHOD CreatePolygon ( _                             ' VTable offset = 248
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL Length AS SINGLE _                           ' __in Length VT_R4 <Single>
   , BYVAL Sides AS LONG _                              ' __in Sides VT_I4 <Long>
   , BYREF retAdjacency AS D3DXBuffer _                 ' __inout **retAdjacency D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateBox ( _                                 ' VTable offset = 252
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL Width AS SINGLE _                            ' __in Width VT_R4 <Single>
   , BYVAL Height AS SINGLE _                           ' __in Height VT_R4 <Single>
   , BYVAL Depth AS SINGLE _                            ' __in Depth VT_R4 <Single>
   , BYREF retAdjacency AS D3DXBuffer _                 ' __inout **retAdjacency D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateCylinder ( _                            ' VTable offset = 256
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL Radius1 AS SINGLE _                          ' __in Radius1 VT_R4 <Single>
   , BYVAL Radius2 AS SINGLE _                          ' __in Radius2 VT_R4 <Single>
   , BYVAL Length AS SINGLE _                           ' __in Length VT_R4 <Single>
   , BYVAL Slices AS LONG _                             ' __in Slices VT_I4 <Long>
   , BYVAL Stacks AS LONG _                             ' __in Stacks VT_I4 <Long>
   , BYREF retAdjacency AS D3DXBuffer _                 ' __inout **retAdjacency D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateSphere ( _                              ' VTable offset = 260
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL Radius AS SINGLE _                           ' __in Radius VT_R4 <Single>
   , BYVAL Slices AS LONG _                             ' __in Slices VT_I4 <Long>
   , BYVAL Stacks AS LONG _                             ' __in Stacks VT_I4 <Long>
   , BYREF retAdjacency AS D3DXBuffer _                 ' __inout **retAdjacency D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateTorus ( _                               ' VTable offset = 264
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL InnerRadius AS SINGLE _                      ' __in InnerRadius VT_R4 <Single>
   , BYVAL OuterRadius AS SINGLE _                      ' __in OuterRadius VT_R4 <Single>
   , BYVAL Sides AS LONG _                              ' __in Sides VT_I4 <Long>
   , BYVAL Rings AS LONG _                              ' __in Rings VT_I4 <Long>
   , BYREF retAdjacency AS D3DXBuffer _                 ' __inout **retAdjacency D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateTeapot ( _                              ' VTable offset = 268
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYREF retAdjacency AS D3DXBuffer _                 ' __inout **retAdjacency D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CreateText ( _                                ' VTable offset = 272
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL hDC AS LONG _                                ' __in hDC VT_I4 <Long>
   , BYVAL Text AS WSTRING _                            ' __in Text VT_BSTR
   , BYVAL Deviation AS SINGLE _                        ' __in Deviation VT_R4 <Single>
   , BYVAL Extrusion AS SINGLE _                        ' __in Extrusion VT_R4 <Single>
   , BYREF retMesh AS D3DXMesh _                        ' __inout **retMesh D3DXMesh <interface>
   , BYREF adjacencyOut AS D3DXBuffer _                 ' __inout **adjacencyOut D3DXBuffer <interface>
   , BYVAL GlyphMetrics AS DWORD _                      ' __inout *GlyphMetrics VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD BufferGetBoneName ( _                         ' VTable offset = 276
     BYVAL BoneNameBuffer AS D3DXBuffer _               ' __in *BoneNameBuffer D3DXBuffer <interface>
   , BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   ) AS WSTRING                                         ' __retval_out *retName VT_BSTR
   ' =====================================================================================
   METHOD CreateSprite ( _                              ' VTable offset = 280
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXSprite                                      ' __retval_out **retSprite D3DXSprite <interface>
   ' =====================================================================================
   METHOD CreateRenderToSurface ( _                     ' VTable offset = 284
     BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL Width AS LONG _                              ' __in Width VT_I4 <Long>
   , BYVAL Height AS LONG _                             ' __in Height VT_I4 <Long>
   , BYVAL Format AS LONG _                             ' __in Format CONST_D3DFORMAT <enum>
   , BYVAL DepthStencil AS LONG _                       ' __in DepthStencil VT_I4 <Long>
   , BYVAL DepthStencilFormat AS LONG _                 ' __in DepthStencilFormat CONST_D3DFORMAT <enum>
   ) AS D3DXRenderToSurface                             ' __retval_out **RetRenderToSurface D3DXRenderToSurface <interface>
   ' =====================================================================================
   METHOD CleanMesh ( _                                 ' VTable offset = 288
     BYVAL MeshIn AS D3DXMesh _                         ' __in *MeshIn D3DXMesh <interface>
   , BYVAL Adjacency AS DWORD _                         ' __in *Adjacency VT_VOID <Dword>
   , BYREF ErrLog AS WSTRING _                          ' __inout *ErrLog VT_BSTR
   , BYVAL adjacencyOut AS D3DXBuffer _                 ' __inout *adjacencyOut D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **MeshOut D3DXMesh <interface>
   ' =====================================================================================
   METHOD ValidMesh ( _                                 ' VTable offset = 292
     BYVAL MeshIn AS D3DXMesh _                         ' __in *MeshIn D3DXMesh <interface>
   , BYVAL Adjacency AS DWORD _                         ' __in *Adjacency VT_VOID <Dword>
   , OPTIONAL BYREF ErrLog AS WSTRING _                 ' __opt_inout *ErrLog VT_BSTR
   ) AS INTEGER                                         ' __retval_out *ret VT_BOOL <Integer>
   ' =====================================================================================
   METHOD BoxBoundProbe ( _                             ' VTable offset = 296
     BYREF MinVert AS D3DVECTOR _                       ' __in *MinVert D3DVECTOR <record>
   , BYREF MaxVert AS D3DVECTOR _                       ' __in *MaxVert D3DVECTOR <record>
   , BYREF RayPosition AS D3DVECTOR _                   ' __in *RayPosition D3DVECTOR <record>
   , BYREF Raydirection AS D3DVECTOR _                  ' __in *Raydirection D3DVECTOR <record>
   ) AS INTEGER                                         ' __retval_out *ret VT_BOOL <Integer>
   ' =====================================================================================
   METHOD SavePMeshToFile ( _                           ' VTable offset = 300
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYVAL Mesh AS D3DXPMesh _                          ' __in *Mesh D3DXPMesh <interface>
   , BYREF MaterialArray AS D3DXMATERIAL _              ' __in *MaterialArray D3DXMATERIAL <record>
   , BYVAL MaterialCount AS LONG _                      ' __in MaterialCount VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD LoadPMeshFromFile ( _                         ' VTable offset = 304
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYREF retMaterials AS D3DXBuffer _                 ' __out **retMaterials D3DXBuffer <interface>
   , BYREF RetNumMaterials AS LONG _                    ' __out *RetNumMaterials VT_I4 <Long>
   ) AS D3DXPMesh                                       ' __retval_out **RetPMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD BufferGetBoneCombo ( _                        ' VTable offset = 308
     BYVAL BoneComboBuffer AS D3DXBuffer _              ' __in *BoneComboBuffer D3DXBuffer <interface>
   , BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYREF boneCombo AS D3DXBONECOMBINATION _           ' __inout *boneCombo D3DXBONECOMBINATION <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD BufferGetBoneComboBoneIds ( _                 ' VTable offset = 312
     BYVAL BoneComboBuffer AS D3DXBuffer _              ' __in *BoneComboBuffer D3DXBuffer <interface>
   , BYVAL index AS LONG _                              ' __in index VT_I4 <Long>
   , BYVAL paletteSize AS LONG _                        ' __in paletteSize VT_I4 <Long>
   , BYVAL BoneIds AS DWORD _                           ' __in *BoneIds VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD SaveSurfaceToFile ( _                         ' VTable offset = 316
     BYVAL DestFile AS WSTRING _                        ' __in DestFile VT_BSTR
   , BYVAL DestFormat AS LONG _                         ' __in DestFormat CONST_D3DXIMAGE_FILEFORMAT <enum>
   , BYVAL SrcSurface AS Direct3DSurface8 _             ' __in *SrcSurface Direct3DSurface8 <interface>
   , BYREF SrcPalette AS DXVB_PALETTEENTRY _            ' __in *SrcPalette PALETTEENTRY <record>
   , BYREF SrcRect AS DXVB_RECT _                       ' __in *SrcRect RECT <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD SaveVolumeToFile ( _                          ' VTable offset = 320
     BYVAL DestFile AS WSTRING _                        ' __in DestFile VT_BSTR
   , BYVAL DestFormat AS LONG _                         ' __in DestFormat CONST_D3DXIMAGE_FILEFORMAT <enum>
   , BYVAL SrcVolume AS Direct3DVolume8 _               ' __in *SrcVolume Direct3DVolume8 <interface>
   , BYREF SrcPalette AS DXVB_PALETTEENTRY _            ' __in *SrcPalette PALETTEENTRY <record>
   , BYVAL SrcBox AS DWORD _                            ' __in *SrcBox VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD SaveTextureToFile ( _                         ' VTable offset = 324
     BYVAL DestFile AS WSTRING _                        ' __in DestFile VT_BSTR
   , BYVAL DestFormat AS LONG _                         ' __in DestFormat CONST_D3DXIMAGE_FILEFORMAT <enum>
   , BYVAL SrcTexture AS Direct3DBaseTexture8 _         ' __in *SrcTexture Direct3DBaseTexture8 <interface>
   , BYREF SrcPalette AS DXVB_PALETTEENTRY _            ' __in *SrcPalette PALETTEENTRY <record>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __ID3DX8_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXMesh
' IID = {CCAE5C3B-4DD1-4D0F-997E-4684CA64557F}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXMesh_INTERFACE_DEFINED)
    %D3DXMesh_INTERFACE_DEFINED = 1

INTERFACE D3DXMesh $IID_D3DXMesh

   INHERIT IAutomation

   ' =====================================================================================
   METHOD DrawSubset ( _                                ' VTable offset = 12
     BYVAL AttribId AS LONG _                           ' __in AttribId VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumFaces ( _                               ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumVertices ( _                            ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFVF ( _                                    ' VTable offset = 24
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeclaration ( _                            ' VTable offset = 28
     BYREF Declaration AS LONG _                        ' __inout *Declaration VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetOptions ( _                                ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 36
   ) AS Direct3DDevice8                                 ' __retval_out **ret Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD CloneMeshFVF ( _                              ' VTable offset = 40
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppCloneMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CloneMesh ( _                                 ' VTable offset = 44
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppCloneMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD GetVertexBuffer ( _                           ' VTable offset = 48
   ) AS Direct3DVertexBuffer8                           ' __retval_out **ppVB Direct3DVertexBuffer8 <interface>
   ' =====================================================================================
   METHOD GetIndexBuffer ( _                            ' VTable offset = 52
   ) AS Direct3DIndexBuffer8                            ' __retval_out **ppIB Direct3DIndexBuffer8 <interface>
   ' =====================================================================================
   METHOD LockVertexBuffer ( _                          ' VTable offset = 56
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *VBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockVertexBuffer ( _                        ' VTable offset = 60
   )                                                    ' void
   ' =====================================================================================
   METHOD LockIndexBuffer ( _                           ' VTable offset = 64
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *IBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockIndexBuffer ( _                         ' VTable offset = 68
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAttributeTable ( _                         ' VTable offset = 72
     BYVAL attribEntry AS DWORD _                       ' __inout *attribEntry VT_VOID <Dword>
   , BYREF attribTabSize AS LONG _                      ' __inout *attribTabSize VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConvertPointRepsToAdjacency ( _               ' VTable offset = 76
     BYVAL PointRep AS DWORD _                          ' *PointRep VT_VOID <Dword>
   , BYVAL Adjacency AS DWORD _                         ' *Adjacency VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConvertAdjacencyToPointReps ( _               ' VTable offset = 80
     BYVAL Adjacency AS DWORD _                         ' *Adjacency VT_VOID <Dword>
   , BYVAL PointRep AS DWORD _                          ' *PointRep VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GenerateAdjacency ( _                         ' VTable offset = 84
     BYVAL epsilon AS SINGLE _                          ' __in epsilon VT_R4 <Single>
   , BYVAL Adjacency AS DWORD _                         ' __inout *Adjacency VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD LockAttributeBuffer ( _                       ' VTable offset = 88
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *pData VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockAttributeBuffer ( _                     ' VTable offset = 92
   )                                                    ' void
   ' =====================================================================================
   METHOD Optimize ( _                                  ' VTable offset = 96
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL Adjacency AS DWORD _                         ' __inout *Adjacency VT_VOID <Dword>
   , BYVAL optAdj AS DWORD _                            ' __inout *optAdj VT_VOID <Dword>
   , BYVAL FaceRemap AS DWORD _                         ' __inout *FaceRemap VT_VOID <Dword>
   , BYREF VertexRemapOut AS D3DXBuffer _               ' __out **VertexRemapOut D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppOptMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD OptimizeInplace ( _                           ' VTable offset = 100
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL adjacencyIn AS DWORD _                       ' __in *adjacencyIn VT_VOID <Dword>
   , BYVAL adjacencyOut AS DWORD _                      ' __inout *adjacencyOut VT_VOID <Dword>
   , BYVAL FaceRemap AS DWORD _                         ' __in *FaceRemap VT_VOID <Dword>
   , BYREF VertexRemapOut AS D3DXBuffer _               ' __out **VertexRemapOut D3DXBuffer <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXMesh_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXSPMesh
' IID = {BC3BBDE2-1F7D-11D3-B929-00C04F68DC23}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXSPMesh_INTERFACE_DEFINED)
    %D3DXSPMesh_INTERFACE_DEFINED = 1

INTERFACE D3DXSPMesh $IID_D3DXSPMesh

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetNumFaces ( _                               ' VTable offset = 12
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumVertices ( _                            ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFVF ( _                                    ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeclaration ( _                            ' VTable offset = 24
     BYREF Declaration AS LONG _                        ' __inout *Declaration VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetOptions ( _                                ' VTable offset = 28
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 32
   ) AS Direct3DDevice8                                 ' __retval_out **ret Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD CloneMeshFVF ( _                              ' VTable offset = 36
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL adjacencyOut AS DWORD _                      ' __inout *adjacencyOut VT_VOID <Dword>
   , BYVAL VertexRemapOut AS DWORD _                    ' __inout *VertexRemapOut VT_VOID <Dword>
   ) AS D3DXPMesh                                       ' __retval_out **ppCloneMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD CloneMesh ( _                                 ' VTable offset = 40
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   , BYVAL adjacencyOut AS DWORD _                      ' __inout *adjacencyOut VT_VOID <Dword>
   , BYVAL VertexRemapOut AS DWORD _                    ' __inout *VertexRemapOut VT_VOID <Dword>
   ) AS D3DXPMesh                                       ' __retval_out **ppCloneMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD ClonePMeshFVF ( _                             ' VTable offset = 44
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL pD3D AS Direct3DDevice8 _                    ' __in *pD3D Direct3DDevice8 <interface>
   , BYVAL VertexRemapOut AS DWORD _                    ' __inout *VertexRemapOut VT_VOID <Dword>
   ) AS D3DXPMesh                                       ' __retval_out **ppCloneMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD ClonePMesh ( _                                ' VTable offset = 48
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL pD3D AS Direct3DDevice8 _                    ' __in *pD3D Direct3DDevice8 <interface>
   , BYVAL VertexRemapOut AS DWORD _                    ' __inout *VertexRemapOut VT_VOID <Dword>
   ) AS D3DXPMesh                                       ' __retval_out **ppCloneMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD ReduceFaces ( _                               ' VTable offset = 52
     BYVAL faces AS LONG _                              ' __in faces VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ReduceVertices ( _                            ' VTable offset = 56
     BYVAL vertices AS LONG _                           ' __in vertices VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMaxFaces ( _                               ' VTable offset = 60
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMaxVertices ( _                            ' VTable offset = 64
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXSPMesh_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXPMesh
' IID = {15981AA8-1A05-48E3-BBE7-FF5D49654E3F}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXPMesh_INTERFACE_DEFINED)
    %D3DXPMesh_INTERFACE_DEFINED = 1

INTERFACE D3DXPMesh $IID_D3DXPMesh

   INHERIT IAutomation

   ' =====================================================================================
   METHOD DrawSubset ( _                                ' VTable offset = 12
     BYVAL AttribId AS LONG _                           ' __in AttribId VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumFaces ( _                               ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumVertices ( _                            ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFVF ( _                                    ' VTable offset = 24
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeclaration ( _                            ' VTable offset = 28
     BYREF Declaration AS LONG _                        ' __inout *Declaration VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetOptions ( _                                ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 36
   ) AS Direct3DDevice8                                 ' __retval_out **ret Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD CloneMeshFVF ( _                              ' VTable offset = 40
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppCloneMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CloneMesh ( _                                 ' VTable offset = 44
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppCloneMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD GetVertexBuffer ( _                           ' VTable offset = 48
   ) AS Direct3DVertexBuffer8                           ' __retval_out **ppVB Direct3DVertexBuffer8 <interface>
   ' =====================================================================================
   METHOD GetIndexBuffer ( _                            ' VTable offset = 52
   ) AS Direct3DIndexBuffer8                            ' __retval_out **ppIB Direct3DIndexBuffer8 <interface>
   ' =====================================================================================
   METHOD LockVertexBuffer ( _                          ' VTable offset = 56
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *VBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockVertexBuffer ( _                        ' VTable offset = 60
   )                                                    ' void
   ' =====================================================================================
   METHOD LockIndexBuffer ( _                           ' VTable offset = 64
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *IBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockIndexBuffer ( _                         ' VTable offset = 68
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAttributeTable ( _                         ' VTable offset = 72
     BYVAL attribEntry AS DWORD _                       ' __inout *attribEntry VT_VOID <Dword>
   , BYREF attribTabSize AS LONG _                      ' __inout *attribTabSize VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConvertPointRepsToAdjacency ( _               ' VTable offset = 76
     BYVAL PointRep AS DWORD _                          ' *PointRep VT_VOID <Dword>
   , BYVAL Adjacency AS DWORD _                         ' *Adjacency VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConvertAdjacencyToPointReps ( _               ' VTable offset = 80
     BYVAL Adjacency AS DWORD _                         ' *Adjacency VT_VOID <Dword>
   , BYVAL PointRep AS DWORD _                          ' *PointRep VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GenerateAdjacency ( _                         ' VTable offset = 84
     BYVAL epsilon AS SINGLE _                          ' __in epsilon VT_R4 <Single>
   , BYVAL Adjacency AS DWORD _                         ' __inout *Adjacency VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD ClonePMeshFVF ( _                             ' VTable offset = 88
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXPMesh                                       ' __retval_out **ppCloneMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD ClonePMesh ( _                                ' VTable offset = 92
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXPMesh                                       ' __retval_out **ppCloneMesh D3DXPMesh <interface>
   ' =====================================================================================
   METHOD SetNumFaces ( _                               ' VTable offset = 96
     BYVAL faces AS LONG _                              ' __in faces VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD SetNumVertices ( _                            ' VTable offset = 100
     BYVAL vertices AS LONG _                           ' __in vertices VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMaxFaces ( _                               ' VTable offset = 104
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMinFaces ( _                               ' VTable offset = 108
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMaxVertices ( _                            ' VTable offset = 112
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMinVertices ( _                            ' VTable offset = 116
   )                                                    ' void
   ' =====================================================================================
   METHOD Save ( _                                      ' VTable offset = 120
     BYVAL pIStream AS LONG _                           ' __in pIStream VT_I4 <Long>
   , BYVAL MaterialBufferHandle AS LONG _               ' __in MaterialBufferHandle VT_I4 <Long>
   , BYVAL NumMaterials AS LONG _                       ' __in NumMaterials VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD Optimize ( _                                  ' VTable offset = 124
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL adjacencyOut AS DWORD _                      ' __inout *adjacencyOut VT_VOID <Dword>
   , BYVAL FaceRemap AS DWORD _                         ' __inout *FaceRemap VT_VOID <Dword>
   , BYREF VertexRemapOut AS D3DXBuffer _               ' __inout **VertexRemapOut D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppOptMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD OptimizeBaseLOD ( _                           ' VTable offset = 128
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   , BYVAL FaceRemap AS DWORD _                         ' __inout *FaceRemap VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD TrimByFaces ( _                               ' VTable offset = 132
     BYVAL NewFacesMin AS LONG _                        ' __in NewFacesMin VT_I4 <Long>
   , BYVAL NewFacesMax AS LONG _                        ' __in NewFacesMax VT_I4 <Long>
   , BYREF rgiFaceRemap AS LONG _                       ' __inout *rgiFaceRemap VT_I4 <Long>
   , BYREF rgiVertRemap AS LONG _                       ' __inout *rgiVertRemap VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD TrimByVertices ( _                            ' VTable offset = 136
     BYVAL NewVerticesMin AS LONG _                     ' __in NewVerticesMin VT_I4 <Long>
   , BYVAL NewVerticesMax AS LONG _                     ' __in NewVerticesMax VT_I4 <Long>
   , BYREF rgiFaceRemap AS LONG _                       ' __inout *rgiFaceRemap VT_I4 <Long>
   , BYREF rgiVertRemap AS LONG _                       ' __inout *rgiVertRemap VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAdjacency ( _                              ' VTable offset = 140
     BYVAL adjacencyOut AS DWORD _                      ' __out *adjacencyOut VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXPMesh_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXBaseMesh
' IID = {2A835771-BF4D-43F4-8E14-82A809F17D8A}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXBaseMesh_INTERFACE_DEFINED)
    %D3DXBaseMesh_INTERFACE_DEFINED = 1

INTERFACE D3DXBaseMesh $IID_D3DXBaseMesh

   INHERIT IAutomation

   ' =====================================================================================
   METHOD DrawSubset ( _                                ' VTable offset = 12
     BYVAL AttribId AS LONG _                           ' __in AttribId VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumFaces ( _                               ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumVertices ( _                            ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFVF ( _                                    ' VTable offset = 24
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeclaration ( _                            ' VTable offset = 28
     BYREF Declaration AS LONG _                        ' __inout *Declaration VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetOptions ( _                                ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 36
   ) AS Direct3DDevice8                                 ' __retval_out **ret Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD CloneMeshFVF ( _                              ' VTable offset = 40
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL FVF AS LONG _                                ' __in FVF VT_I4 <Long>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppCloneMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD CloneMesh ( _                                 ' VTable offset = 44
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL Declaration AS DWORD _                       ' __in *Declaration VT_VOID <Dword>
   , BYVAL D3DDevice AS Direct3DDevice8 _               ' __in *D3DDevice Direct3DDevice8 <interface>
   ) AS D3DXMesh                                        ' __retval_out **ppCloneMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD GetVertexBuffer ( _                           ' VTable offset = 48
   ) AS Direct3DVertexBuffer8                           ' __retval_out **ppVB Direct3DVertexBuffer8 <interface>
   ' =====================================================================================
   METHOD GetIndexBuffer ( _                            ' VTable offset = 52
   ) AS Direct3DIndexBuffer8                            ' __retval_out **ppIB Direct3DIndexBuffer8 <interface>
   ' =====================================================================================
   METHOD LockVertexBuffer ( _                          ' VTable offset = 56
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *VBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockVertexBuffer ( _                        ' VTable offset = 60
   )                                                    ' void
   ' =====================================================================================
   METHOD LockIndexBuffer ( _                           ' VTable offset = 64
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *IBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockIndexBuffer ( _                         ' VTable offset = 68
   )                                                    ' void
   ' =====================================================================================
   METHOD GetAttributeTable ( _                         ' VTable offset = 72
     BYVAL attribEntry AS DWORD _                       ' __inout *attribEntry VT_VOID <Dword>
   , BYREF attribTabSize AS LONG _                      ' __inout *attribTabSize VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConvertPointRepsToAdjacency ( _               ' VTable offset = 76
     BYVAL PointRep AS DWORD _                          ' *PointRep VT_VOID <Dword>
   , BYVAL Adjacency AS DWORD _                         ' *Adjacency VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD ConvertAdjacencyToPointReps ( _               ' VTable offset = 80
     BYVAL Adjacency AS DWORD _                         ' *Adjacency VT_VOID <Dword>
   , BYVAL PointRep AS DWORD _                          ' *PointRep VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GenerateAdjacency ( _                         ' VTable offset = 84
     BYVAL epsilon AS SINGLE _                          ' __in epsilon VT_R4 <Single>
   , BYVAL Adjacency AS DWORD _                         ' __inout *Adjacency VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXBaseMesh_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXSkinMesh
' IID = {82A53844-F322-409E-A2E9-992E1104069D}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXSkinMesh_INTERFACE_DEFINED)
    %D3DXSkinMesh_INTERFACE_DEFINED = 1

INTERFACE D3DXSkinMesh $IID_D3DXSkinMesh

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetNumFaces ( _                               ' VTable offset = 12
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumVertices ( _                            ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================
   METHOD GetFVF ( _                                    ' VTable offset = 20
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDeclaration ( _                            ' VTable offset = 24
     BYREF Declaration AS LONG _                        ' __inout *Declaration VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetOptions ( _                                ' VTable offset = 28
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 32
   ) AS Direct3DDevice8                                 ' __retval_out **ret Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD GetVertexBuffer ( _                           ' VTable offset = 36
   ) AS Direct3DVertexBuffer8                           ' __retval_out **ppVB Direct3DVertexBuffer8 <interface>
   ' =====================================================================================
   METHOD GetIndexBuffer ( _                            ' VTable offset = 40
   ) AS Direct3DIndexBuffer8                            ' __retval_out **ppIB Direct3DIndexBuffer8 <interface>
   ' =====================================================================================
   METHOD LockVertexBuffer ( _                          ' VTable offset = 44
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *VBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockVertexBuffer ( _                        ' VTable offset = 48
   )                                                    ' void
   ' =====================================================================================
   METHOD LockIndexBuffer ( _                           ' VTable offset = 52
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *IBuffAddr VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockIndexBuffer ( _                         ' VTable offset = 56
   )                                                    ' void
   ' =====================================================================================
   METHOD LockAttributeBuffer ( _                       ' VTable offset = 60
     BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *pData VT_I4 <Long>
   ' =====================================================================================
   METHOD UnlockAttributeBuffer ( _                     ' VTable offset = 64
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumBones ( _                               ' VTable offset = 68
   )                                                    ' void
   ' =====================================================================================
   METHOD GetOriginalMesh ( _                           ' VTable offset = 72
   ) AS D3DXMesh                                        ' __retval_out **pMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD SetBoneInfluence ( _                          ' VTable offset = 76
     BYVAL bone AS LONG _                               ' __in bone VT_I4 <Long>
   , BYVAL numInfluences AS LONG _                      ' __in numInfluences VT_I4 <Long>
   , BYREF vertices AS LONG _                           ' __in *vertices VT_I4 <Long>
   , BYREF weights AS SINGLE _                          ' __in *weights VT_R4 <Single>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetNumBoneInfluences ( _                      ' VTable offset = 80
     BYVAL bone AS LONG _                               ' __in bone VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetBoneInfluence ( _                          ' VTable offset = 84
     BYVAL bone AS LONG _                               ' __in bone VT_I4 <Long>
   , BYREF vertices AS LONG _                           ' __inout *vertices VT_I4 <Long>
   , BYREF weights AS SINGLE _                          ' __inout *weights VT_R4 <Single>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetMaxVertexInfluences ( _                    ' VTable offset = 88
   ) AS LONG                                            ' __retval_out *maxVertexInfluences VT_I4 <Long>
   ' =====================================================================================
   METHOD GetMaxFaceInfluences ( _                      ' VTable offset = 92
   ) AS LONG                                            ' __retval_out *maxFaceInfluences VT_I4 <Long>
   ' =====================================================================================
   METHOD ConvertToBlendedMesh ( _                      ' VTable offset = 96
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL adjacencyIn AS DWORD _                       ' __in *adjacencyIn VT_VOID <Dword>
   , BYVAL adjacencyOut AS DWORD _                      ' __inout *adjacencyOut VT_VOID <Dword>
   , BYREF RetNumBoneCombinations AS LONG _             ' __inout *RetNumBoneCombinations VT_I4 <Long>
   , BYREF RetBoneCombinationTable AS D3DXBuffer _      ' __inout **RetBoneCombinationTable D3DXBuffer <interface>
   , BYVAL pFaceRemap AS DWORD _                        ' __inout *pFaceRemap VT_VOID <Dword>
   , BYREF VertexRemap AS D3DXBuffer _                  ' __inout **VertexRemap D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD ConvertToIndexedBlendedMesh ( _               ' VTable offset = 100
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL adjacencyIn AS DWORD _                       ' __in *adjacencyIn VT_VOID <Dword>
   , BYVAL paletteSize AS LONG _                        ' __in paletteSize VT_I4 <Long>
   , BYVAL adjacencyOut AS DWORD _                      ' __inout *adjacencyOut VT_VOID <Dword>
   , BYREF RetNumBoneCombinations AS LONG _             ' __inout *RetNumBoneCombinations VT_I4 <Long>
   , BYREF RetBoneCombinationTable AS D3DXBuffer _      ' __inout **RetBoneCombinationTable D3DXBuffer <interface>
   , BYVAL pFaceRemap AS DWORD _                        ' __inout *pFaceRemap VT_VOID <Dword>
   , BYREF VertexRemap AS D3DXBuffer _                  ' __inout **VertexRemap D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD GenerateSkinnedMesh ( _                       ' VTable offset = 104
     BYVAL options AS LONG _                            ' __in options VT_I4 <Long>
   , BYVAL minWeight AS SINGLE _                        ' __in minWeight VT_R4 <Single>
   , BYVAL adjacencyIn AS DWORD _                       ' __in *adjacencyIn VT_VOID <Dword>
   , BYVAL adjacencyOut AS DWORD _                      ' __inout *adjacencyOut VT_VOID <Dword>
   , BYVAL pFaceRemap AS DWORD _                        ' __inout *pFaceRemap VT_VOID <Dword>
   , BYREF VertexRemap AS D3DXBuffer _                  ' __inout **VertexRemap D3DXBuffer <interface>
   ) AS D3DXMesh                                        ' __retval_out **retMesh D3DXMesh <interface>
   ' =====================================================================================
   METHOD UpdateSkinnedMesh ( _                         ' VTable offset = 108
     BYVAL BoneTransformsIn AS DWORD _                  ' __in *BoneTransformsIn VT_VOID <Dword>
   , BYREF BoneInvTransforms AS D3DMATRIX _             ' __in *BoneInvTransforms D3DMATRIX <record>
   , BYVAL retMesh AS D3DXMesh _                        ' __inout *retMesh D3DXMesh <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXSkinMesh_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXSprite
' IID = {E8691849-87B8-4929-9050-1B0542D5538C}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXSprite_INTERFACE_DEFINED)
    %D3DXSprite_INTERFACE_DEFINED = 1

INTERFACE D3DXSprite $IID_D3DXSprite

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD Begin ( _                                     ' VTable offset = 16
   )                                                    ' void
   ' =====================================================================================
   METHOD Draw ( _                                      ' VTable offset = 20
     BYVAL SrcTexture AS Direct3DTexture8 _             ' __in *SrcTexture Direct3DTexture8 <interface>
   , BYVAL SrcRect AS DWORD _                           ' __in *SrcRect VT_VOID <Dword>
   , BYREF Scaling AS D3DVECTOR2 _                      ' __in *Scaling D3DVECTOR2 <record>
   , BYREF RotationCenter AS D3DVECTOR2 _               ' __in *RotationCenter D3DVECTOR2 <record>
   , BYVAL Rotation AS SINGLE _                         ' __in Rotation VT_R4 <Single>
   , BYREF Translation AS D3DVECTOR2 _                  ' __in *Translation D3DVECTOR2 <record>
   , BYVAL color AS LONG _                              ' __in color VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DrawTransform ( _                             ' VTable offset = 24
     BYVAL SrcTexture AS Direct3DTexture8 _             ' __in *SrcTexture Direct3DTexture8 <interface>
   , BYVAL SrcRect AS DWORD _                           ' __in *SrcRect VT_VOID <Dword>
   , BYREF TransformMatrix AS D3DMATRIX _               ' __in *TransformMatrix D3DMATRIX <record>
   , BYVAL color AS LONG _                              ' __in color VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD End ( _                                       ' VTable offset = 28
   )                                                    ' void
   ' =====================================================================================
   METHOD OnLostDevice ( _                              ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================
   METHOD OnResetDevice ( _                             ' VTable offset = 36
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXSprite_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = D3DXRenderToSurface
' IID = {69CC587C-E40C-458D-B5D3-B029E18EB60A}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%D3DXRenderToSurface_INTERFACE_DEFINED)
    %D3DXRenderToSurface_INTERFACE_DEFINED = 1

INTERFACE D3DXRenderToSurface $IID_D3DXRenderToSurface

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetDevice ( _                                 ' VTable offset = 12
   ) AS Direct3DDevice8                                 ' __retval_out **ppDevice Direct3DDevice8 <interface>
   ' =====================================================================================
   METHOD GetDesc ( _                                   ' VTable offset = 16
     BYREF Parameters AS D3DXRTS_DESC _                 ' __out *Parameters D3DXRTS_DESC <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD BeginScene ( _                                ' VTable offset = 20
     BYVAL Surface AS Direct3DSurface8 _                ' __in *Surface Direct3DSurface8 <interface>
   , BYREF viewport AS D3DVIEWPORT8 _                   ' __in *viewport D3DVIEWPORT8 <record>
   )                                                    ' void
   ' =====================================================================================
   METHOD EndScene ( _                                  ' VTable offset = 24
   )                                                    ' void
   ' =====================================================================================
   METHOD OnLostDevice ( _                              ' VTable offset = 28
   )                                                    ' void
   ' =====================================================================================
   METHOD OnResetDevice ( _                             ' VTable offset = 32
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __D3DXRenderToSurface_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectXFile
' IID = {E7FF12E3-96A5-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXFile_INTERFACE_DEFINED)
    %DirectXFile_INTERFACE_DEFINED = 1

INTERFACE DirectXFile $IID_DirectXFile

   INHERIT IAutomation

   ' =====================================================================================
   METHOD CreateEnumObject ( _                          ' VTable offset = 12
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   ) AS DirectXFileEnum                                 ' __retval_out **ret DirectXFileEnum <interface>
   ' =====================================================================================
   METHOD CreateSaveObject ( _                          ' VTable offset = 16
     BYVAL filename AS WSTRING _                        ' __in filename VT_BSTR
   , BYVAL flags AS LONG _                              ' __in flags VT_I4 <Long>
   ) AS DirectXFileSave                                 ' __retval_out **ret DirectXFileSave <interface>
   ' =====================================================================================
   METHOD RegisterTemplates ( _                         ' VTable offset = 20
     BYVAL templatedata AS DWORD _                      ' __in *templatedata VT_VOID <Dword>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD RegisterDefaultTemplates ( _                  ' VTable offset = 24
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXFile_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectXFileEnum
' IID = {E7FF12E4-96A5-11D3-AC85-00C04FC2C602}
' I_dxj_DirectXFileEnum  Interface
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXFileEnum_INTERFACE_DEFINED)
    %DirectXFileEnum_INTERFACE_DEFINED = 1

INTERFACE DirectXFileEnum $IID_DirectXFileEnum

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetNextDataObject ( _                         ' VTable offset = 12
   ) AS DirectXFileData                                 ' __retval_out **ret DirectXFileData <interface>
   ' =====================================================================================
   METHOD GetDataObjectById ( _                         ' VTable offset = 16
     BYVAL id AS WSTRING _                              ' __in id VT_BSTR
   , BYREF ret AS DirectXFileData _                     ' **ret DirectXFileData <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDataObjectByName ( _                       ' VTable offset = 20
     BYVAL id AS WSTRING _                              ' __in id VT_BSTR
   , BYREF ret AS DirectXFileData _                     ' **ret DirectXFileData <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXFileEnum_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectXFileData
' IID = {E7FF12E7-96A5-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXFileData_INTERFACE_DEFINED)
    %DirectXFileData_INTERFACE_DEFINED = 1

INTERFACE DirectXFileData $IID_DirectXFileData

   INHERIT IAutomation

   ' =====================================================================================
   METHOD InternalGetObject ( _                         ' VTable offset = 12
   ) AS IUnknown                                        ' __retval_out **ret VT_UNKNOWN <IUnknown>
   ' =====================================================================================
   METHOD InternalSetObject ( _                         ' VTable offset = 16
     BYVAL realinterface AS IUnknown _                  ' __in *realinterface VT_UNKNOWN <IUnknown>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 20
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetId ( _                                     ' VTable offset = 24
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetDataSize ( _                               ' VTable offset = 28
     BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   ) AS LONG                                            ' __retval_out *Size VT_I4 <Long>
   ' =====================================================================================
   METHOD GetData ( _                                   ' VTable offset = 32
     BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetType ( _                                   ' VTable offset = 36
   ) AS WSTRING                                         ' __retval_out *Type VT_BSTR
   ' =====================================================================================
   METHOD GetNextObject ( _                             ' VTable offset = 40
   ) AS DirectXFileObject                               ' __retval_out **Type DirectXFileObject <interface>
   ' =====================================================================================
   METHOD AddDataObject ( _                             ' VTable offset = 44
     BYVAL Data AS DirectXFileData _                    ' __in *Data DirectXFileData <interface>
   )                                                    ' void
   ' =====================================================================================
   METHOD AddDataReference ( _                          ' VTable offset = 48
     BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   , BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   )                                                    ' void
   ' =====================================================================================
   METHOD AddBinaryObject ( _                           ' VTable offset = 52
     BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   , BYVAL guidObject AS WSTRING _                      ' __in guidObject VT_BSTR
   , BYVAL MimeType AS WSTRING _                        ' __in MimeType VT_BSTR
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD GetDataFromOffset ( _                         ' VTable offset = 56
     BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   , BYVAL Offset AS LONG _                             ' __in Offset VT_I4 <Long>
   , BYVAL bytecount AS LONG _                          ' __in bytecount VT_I4 <Long>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXFileData_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectXFileObject
' IID = {E7FF12E6-96A5-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXFileObject_INTERFACE_DEFINED)
    %DirectXFileObject_INTERFACE_DEFINED = 1

INTERFACE DirectXFileObject $IID_DirectXFileObject

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 12
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetId ( _                                     ' VTable offset = 16
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXFileObject_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectXFileSave
' IID = {E7FF12E5-96A5-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXFileSave_INTERFACE_DEFINED)
    %DirectXFileSave_INTERFACE_DEFINED = 1

INTERFACE DirectXFileSave $IID_DirectXFileSave

   INHERIT IAutomation

   ' =====================================================================================
   METHOD SaveTemplates ( _                             ' VTable offset = 12
     BYVAL count AS LONG _                              ' __in count VT_I4 <Long>
   , BYREF templateGuids AS DWORD _                     ' **templateGuids VT_SAFEARRAY
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateDataObject ( _                          ' VTable offset = 16
     BYVAL templateGuid AS WSTRING _                    ' __in templateGuid VT_BSTR
   , BYVAL name AS WSTRING _                            ' __in name VT_BSTR
   , BYVAL dataTypeGuid AS WSTRING _                    ' __in dataTypeGuid VT_BSTR
   , BYVAL bytecount AS LONG _                          ' __in bytecount VT_I4 <Long>
   , BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   ) AS DirectXFileData                                 ' __retval_out **ret DirectXFileData <interface>
   ' =====================================================================================
   METHOD SaveData ( _                                  ' VTable offset = 20
     BYVAL dataObj AS DirectXFileData _                 ' __in *dataObj DirectXFileData <interface>
   )                                                    ' void
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXFileSave_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectXFileReference
' IID = {E7FF12E8-96A5-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXFileReference_INTERFACE_DEFINED)
    %DirectXFileReference_INTERFACE_DEFINED = 1

INTERFACE DirectXFileReference $IID_DirectXFileReference

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 12
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetId ( _                                     ' VTable offset = 16
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD Resolve ( _                                   ' VTable offset = 20
   ) AS DirectXFileData                                 ' __retval_out **obj DirectXFileData <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXFileReference_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = DirectXFileBinary
' IID = {E7FF12E9-96A5-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%DirectXFileBinary_INTERFACE_DEFINED)
    %DirectXFileBinary_INTERFACE_DEFINED = 1

INTERFACE DirectXFileBinary $IID_DirectXFileBinary

   INHERIT IAutomation

   ' =====================================================================================
   METHOD GetName ( _                                   ' VTable offset = 12
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetId ( _                                     ' VTable offset = 16
   ) AS WSTRING                                         ' __retval_out *name VT_BSTR
   ' =====================================================================================
   METHOD GetSize ( _                                   ' VTable offset = 20
   ) AS LONG                                            ' __retval_out *Size VT_I4 <Long>
   ' =====================================================================================
   METHOD GetMimeType ( _                               ' VTable offset = 24
   ) AS WSTRING                                         ' __retval_out *mime VT_BSTR
   ' =====================================================================================
   METHOD Read ( _                                      ' VTable offset = 28
     BYVAL Data AS DWORD _                              ' __in *Data VT_VOID <Dword>
   , BYVAL Size AS LONG _                               ' __in Size VT_I4 <Long>
   ) AS LONG                                            ' __retval_out *Read VT_I4 <Long>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __DirectXFileBinary_INTERFACE_DEFINED__ */

' ########################################################################################
' Interface name = IDirectX8
' IID = {E7FF1301-96A5-11D3-AC85-00C04FC2C602}
' Inherited interface = IUnknown
' ########################################################################################

#IF NOT %DEF(%IDirectX8_INTERFACE_DEFINED)
    %IDirectX8_INTERFACE_DEFINED = 1

INTERFACE IDirectX8 $IID_IDirectX8

   INHERIT IAutomation

   ' =====================================================================================
   METHOD DirectSoundCreate ( _                         ' VTable offset = 12
     BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   ) AS DirectSound8                                    ' __retval_out **ret DirectSound8 <interface>
   ' =====================================================================================
   METHOD DirectSoundCaptureCreate ( _                  ' VTable offset = 16
     BYVAL guid AS WSTRING _                            ' __in guid VT_BSTR
   ) AS DirectSoundCapture8                             ' __retval_out **ret DirectSoundCapture8 <interface>
   ' =====================================================================================
   METHOD GetDSEnum ( _                                 ' VTable offset = 20
   ) AS DirectSoundEnum8                                ' __retval_out **retVal DirectSoundEnum8 <interface>
   ' =====================================================================================
   METHOD GetDSCaptureEnum ( _                          ' VTable offset = 24
   ) AS DirectSoundEnum8                                ' __retval_out **retVal DirectSoundEnum8 <interface>
   ' =====================================================================================
   METHOD DirectInputCreate ( _                         ' VTable offset = 28
   ) AS DirectInput8                                    ' __retval_out **ret DirectInput8 <interface>
   ' =====================================================================================
   METHOD DirectMusicLoaderCreate ( _                   ' VTable offset = 32
   ) AS DirectMusicLoader8                              ' __retval_out **ret DirectMusicLoader8 <interface>
   ' =====================================================================================
   METHOD DirectMusicComposerCreate ( _                 ' VTable offset = 36
   ) AS DirectMusicComposer8                            ' __retval_out **ret DirectMusicComposer8 <interface>
   ' =====================================================================================
   METHOD DirectMusicPerformanceCreate ( _              ' VTable offset = 40
   ) AS DirectMusicPerformance8                         ' __retval_out **ret DirectMusicPerformance8 <interface>
   ' =====================================================================================
   METHOD CreateEvent ( _                               ' VTable offset = 44
     BYVAL event AS DirectXEvent8 _                     ' __in *event DirectXEvent8 <interface>
   ) AS LONG                                            ' __retval_out *h VT_I4 <Long>
   ' =====================================================================================
   METHOD SetEvent ( _                                  ' VTable offset = 48
     BYVAL eventid AS LONG _                            ' __in eventid VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD DestroyEvent ( _                              ' VTable offset = 52
     BYVAL eventid AS LONG _                            ' __in eventid VT_I4 <Long>
   )                                                    ' void
   ' =====================================================================================
   METHOD CreateNewGuid ( _                             ' VTable offset = 56
   ) AS WSTRING                                         ' __retval_out *retGuid VT_BSTR
   ' =====================================================================================
   METHOD DirectPlayVoiceClientCreate ( _               ' VTable offset = 60
   ) AS DirectPlayVoiceClient8                          ' __retval_out **ret DirectPlayVoiceClient8 <interface>
   ' =====================================================================================
   METHOD DirectPlayVoiceServerCreate ( _               ' VTable offset = 64
   ) AS DirectPlayVoiceServer8                          ' __retval_out **ret DirectPlayVoiceServer8 <interface>
   ' =====================================================================================
   METHOD DirectPlayVoiceTestCreate ( _                 ' VTable offset = 68
   ) AS DirectPlayVoiceTest8                            ' __retval_out **ret DirectPlayVoiceTest8 <interface>
   ' =====================================================================================
   METHOD DirectXFileCreate ( _                         ' VTable offset = 72
   ) AS DirectXFile                                     ' __retval_out **ret DirectXFile <interface>
   ' =====================================================================================
   METHOD DirectPlayPeerCreate ( _                      ' VTable offset = 76
   ) AS DirectPlay8Peer                                 ' __retval_out **ret DirectPlay8Peer <interface>
   ' =====================================================================================
   METHOD DirectPlayServerCreate ( _                    ' VTable offset = 80
   ) AS DirectPlay8Server                               ' __retval_out **ret DirectPlay8Server <interface>
   ' =====================================================================================
   METHOD DirectPlayClientCreate ( _                    ' VTable offset = 84
   ) AS DirectPlay8Client                               ' __retval_out **ret DirectPlay8Client <interface>
   ' =====================================================================================
   METHOD DirectPlayAddressCreate ( _                   ' VTable offset = 88
   ) AS DirectPlay8Address                              ' __retval_out **ret DirectPlay8Address <interface>
   ' =====================================================================================
   METHOD Direct3DCreate ( _                            ' VTable offset = 92
   ) AS Direct3D8                                       ' __retval_out **ret Direct3D8 <interface>
   ' =====================================================================================
   METHOD DirectPlayLobbyClientCreate ( _               ' VTable offset = 96
   ) AS DirectPlay8LobbyClient                          ' __retval_out **ret DirectPlay8LobbyClient <interface>
   ' =====================================================================================
   METHOD DirectPlayLobbiedApplicationCreate ( _        ' VTable offset = 100
   ) AS DirectPlay8LobbiedApplication                   ' __retval_out **ret DirectPlay8LobbiedApplication <interface>
   ' =====================================================================================

END INTERFACE

#ENDIF   ' /* __IDirectX8_INTERFACE_DEFINED__ */


' ########################################################################################
'                            *** F U N C T I O N S ***
' ########################################################################################

' ========================================================================================
DECLARE FUNCTION D3DVertexBuffer8SetData IMPORT "dx8vb.dll" ALIAS "D3DVertexBuffer8SetData" ( _
   BYVAL VBuffer AS Direct3DVertexBuffer8 _             ' __in Direct3DVertexBuffer8 *VBuffer
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DVertexBuffer8GetData IMPORT "dx8vb.dll" ALIAS "D3DVertexBuffer8GetData" ( _
   BYVAL VBuffer AS Direct3DVertexBuffer8 _             ' __in Direct3DVertexBuffer8 *VBuffer
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DIndexBuffer8SetData IMPORT "dx8vb.dll" ALIAS "D3DIndexBuffer8SetData" ( _
   BYVAL IBuffer AS Direct3DIndexBuffer8 _              ' __in Direct3DIndexBuffer8 *IBuffer
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DIndexBuffer8GetData IMPORT "dx8vb.dll" ALIAS "D3DIndexBuffer8GetData" ( _
   BYVAL IBuffer AS Direct3DIndexBuffer8 _              ' __in Direct3DIndexBuffer8 *IBuffer
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMeshVertexBuffer8SetData IMPORT "dx8vb.dll" ALIAS "D3DXMeshVertexBuffer8SetData" ( _
   BYVAL d3dxmeshobj AS IUnknown _                      ' __in IUnknown d3dxmeshobj
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMeshVertexBuffer8GetData IMPORT "dx8vb.dll" ALIAS "D3DXMeshVertexBuffer8GetData" ( _
   BYVAL d3dxmeshobj AS IUnknown _                      ' __in IUnknown d3dxmeshobj
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMeshIndexBuffer8SetData IMPORT "dx8vb.dll" ALIAS "D3DXMeshIndexBuffer8SetData" ( _
   BYVAL d3dxmeshobj AS IUnknown _                      ' __in IUnknown d3dxmeshobj
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMeshIndexBuffer8GetData IMPORT "dx8vb.dll" ALIAS "D3DXMeshIndexBuffer8GetData" ( _
   BYVAL d3dxmeshobj AS IUnknown _                      ' __in IUnknown d3dxmeshobj
 , BYVAL Offset AS LONG _                               ' __in long Offset
 , BYVAL Size AS LONG _                                 ' __in long Size
 , BYVAL flags AS LONG _                                ' __in long flags
 , BYREF Data AS ANY _                                  ' __in void *Data
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION DXCopyMemory IMPORT "dx8vb.dll" ALIAS "DXCopyMemory" ( _
   BYREF dest AS ANY _                                  ' __in void *dest
 , BYREF src AS ANY _                                   ' __in void *src
 , BYVAL Size AS LONG _                                 ' __in long Size
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
' AUDIOCONSTANTS
' ========================================================================================

$DSFX_STANDARD_GARGLE                                   = "GUID_DSFX_STANDARD_GARGLE"
$DSFX_STANDARD_CHORUS                                   = "GUID_DSFX_STANDARD_CHORUS"
$DSFX_STANDARD_FLANGER                                  = "GUID_DSFX_STANDARD_FLANGER"
$DSFX_STANDARD_ECHO                                     = "GUID_DSFX_STANDARD_ECHO"
$DSFX_STANDARD_DISTORTION                               = "GUID_DSFX_STANDARD_DISTORTION"
$DSFX_STANDARD_COMPRESSOR                               = "GUID_DSFX_STANDARD_COMPRESSOR"
$DSFX_STANDARD_I3DL2REVERB                              = "GUID_DSFX_STANDARD_I3DL2REVERB"
$DSFX_STANDARD_PARAMEQ                                  = "GUID_DSFX_STANDARD_PARAMEQ"
$DSFX_STANDARD_WAVES_REVERB                             = "GUID_DSFX_WAVES_REVERB"
$IID_DirectSoundFXChorus                                = "IID_DirectSoundFXChorus"
$IID_DirectSoundFXCompressor                            = "IID_DirectSoundFXCompressor"
$IID_DirectSoundFXDistortion                            = "IID_DirectSoundFXDistortion"
$IID_DirectSoundFXEcho                                  = "IID_DirectSoundFXEcho"
$IID_DirectSoundFXFlanger                               = "IID_DirectSoundFXFlanger"
$IID_DirectSoundFXGargle                                = "IID_DirectSoundFXGargle"
$IID_DirectSoundFXI3DL2REVERB                           = "IID_DirectSoundFXI3DL2REVERB"
$IID_DirectSoundFXParamEq                               = "IID_DirectSoundFXParamEq"
$IID_DirectSoundFXWavesReverb                           = "IID_DirectSoundFXWavesReverb"
$IID_DirectSoundSecondaryBuffer                         = "IID_IDirectSoundBuffer8"
$IID_DirectSoundPrimaryBuffer                           = "IID_IDirectSoundBuffer"
$IID_DirectSound3DBuffer                                = "IID_IDirectSound3DBuffer"
$IID_DirectSound3DListener                              = "IID_IDirectSound3DListener"
$GUID_ALL                                               = "GUID_ALL_OBJECTS"
$GUID_DS3DALG_DEFAULT                                   = "DS3DALG_DEFAULT"
$GUID_DS3DALG_NO_VIRTUALIZATION                         = "DS3DALG_NO_VIRTUALIZATION"
$GUID_DS3DALG_HRTF_FULL                                 = "DS3DALG_HRTF_FULL"
$GUID_DS3DALG_HRTF_LIGHT                                = "DS3DALG_HRTF_LIGHT"

' ========================================================================================
' DINPUT8STRINGCONSTANTS
' ========================================================================================

$DIPROP_AUTOCENTER                                      = "diprop_autocenter"
$DIPROP_AXISMODE                                        = "diprop_axismode"
$DIPROP_BUFFERSIZE                                      = "diprop_buffersize"
$DIPROP_CALIBRATIONMODE                                 = "diprop_calibrationmode"
$DIPROP_DEADZONE                                        = "diprop_deadzone"
$DIPROP_RANGE                                           = "diprop_range"
$DIPROP_SATURATION                                      = "diprop_saturation"
$DIPROP_KEYNAME                                         = "diprop_keyname"
$DIPROP_SCANCODE                                        = "diprop_scancode"
$DIPROP_GRANULARITY                                     = "diprop_granularity"
$DIPROP_FFGAIN                                          = "diprop_ffgain"
$DIPROP_FFLOAD                                          = "diprop_ffload"
$DIPROP_CALIBRATION                                     = "diprop_calibration"
$DIPROP_GUIDANDPATH                                     = "diprop_guidandpath"
$DIPROP_INSTANCENAME                                    = "diprop_instancename"
$DIPROP_PRODUCTNAME                                     = "diprop_productname"
$DIPROP_JOYSTICKID                                      = "diprop_joystickid"
$DIPROP_GETPORTDISPLAYNAME                              = "diprop_getportdisplayname"
$DIPROP_PHYSICALRANGE                                   = "diprop_physicalrange"
$DIPROP_LOGICALRANGE                                    = "diprop_logicalrange"
$DIPROP_CPOINTS                                         = "diprop_cpoints"
$DIPROP_APPDATA                                         = "diprop_appdata"
$DIPROP_USERNAME                                        = "diprop_username"

' ========================================================================================
' DPLAY8STRINGCONSTANTS
' ========================================================================================

$DPN_KEY_APPLICATION_INSTANCE                           = "applicationinstance"
$DPN_KEY_BAUD                                           = "baud"
$DPN_KEY_DEVICE                                         = "device"
$DPN_KEY_FLOWCONTROL                                    = "flowcontrol"
$DPN_KEY_HOSTNAME                                       = "hostname"
$DPN_KEY_PARITY                                         = "parity"
$DPN_KEY_PHONENUMBER                                    = "phonenumber"
$DPN_KEY_PORT                                           = "port"
$DPN_KEY_PROGRAM                                        = "program"
$DPN_KEY_PROVIDER                                       = "provider"
$DPN_KEY_STOPBITS                                       = "stopbits"
%DPN_BAUD_RATE_9600                                     = 9600         ' &H2580
%DPN_BAUD_RATE_14400                                    = 14400        ' &H3840
%DPN_BAUD_RATE_19200                                    = 19200        ' &H4B00
%DPN_BAUD_RATE_38400                                    = 38400        ' &H9600
%DPN_BAUD_RATE_56000                                    = 56000        ' &HDAC0
%DPN_BAUD_RATE_57600                                    = 57600        ' &HE100
%DPN_BAUD_RATE_115200                                   = 115200       ' &H1C200
$DPN_STOP_BITS_ONE                                      = "1"
$DPN_STOP_BITS_ONE_FIVE                                 = "1.5"
$DPN_STOP_BITS_TWO                                      = "2"
$DPN_PARITY_NONE                                        = "NONE"
$DPN_PARITY_EVEN                                        = "EVEN"
$DPN_PARITY_ODD                                         = "ODD"
$DPN_PARITY_MARK                                        = "MARK"
$DPN_PARITY_SPACE                                       = "SPACE"
$DPN_FLOW_CONTROL_NONE                                  = "NONE"
$DPN_FLOW_CONTROL_XONXOFF                               = "XONXOFF"
$DPN_FLOW_CONTROL_RTS                                   = "RTS"
$DPN_FLOW_CONTROL_DTR                                   = "DTR"
$DPN_FLOW_CONTROL_RTSDTR                                = "RTSDTR"
$DPN_SEPARATOR_KEYVALUE                                 = "="
$DPN_SEPARATOR_USERDATA                                 = "#"
$DPN_SEPARATOR_COMPONENT                                = ";"
$DPN_ESCAPECHAR                                         = "%"
$DPN_HEADER                                             = "x-directplay:/"
$DPN_VALUE_TCPIPPROVIDER                                = "IP"
$DPN_VALUE_IPXPROVIDER                                  = "IPX"
$DPN_VALUE_MODEMPROVIDER                                = "MODEM"
$DPN_VALUE_SERIALPROVIDER                               = "SERIAL"
$DP8SP_TCPIP                                            = "CLSID_DP8SP_TCPIP"
$DP8SP_IPX                                              = "CLSID_DP8SP_IPX"
$DP8SP_MODEM                                            = "CLSID_DP8SP_MODEM"
$DP8SP_SERIAL                                           = "CLSID_DP8SP_SERIAL"
$DSDEVID_DEFAULTPLAYBACK                                = "DSDEVID_DEFAULTPLAYBACK"
$DSDEVID_DEFAULTCAPTURE                                 = "DSDEVID_DEFAULTCAPTURE"
$DSDEVID_DEFAULTVOICEPLAYBACK                           = "DSDEVID_DEFAULTVOICEPLAYBACK"
$DSDEVID_DEFAULTVOICECAPTURE                            = "DSDEVID_DEFAULTVOICECAPTURE"

' ========================================================================================
DECLARE FUNCTION NewBuffer IMPORT "dx8vb.dll" ALIAS "VB_NewBuffer" ( _
   BYREF Buffer AS DWORD _                              ' __in_out SAFEARRAY *Buffer
 , BYREF lOffset AS LONG _                              ' __out long *lOffset
 ) AS LONG                                              ' HRESULT
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION AddDataToBuffer IMPORT "dx8vb.dll" ALIAS "VB_AddDataToBuffer" ( _
   BYREF Buffer AS DWORD _                              ' __in_out SAFEARRAY *Buffer
 , BYREF lData AS ANY _                                 ' __in void *lData
 , BYVAL lSize AS LONG _                                ' __in long lSize
 , BYREF lOffset AS LONG _                              ' __in_out long *lOffset
 ) AS LONG                                              ' HRESULT
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION AddStringToBuffer IMPORT "dx8vb.dll" ALIAS "VB_AddStringToBuffer" ( _
   BYREF Buffer AS DWORD _                              ' __in_out SAFEARRAY *Buffer
 , BYVAL StringData AS WSTRING _                        ' __in BSTR StringData
 , BYREF lOffset AS LONG _                              ' __in_out long *lOffset
 ) AS LONG                                              ' HRESULT
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION GetDataFromBuffer IMPORT "dx8vb.dll" ALIAS "VB_GetDataFromBuffer" ( _
   BYREF Buffer AS DWORD _                              ' __in_out SAFEARRAY *Buffer
 , BYREF lData AS ANY _                                 ' __in void *lData
 , BYVAL lSize AS LONG _                                ' __in long lSize
 , BYREF lOffset AS LONG _                              ' __in_out long *lOffset
  ) AS LONG                                             ' HRESULT
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION GetStringFromBuffer IMPORT "dx8vb.dll" ALIAS "VB_GetStringFromBuffer" ( _
   BYREF Buffer AS DWORD _                              ' __in_out SAFEARRAY *Buffer
 , BYREF lOffset AS LONG _                              ' __in_out long *lOffset
 , BYREF sData AS WSTRING _                             ' __out BSTR *sData
 ) AS LONG                                              ' HRESULT
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Length IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Length" ( _
   BYREF v AS D3DVECTOR2 _                              ' __in D3DVECTOR2 *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2LengthSq IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2LengthSq" ( _
   BYREF v AS D3DVECTOR2 _                              ' __in D3DVECTOR2 *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Dot IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Dot" ( _
   BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2CCW IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2CCW" ( _
   BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Add IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Add" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Subtract IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Subtract" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Minimize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Minimize" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Maximize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Maximize" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Scale IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Scale" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Lerp IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Lerp" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Normalize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Normalize" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v AS D3DVECTOR2 _                              ' __in D3DVECTOR2 *v
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Hermite IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Hermite" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF T1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *T1
 , BYREF V2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *V2
 , BYREF T2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *T2
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2BaryCentric IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2BaryCentric" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF V2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *V2
 , BYREF V3 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *V3
 , BYVAL f AS SINGLE _                                  ' __in float f
 , BYVAL g AS SINGLE _                                  ' __in float g
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2Transform IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2Transform" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __in_out D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2TransformCoord IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2TransformCoord" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2TransformNormal IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2TransformNormal" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec2CatmullRom IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec2CatmullRom" ( _
   BYREF VOut AS D3DVECTOR2 _                           ' __in_out D3DVECTOR2 *VOut
 , BYREF V0 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *V0
 , BYREF v1 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v1
 , BYREF v2 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v2
 , BYREF v3 AS D3DVECTOR2 _                             ' __in D3DVECTOR2 *v3
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Length IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Length" ( _
   BYREF v AS D3DVECTOR _                               ' __in D3DVECTOR *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3LengthSq IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3LengthSq" ( _
   BYREF v AS D3DVECTOR _                               ' __in D3DVECTOR *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Dot IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Dot" ( _
   BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Cross IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Cross" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Add IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Add" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Subtract IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Subtract" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Minimize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Minimize" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Maximize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Maximize" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Scale IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Scale" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Lerp IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Lerp" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Normalize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Normalize" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v AS D3DVECTOR _                               ' __in D3DVECTOR *v
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Hermite IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Hermite" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF T1 AS D3DVECTOR _                              ' __in D3DVECTOR *T1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 , BYREF T2 AS D3DVECTOR _                              ' __in D3DVECTOR *T2
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3BaryCentric IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3BaryCentric" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 , BYREF V3 AS D3DVECTOR _                              ' __in D3DVECTOR *V3
 , BYVAL f AS SINGLE _                                  ' __in float f
 , BYVAL g AS SINGLE _                                  ' __in float g
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Transform IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Transform" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __in_out D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3TransformCoord IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3TransformCoord" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3TransformNormal IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3TransformNormal" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3CatmullRom IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3CatmullRom" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF V0 AS D3DVECTOR _                              ' __in D3DVECTOR *V0
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 , BYREF V3 AS D3DVECTOR _                              ' __in D3DVECTOR *V3
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Project IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Project" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v AS D3DVECTOR _                               ' __in D3DVECTOR *v
 , BYREF viewport AS D3DVIEWPORT8 _                     ' __in D3DVIEWPORT8 *viewport
 , BYREF Projection AS D3DMATRIX _                      ' __in D3DMATRIX *Projection
 , BYREF view AS D3DMATRIX _                            ' __in D3DMATRIX *view
 , BYREF World AS D3DMATRIX _                           ' __in D3DMATRIX *World
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec3Unproject IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec3Unproject" ( _
   BYREF VOut AS D3DVECTOR _                            ' __in_out D3DVECTOR *VOut
 , BYREF v AS D3DVECTOR _                               ' __in D3DVECTOR *v
 , BYREF viewport AS D3DVIEWPORT8 _                     ' __in D3DVIEWPORT8 *viewport
 , BYREF Projection AS D3DMATRIX _                      ' __in D3DMATRIX *Projection
 , BYREF view AS D3DMATRIX _                            ' __in D3DMATRIX *view
 , BYREF World AS D3DMATRIX _                           ' __in D3DMATRIX *World
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Length IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Length" ( _
   BYREF v AS D3DVECTOR4 _                              ' __in D3DVECTOR4 *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4LengthSq IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4LengthSq" ( _
   BYREF v AS D3DVECTOR4 _                              ' __in D3DVECTOR4 *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Dot IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Dot" ( _
   BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF v4 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v4
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Add IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Add" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __in_out D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Subtract IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Subtract" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __in_out D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Minimize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Minimize" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Maximize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Maximize" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Scale IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Scale" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Lerp IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Lerp" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Cross IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Cross" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 , BYREF V3 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V3
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Normalize IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Normalize" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v AS D3DVECTOR4 _                              ' __in D3DVECTOR4 *v
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Hermite IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Hermite" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF T1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *T1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 , BYREF T2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *T2
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4BaryCentric IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4BaryCentric" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 , BYREF V3 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V3
 , BYVAL f AS SINGLE _                                  ' __in float f
 , BYVAL g AS SINGLE _                                  ' __in float g
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4Transform IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4Transform" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXVec4CatmullRom IMPORT "dx8vb.dll" ALIAS "VB_D3DXVec4CatmullRom" ( _
   BYREF VOut AS D3DVECTOR4 _                           ' __inout D3DVECTOR4 *VOut
 , BYREF V0 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V0
 , BYREF v1 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *v1
 , BYREF V2 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V2
 , BYREF V3 AS D3DVECTOR4 _                             ' __in D3DVECTOR4 *V3
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixIdentity IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixIdentity" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixIsIdentity IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixIsIdentity" ( _
   BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixfDeterminant IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixfDeterminant" ( _
   BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixMultiply IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixMultiply" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF M1 AS D3DMATRIX _                              ' __in D3DMATRIX *M1
 , BYREF M2 AS D3DMATRIX _                              ' __in D3DMATRIX *M2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixTranspose IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixTranspose" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixInverse IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixInverse" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF Determinant AS SINGLE _                        ' __inout float *Determinant
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixScaling IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixScaling" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL x AS SINGLE _                                  ' __in float x
 , BYVAL y AS SINGLE _                                  ' __in float y
 , BYVAL z AS SINGLE _                                  ' __in float z
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixTranslation IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixTranslation" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL x AS SINGLE _                                  ' __in float x
 , BYVAL y AS SINGLE _                                  ' __in float y
 , BYVAL z AS SINGLE _                                  ' __in float z
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixRotationX IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixRotationX" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL angle AS SINGLE _                              ' __in float angle
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixRotationY IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixRotationY" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL angle AS SINGLE _                              ' __in float angle
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixRotationZ IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixRotationZ" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL angle AS SINGLE _                              ' __in float angle
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixRotationAxis IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixRotationAxis" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF VAxis AS D3DVECTOR _                           ' __in D3DVECTOR *VAxis
 , BYVAL angle AS SINGLE _                              ' __in float angle
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixRotationQuaternion IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixRotationQuaternion" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixRotationYawPitchRoll IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixRotationYawPitchRoll" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL yaw AS SINGLE _                                ' __in float yaw
 , BYVAL Pitch AS SINGLE _                              ' __in float Pitch
 , BYVAL roll AS SINGLE _                               ' __in float roll
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixTransformation IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixTransformation" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF VScaleCenter AS D3DVECTOR _                    ' __in D3DVECTOR *VScaleCenter
 , BYREF QScaleRotation AS D3DQUATERNION _              ' __in D3DQUATERNION *QScaleRotation
 , BYREF VScale AS D3DVECTOR _                          ' __in D3DVECTOR *VScale
 , BYREF VRotationCenter AS D3DVECTOR _                 ' __in D3DVECTOR *VRotationCenter
 , BYREF QRotation AS D3DQUATERNION _                   ' __in D3DQUATERNION *QRotation
 , BYREF VTranslation AS D3DVECTOR _                    ' __in D3DVECTOR *VTranslation
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixAffineTransformation IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixAffineTransformation" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL Scaling AS SINGLE _                            ' __in float Scaling
 , BYREF VRotationCenter AS D3DVECTOR _                 ' __in D3DVECTOR *VRotationCenter
 , BYREF QRotation AS D3DQUATERNION _                   ' __in D3DQUATERNION *QRotation
 , BYREF VTranslation AS D3DVECTOR _                    ' __in D3DVECTOR *VTranslation
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixLookAtRH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixLookAtRH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF VEye AS D3DVECTOR _                            ' __in D3DVECTOR *VEye
 , BYREF VAt AS D3DVECTOR _                             ' __in D3DVECTOR *VAt
 , BYREF VUp AS D3DVECTOR _                             ' __in D3DVECTOR *VUp
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixLookAtLH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixLookAtLH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF VEye AS D3DVECTOR _                            ' __in D3DVECTOR *VEye
 , BYREF VAt AS D3DVECTOR _                             ' __in D3DVECTOR *VAt
 , BYREF VUp AS D3DVECTOR _                             ' __in D3DVECTOR *VUp
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixPerspectiveRH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixPerspectiveRH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL w AS SINGLE _                                  ' __in float w
 , BYVAL h AS SINGLE _                                  ' __in float h
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixPerspectiveLH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixPerspectiveLH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL w AS SINGLE _                                  ' __in float w
 , BYVAL h AS SINGLE _                                  ' __in float h
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixPerspectiveFovRH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixPerspectiveFovRH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL fovy AS SINGLE _                               ' __in float fovy
 , BYVAL aspect AS SINGLE _                             ' __in float aspect
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixPerspectiveFovLH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixPerspectiveFovLH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL fovy AS SINGLE _                               ' __in float fovy
 , BYVAL aspect AS SINGLE _                             ' __in float aspect
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixPerspectiveOffCenterRH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixPerspectiveOffCenterRH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL l AS SINGLE _                                  ' __in float l
 , BYVAL r AS SINGLE _                                  ' __in float r
 , BYVAL b AS SINGLE _                                  ' __in float b
 , BYVAL t AS SINGLE _                                  ' __in float t
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixPerspectiveOffCenterLH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixPerspectiveOffCenterLH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL l AS SINGLE _                                  ' __in float l
 , BYVAL r AS SINGLE _                                  ' __in float r
 , BYVAL b AS SINGLE _                                  ' __in float b
 , BYVAL t AS SINGLE _                                  ' __in float t
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixOrthoRH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixOrthoRH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL w AS SINGLE _                                  ' __in float w
 , BYVAL h AS SINGLE _                                  ' __in float h
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixOrthoLH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixOrthoLH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL w AS SINGLE _                                  ' __in float
 , BYVAL h AS SINGLE _                                  ' __in float
 , BYVAL zn AS SINGLE _                                 ' __in float
 , BYVAL zf AS SINGLE _                                 ' __in float
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixOrthoOffCenterRH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixOrthoOffCenterRH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL l AS SINGLE _                                  ' __in float l
 , BYVAL r AS SINGLE _                                  ' __in float r
 , BYVAL b AS SINGLE _                                  ' __in float b
 , BYVAL t AS SINGLE _                                  ' __in float t
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixOrthoOffCenterLH IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixOrthoOffCenterLH" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYVAL l AS SINGLE _                                  ' __in float l
 , BYVAL r AS SINGLE _                                  ' __in float r
 , BYVAL b AS SINGLE _                                  ' __in float b
 , BYVAL t AS SINGLE _                                  ' __in float t
 , BYVAL zn AS SINGLE _                                 ' __in float zn
 , BYVAL zf AS SINGLE _                                 ' __in float zf
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixShadow IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixShadow" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF VLight AS D3DVECTOR4 _                         ' __in D3DVECTOR4 *VLight
 , BYREF plane AS D3DPLANE _                            ' __in D3DPLANE *plane
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXMatrixReflect IMPORT "dx8vb.dll" ALIAS "VB_D3DXMatrixReflect" ( _
   BYREF MOut AS D3DMATRIX _                            ' __inout D3DMATRIX *MOut
 , BYREF plane AS D3DPLANE _                            ' __in D3DPLANE *plane
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionLength IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionLength" ( _
   BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionLengthSq IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionLengthSq" ( _
   BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionIdentity IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionIdentity" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionIsIdentity IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionIsIdentity" ( _
   BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionConjugate IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionConjugate" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionToAxisAngle IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionToAxisAngle" ( _
   BYREF Q AS D3DQUATERNION _                           ' __inout D3DQUATERNION *Q
 , BYREF VAxis AS D3DVECTOR _                           ' __inout D3DVECTOR *VAxis
 , BYREF angle AS SINGLE _                              ' __inout float *angle
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionRotationMatrix IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionRotationMatrix" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionRotationAxis IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionRotationAxis" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF VAxis AS D3DVECTOR _                           ' __in D3DVECTOR *VAxis
 , BYVAL angle AS SINGLE _                              ' __in float angle
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionRotationYawPitchRoll IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionRotationYawPitchRoll" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYVAL yaw AS SINGLE _                                ' __in float yaw
 , BYVAL Pitch AS SINGLE _                              ' __in float Pitch
 , BYVAL roll AS SINGLE _                               ' __in float roll
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionMultiply IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionMultiply" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q1 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q1
 , BYREF Q2 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionNormalize IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionNormalize" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionInverse IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionInverse" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionLn IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionLn" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionExp IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionExp" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q AS D3DQUATERNION _                           ' __in D3DQUATERNION *Q
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionSlerp IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionSlerp" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q1 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q1
 , BYREF Q2 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q2
 , BYVAL t AS SINGLE _                                  ' __in float t
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionSquad IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionSquad" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q1 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q1
 , BYREF Q2 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q2
 , BYREF Q3 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q3
 , BYREF Q4 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q4
 , BYVAL t AS SINGLE _                                  ' __in float t
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionBaryCentric IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionBaryCentric" ( _
   BYREF QOut AS D3DQUATERNION _                        ' __inout D3DQUATERNION *QOut
 , BYREF Q1 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q1
 , BYREF Q2 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q2
 , BYREF Q3 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q3
 , BYVAL f AS SINGLE _                                  ' __in float f
 , BYVAL g AS SINGLE _                                  ' __in float g
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXQuaternionDot IMPORT "dx8vb.dll" ALIAS "VB_D3DXQuaternionDot" ( _
   BYREF Q1 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q1
 , BYREF Q2 AS D3DQUATERNION _                          ' __in D3DQUATERNION *Q2
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneDot IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneDot" ( _
   BYREF P1 AS D3DPLANE _                               ' __in D3DPLANE *P1
 , BYREF P2 AS D3DPLANE _                               ' __in D3DPLANE *P2
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneDotCoord IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneDotCoord" ( _
   BYREF P1 AS D3DPLANE _                               ' __in D3DPLANE *P1
 , BYREF v AS D3DVECTOR _                               ' __in D3DVECTOR *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneDotNormal IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneDotNormal" ( _
   BYREF P1 AS D3DPLANE _                               ' __in D3DPLANE *P1
 , BYREF v AS D3DVECTOR _                               ' __in D3DVECTOR *v
 ) AS SINGLE                                            ' float
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneNormalize IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneNormalize" ( _
   BYREF POut AS D3DPLANE _                             ' __inout D3DPLANE *POut
 , BYREF P AS D3DPLANE _                                ' __in D3DPLANE *P
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneIntersectLine IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneIntersectLine" ( _
   BYREF POut AS D3DPLANE _                             ' __inout D3DPLANE *POut
 , BYREF P AS D3DPLANE _                                ' __in D3DPLANE *P
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneFromPointNormal IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneFromPointNormal" ( _
   BYREF POut AS D3DPLANE _                             ' __inout D3DPLANE *POut
 , BYREF VPoint AS D3DVECTOR _                          ' __in D3DVECTOR *VPoint
 , BYREF VNormal AS D3DVECTOR _                         ' __in D3DVECTOR *VNormal
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneFromPoints IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneFromPoints" ( _
   BYREF POut AS D3DPLANE _                             ' __inout D3DPLANE *POut
 , BYREF v1 AS D3DVECTOR _                              ' __in D3DVECTOR *v1
 , BYREF V2 AS D3DVECTOR _                              ' __in D3DVECTOR *V2
 , BYREF V3 AS D3DVECTOR _                              ' __in D3DVECTOR *V3
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXPlaneTransform IMPORT "dx8vb.dll" ALIAS "VB_D3DXPlaneTransform" ( _
   BYREF POut AS D3DPLANE _                             ' __inout D3DPLANE *POut
 , BYREF P AS D3DPLANE _                                ' __in D3DPLANE *P
 , BYREF M AS D3DMATRIX _                               ' __in D3DMATRIX *M
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorNegative IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorNegative" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF c AS D3DCOLORVALUE _                           ' __in D3DCOLORVALUE *c
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorAdd IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorAdd" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF C1 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C1
 , BYREF C2 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorSubtract IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorSubtract" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF C1 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C1
 , BYREF C2 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorScale IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorScale" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF C1 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C1
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorModulate IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorModulate" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF C1 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C1
 , BYREF C2 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C2
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorLerp IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorLerp" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF C1 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C1
 , BYREF C2 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C2
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorAdjustSaturation IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorAdjustSaturation" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF C1 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C1
 , BYVAL s AS SINGLE _                                  ' __in float s
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DXColorAdjustContrast IMPORT "dx8vb.dll" ALIAS "VB_D3DXColorAdjustContrast" ( _
   BYREF COut AS D3DCOLORVALUE _                        ' __inout D3DCOLORVALUE *COut
 , BYREF C1 AS D3DCOLORVALUE _                          ' __in D3DCOLORVALUE *C1
 , BYVAL c AS SINGLE _                                  ' __in float c
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DColorRGBA IMPORT "dx8vb.dll" ALIAS "VB_D3DColorRGBA" ( _
   BYVAL r AS INTEGER _                                 ' __in short r
 , BYVAL g AS INTEGER _                                 ' __in short g
 , BYVAL b AS INTEGER _                                 ' __in short b
 , BYVAL a AS INTEGER _                                 ' __in short a
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DColorARGB IMPORT "dx8vb.dll" ALIAS "VB_D3DColorARGB" ( _
   BYVAL a AS INTEGER _                                 ' __in short a
 , BYVAL r AS INTEGER _                                 ' __in short r
 , BYVAL g AS INTEGER _                                 ' __in short g
 , BYVAL b AS INTEGER _                                 ' __in short b
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DColorXRGB IMPORT "dx8vb.dll" ALIAS "VB_D3DColorXRGB" ( _
   BYVAL r AS INTEGER _                                 ' __in short r
 , BYVAL g AS INTEGER _                                 ' __in short g
 , BYVAL b AS INTEGER _                                 ' __in short b
 ) AS LONG                                              ' long
' ========================================================================================

' ========================================================================================
DECLARE FUNCTION D3DColorMake IMPORT "dx8vb.dll" ALIAS "VB_D3DColorMake" ( _
   BYVAL r AS SINGLE _                                  ' __in short r
 , BYVAL g AS SINGLE _                                  ' __in short g
 , BYVAL b AS SINGLE _                                  ' __in short b
 , BYVAL a AS SINGLE _                                  ' __in short a
 ) AS LONG                                              ' long
' ========================================================================================
