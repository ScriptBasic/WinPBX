' ########################################################################################
' Microsoft Windows
' File: prntvpt.inc
' Contents: Print ticket APIs for Win32 applications
' Copyright (c) 2011 José Roca
' Portions Copyright (c) Microsoft Corporation.
' All Rights Reserved.
' THIS CODE AND INFORMATION IS PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND, EITHER
' EXPRESSED OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE IMPLIED WARRANTIES OF
' MERCHANTABILITY AND/OR FITNESS FOR A PARTICULAR PURPOSE.
' ########################################################################################

#INCLUDE THIS ONCE
%PRNTVPT_INC = 1

#INCLUDE ONCE "objidl.inc"

'DECLARE_HANDLE(HPTPROVIDER);

%PRINTTICKET_ISTREAM_APIS = 1

%S_PT_NO_CONFLICT                 = &H00040001???
%S_PT_CONFLICT_RESOLVED           = &H00040002???

'/*
'    PrintTicket stream provided by the caller did not
'    follow PrintTicket framework specification or the XML
'    could not be parsed.  If returned by
'    PTMergeAndValidatePrintTicket, it indicates that the
'    base ticket contained the error.
'*/
%E_PRINTTICKET_FORMAT             = &H80040003???

'/*
'    PrintCapabilities document generated by the driver
'    did not follow the specification.  This indicates an
'    error in the driver.
'*/
%E_PRINTCAPABILITIES_FORMAT       = &H80040004???

'/*
'    The delta print ticket parameter passed to
'    PTMergeAndValidatePrintTicket did not
'    follow PrintTicket framework specification or
'    the XML could not be parsed.
'*/
%E_DELTA_PRINTTICKET_FORMAT       = &H80040005???

' enum EDefaultDevmodeType
%kUserDefaultDevmode    = 0
%kPrinterDefaultDevmode = 1

' enum EPrintTicketScope
%kPTPageScope     = 0
%kPTDocumentScope = 1
%kPTJobScope      = 2

DECLARE FUNCTION PTQuerySchemaVersionSupport IMPORT "PRNTVPT.DLL" ALIAS "PTQuerySchemaVersionSupport" ( _
   BYREF pszPrinterName AS WSTRINGZ _                   ' __in  PCWSTR  pszPrinterName
 , BYREF pMaxVersion AS DWORD _                         ' __out DWORD  *pMaxVersion
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTOpenProvider IMPORT "PRNTVPT.DLL" ALIAS "PTOpenProvider" ( _
   BYREF pszPrinterName AS WSTRINGZ _                   ' __in  PCWSTR       pszPrinterName
 , BYVAL dwVersion AS DWORD _                           ' __in  DWORD        dwVersion
 , BYREF phProvider AS DWORD _                          ' __out HPTPROVIDER *phProvider
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTOpenProviderEx IMPORT "PRNTVPT.DLL" ALIAS "PTOpenProviderEx" ( _
   BYREF pszPrinterName AS WSTRINGZ _                   ' __in  PCWSTR       pszPrinterName
 , BYVAL dwMaxVersion AS DWORD _                        ' __in  DWORD        dwMaxVersion
 , BYVAL dwPrefVersion AS DWORD _                       ' __in  DWORD        dwPrefVersion
 , BYREF phProvider AS DWORD _                          ' __out HPTPROVIDER *phProvider
 , BYREF pUsedVersion AS DWORD _                        ' __out DWORD       *pUsedVersion
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTCloseProvider IMPORT "PRNTVPT.DLL" ALIAS "PTCloseProvider" ( _
   BYVAL hProvider AS DWORD _                           ' __in HPTPROVIDER hProvider
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTReleaseMemory IMPORT "PRNTVPT.DLL" ALIAS "PTReleaseMemory" ( _
   BYVAL pBuffer AS DWORD _                             ' __in PVOID pBuffer
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTGetPrintCapabilities IMPORT "PRNTVPT.DLL" ALIAS "PTGetPrintCapabilities" ( _
   BYVAL hProvider AS DWORD _                           ' __in      HPTPROVIDER        hProvider
 , BYVAL pPrintTicket AS IStream _                      ' __in_opt  IStream           *pPrintTicket
 , BYVAL pCapabilities AS IStream _                     ' __inout   IStream           *pCapabilities
 , BYREF pbstrErrorMessage AS WSTRING _                 ' __out_opt BSTR              *pbstrErrorMessage
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTMergeAndValidatePrintTicket IMPORT "PRNTVPT.DLL" ALIAS "PTMergeAndValidatePrintTicket" ( _
   BYVAL hProvider AS DWORD _                           ' __in      HPTPROVIDER  hProvider
 , BYVAL pBaseTicket AS IStream _                       ' __in      IStream     *pBaseTicket
 , BYVAL pDeltaTicket AS IStream _                      ' __in_opt  IStream     *pDeltaTicket
 , BYREF pbstrErrorMessage AS WSTRING _                 ' __out_opt BSTR        *pbstrErrorMessage
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTConvertPrintTicketToDevMode IMPORT "PRNTVPT.DLL" ALIAS "PTConvertPrintTicketToDevMode" ( _
   BYVAL hProvider AS DWORD _                           ' __in      HPTPROVIDER          hProvider
 , BYVAL pPrintTicket AS IStream _                      ' __in      IStream             *pPrintTicket
 , BYVAL baseDevmodeType AS DWORD _                     ' __in      EDefaultDevmodeType  baseDevmodeType
 , BYVAL scope AS DWORD _                               ' __in      EPrintTicketScope    scope
 , BYREF pcbDevmode AS DWORD _                          ' __out     ULONG               *pcbDevmode
 , BYREF ppDevmode AS DEVMODEA _                        ' __out     PDEVMODE            *ppDevmode
 , BYREF pbstrErrorMessage AS WSTRING _                 ' __out_opt BSTR                *pbstrErrorMessage
 ) AS LONG                                              ' HRESULT

DECLARE FUNCTION PTConvertDevModeToPrintTicket IMPORT "PRNTVPT.DLL" ALIAS "PTConvertDevModeToPrintTicket" ( _
   BYVAL hProvider AS DWORD _                           ' __in    HPTPROVIDER        hProvider
 , BYVAL cbDevmode AS DWORD _                           ' __in    ULONG              cbDevmode
 , BYREF pDevmode AS DEVMODEA _                         ' __in    PDEVMODE           pDevmode
 , BYVAL scope AS DWORD _                               ' __in    EPrintTicketScope  scope
 , BYVAL pPrintTicket AS IStream _                      ' __inout IStream           *pPrintTicket
 ) AS LONG                                              ' HRESULT
